

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Sep 19 19:08:58 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1  0000                     
      + 0000                     
     2                           ; Version 1.45
     3                           ; Generated 16/11/2017 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     clrz	macro
     4                           	bcf	3,2
     5                           	endm
     6  0000                     setc	macro
     7                           	bsf	3,0
     8                           	endm
     9  0000                     setz	macro
    10                           	bsf	3,2
    11                           	endm
    12  0000                     skipc	macro
    13                           	btfss	3,0
    14                           	endm
    15  0000                     skipz	macro
    16                           	btfss	3,2
    17                           	endm
    18  0000                     skipnc	macro
    19                           	btfsc	3,0
    20                           	endm
    21  0000                     skipnz	macro
    22                           	btfsc	3,2
    23                           	endm
    24  0000                     # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    25                           INDF equ 00h ;# 
    26  0000                     # 59 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    27                           TMR0 equ 01h ;# 
    28  0001                     # 66 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    29                           PCL equ 02h ;# 
    30  0002                     # 73 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    31                           STATUS equ 03h ;# 
    32  0003                     # 159 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    33                           FSR equ 04h ;# 
    34  0004                     # 166 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    35                           PORTA equ 05h ;# 
    36  0005                     # 216 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    37                           PORTB equ 06h ;# 
    38  0006                     # 278 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    39                           PORTC equ 07h ;# 
    40  0007                     # 340 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    41                           PORTD equ 08h ;# 
    42  0008                     # 402 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    43                           PORTE equ 09h ;# 
    44  0009                     # 434 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    45                           PCLATH equ 0Ah ;# 
    46  000A                     # 454 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    47                           INTCON equ 0Bh ;# 
    48  000B                     # 532 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    49                           PIR1 equ 0Ch ;# 
    50  000C                     # 594 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    51                           PIR2 equ 0Dh ;# 
    52  000D                     # 634 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    53                           TMR1 equ 0Eh ;# 
    54  000E                     # 641 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    55                           TMR1L equ 0Eh ;# 
    56  000E                     # 648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    57                           TMR1H equ 0Fh ;# 
    58  000F                     # 655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    59                           T1CON equ 010h ;# 
    60  0010                     # 730 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    61                           TMR2 equ 011h ;# 
    62  0011                     # 737 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    63                           T2CON equ 012h ;# 
    64  0012                     # 808 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    65                           SSPBUF equ 013h ;# 
    66  0013                     # 815 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    67                           SSPCON equ 014h ;# 
    68  0014                     # 885 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    69                           CCPR1 equ 015h ;# 
    70  0015                     # 892 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    71                           CCPR1L equ 015h ;# 
    72  0015                     # 899 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    73                           CCPR1H equ 016h ;# 
    74  0016                     # 906 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    75                           CCP1CON equ 017h ;# 
    76  0017                     # 964 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    77                           RCSTA equ 018h ;# 
    78  0018                     # 1059 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    79                           TXREG equ 019h ;# 
    80  0019                     # 1066 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    81                           RCREG equ 01Ah ;# 
    82  001A                     # 1073 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    83                           CCPR2 equ 01Bh ;# 
    84  001B                     # 1080 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    85                           CCPR2L equ 01Bh ;# 
    86  001B                     # 1087 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    87                           CCPR2H equ 01Ch ;# 
    88  001C                     # 1094 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    89                           CCP2CON equ 01Dh ;# 
    90  001D                     # 1152 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    91                           ADRESH equ 01Eh ;# 
    92  001E                     # 1159 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    93                           ADCON0 equ 01Fh ;# 
    94  001F                     # 1255 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    95                           OPTION_REG equ 081h ;# 
    96  0081                     # 1325 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    97                           TRISA equ 085h ;# 
    98  0085                     # 1375 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
    99                           TRISB equ 086h ;# 
   100  0086                     # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   101                           TRISC equ 087h ;# 
   102  0087                     # 1499 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   103                           TRISD equ 088h ;# 
   104  0088                     # 1561 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   105                           TRISE equ 089h ;# 
   106  0089                     # 1618 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   107                           PIE1 equ 08Ch ;# 
   108  008C                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   109                           PIE2 equ 08Dh ;# 
   110  008D                     # 1720 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   111                           PCON equ 08Eh ;# 
   112  008E                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   113                           SSPCON2 equ 091h ;# 
   114  0091                     # 1816 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   115                           PR2 equ 092h ;# 
   116  0092                     # 1823 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   117                           SSPADD equ 093h ;# 
   118  0093                     # 1830 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   119                           SSPSTAT equ 094h ;# 
   120  0094                     # 1999 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   121                           TXSTA equ 098h ;# 
   122  0098                     # 2080 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   123                           SPBRG equ 099h ;# 
   124  0099                     # 2087 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   125                           CMCON equ 09Ch ;# 
   126  009C                     # 2157 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   127                           CVRCON equ 09Dh ;# 
   128  009D                     # 2222 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   129                           ADRESL equ 09Eh ;# 
   130  009E                     # 2229 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   131                           ADCON1 equ 09Fh ;# 
   132  009F                     # 2288 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   133                           EEDATA equ 010Ch ;# 
   134  010C                     # 2295 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   135                           EEADR equ 010Dh ;# 
   136  010D                     # 2302 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   137                           EEDATH equ 010Eh ;# 
   138  010E                     # 2309 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   139                           EEADRH equ 010Fh ;# 
   140  010F                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   141                           EECON1 equ 018Ch ;# 
   142  018C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   143                           EECON2 equ 018Dh ;# 
   144  018D                     # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   145                           INDF equ 00h ;# 
   146  0000                     # 59 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   147                           TMR0 equ 01h ;# 
   148  0001                     # 66 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   149                           PCL equ 02h ;# 
   150  0002                     # 73 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   151                           STATUS equ 03h ;# 
   152  0003                     # 159 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   153                           FSR equ 04h ;# 
   154  0004                     # 166 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   155                           PORTA equ 05h ;# 
   156  0005                     # 216 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   157                           PORTB equ 06h ;# 
   158  0006                     # 278 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   159                           PORTC equ 07h ;# 
   160  0007                     # 340 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   161                           PORTD equ 08h ;# 
   162  0008                     # 402 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   163                           PORTE equ 09h ;# 
   164  0009                     # 434 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   165                           PCLATH equ 0Ah ;# 
   166  000A                     # 454 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   167                           INTCON equ 0Bh ;# 
   168  000B                     # 532 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   169                           PIR1 equ 0Ch ;# 
   170  000C                     # 594 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   171                           PIR2 equ 0Dh ;# 
   172  000D                     # 627 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   173                           TMR1 equ 0Eh ;# 
   174  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   175                           TMR1L equ 0Eh ;# 
   176  000E                     # 641 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   177                           TMR1H equ 0Fh ;# 
   178  000F                     # 648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   179                           T1CON equ 010h ;# 
   180  0010                     # 725 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   181                           TMR2 equ 011h ;# 
   182  0011                     # 732 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   183                           T2CON equ 012h ;# 
   184  0012                     # 803 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   185                           SSPBUF equ 013h ;# 
   186  0013                     # 810 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   187                           SSPCON equ 014h ;# 
   188  0014                     # 880 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   189                           CCPR1 equ 015h ;# 
   190  0015                     # 887 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   191                           CCPR1L equ 015h ;# 
   192  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   193                           CCPR1H equ 016h ;# 
   194  0016                     # 901 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   195                           CCP1CON equ 017h ;# 
   196  0017                     # 959 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   197                           RCSTA equ 018h ;# 
   198  0018                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   199                           TXREG equ 019h ;# 
   200  0019                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   201                           RCREG equ 01Ah ;# 
   202  001A                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   203                           CCPR2 equ 01Bh ;# 
   204  001B                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   205                           CCPR2L equ 01Bh ;# 
   206  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   207                           CCPR2H equ 01Ch ;# 
   208  001C                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   209                           CCP2CON equ 01Dh ;# 
   210  001D                     # 1147 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   211                           ADRESH equ 01Eh ;# 
   212  001E                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   213                           ADCON0 equ 01Fh ;# 
   214  001F                     # 1250 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   215                           OPTION_REG equ 081h ;# 
   216  0081                     # 1320 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   217                           TRISA equ 085h ;# 
   218  0085                     # 1370 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   219                           TRISB equ 086h ;# 
   220  0086                     # 1432 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   221                           TRISC equ 087h ;# 
   222  0087                     # 1494 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   223                           TRISD equ 088h ;# 
   224  0088                     # 1556 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   225                           TRISE equ 089h ;# 
   226  0089                     # 1613 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   227                           PIE1 equ 08Ch ;# 
   228  008C                     # 1675 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   229                           PIE2 equ 08Dh ;# 
   230  008D                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   231                           PCON equ 08Eh ;# 
   232  008E                     # 1742 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   233                           SSPCON2 equ 091h ;# 
   234  0091                     # 1804 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   235                           PR2 equ 092h ;# 
   236  0092                     # 1811 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   237                           SSPADD equ 093h ;# 
   238  0093                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   239                           SSPSTAT equ 094h ;# 
   240  0094                     # 1987 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   241                           TXSTA equ 098h ;# 
   242  0098                     # 2068 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   243                           SPBRG equ 099h ;# 
   244  0099                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   245                           ADRESL equ 09Eh ;# 
   246  009E                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   247                           ADCON1 equ 09Fh ;# 
   248  009F                     # 2135 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   249                           EEDATA equ 010Ch ;# 
   250  010C                     # 2142 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   251                           EEADR equ 010Dh ;# 
   252  010D                     # 2149 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   253                           EEDATH equ 010Eh ;# 
   254  010E                     # 2156 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   255                           EEADRH equ 010Fh ;# 
   256  010F                     # 2163 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   257                           EECON1 equ 018Ch ;# 
   258  018C                     # 2208 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   259                           EECON2 equ 018Dh ;# 
   260  018D                     # 31 "src/hardware.h"
   261                           psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# 
   262                           # 31 "src/hardware.h"
   263                           db 1,0,0,0,0,0,0,0 ;# 
   264  0000  0001 0000 0000 0000 0000 0000 0000 0000 # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   265                           INDF equ 00h ;# 
   266  0000                     # 59 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   267                           TMR0 equ 01h ;# 
   268  0001                     # 66 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   269                           PCL equ 02h ;# 
   270  0002                     # 73 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   271                           STATUS equ 03h ;# 
   272  0003                     # 159 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   273                           FSR equ 04h ;# 
   274  0004                     # 166 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   275                           PORTA equ 05h ;# 
   276  0005                     # 216 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   277                           PORTB equ 06h ;# 
   278  0006                     # 278 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   279                           PORTC equ 07h ;# 
   280  0007                     # 340 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   281                           PORTD equ 08h ;# 
   282  0008                     # 402 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   283                           PORTE equ 09h ;# 
   284  0009                     # 434 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   285                           PCLATH equ 0Ah ;# 
   286  000A                     # 454 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   287                           INTCON equ 0Bh ;# 
   288  000B                     # 532 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   289                           PIR1 equ 0Ch ;# 
   290  000C                     # 594 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   291                           PIR2 equ 0Dh ;# 
   292  000D                     # 634 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   293                           TMR1 equ 0Eh ;# 
   294  000E                     # 641 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   295                           TMR1L equ 0Eh ;# 
   296  000E                     # 648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   297                           TMR1H equ 0Fh ;# 
   298  000F                     # 655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   299                           T1CON equ 010h ;# 
   300  0010                     # 730 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   301                           TMR2 equ 011h ;# 
   302  0011                     # 737 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   303                           T2CON equ 012h ;# 
   304  0012                     # 808 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   305                           SSPBUF equ 013h ;# 
   306  0013                     # 815 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   307                           SSPCON equ 014h ;# 
   308  0014                     # 885 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   309                           CCPR1 equ 015h ;# 
   310  0015                     # 892 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   311                           CCPR1L equ 015h ;# 
   312  0015                     # 899 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   313                           CCPR1H equ 016h ;# 
   314  0016                     # 906 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   315                           CCP1CON equ 017h ;# 
   316  0017                     # 964 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   317                           RCSTA equ 018h ;# 
   318  0018                     # 1059 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   319                           TXREG equ 019h ;# 
   320  0019                     # 1066 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   321                           RCREG equ 01Ah ;# 
   322  001A                     # 1073 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   323                           CCPR2 equ 01Bh ;# 
   324  001B                     # 1080 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   325                           CCPR2L equ 01Bh ;# 
   326  001B                     # 1087 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   327                           CCPR2H equ 01Ch ;# 
   328  001C                     # 1094 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   329                           CCP2CON equ 01Dh ;# 
   330  001D                     # 1152 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   331                           ADRESH equ 01Eh ;# 
   332  001E                     # 1159 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   333                           ADCON0 equ 01Fh ;# 
   334  001F                     # 1255 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   335                           OPTION_REG equ 081h ;# 
   336  0081                     # 1325 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   337                           TRISA equ 085h ;# 
   338  0085                     # 1375 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   339                           TRISB equ 086h ;# 
   340  0086                     # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   341                           TRISC equ 087h ;# 
   342  0087                     # 1499 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   343                           TRISD equ 088h ;# 
   344  0088                     # 1561 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   345                           TRISE equ 089h ;# 
   346  0089                     # 1618 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   347                           PIE1 equ 08Ch ;# 
   348  008C                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   349                           PIE2 equ 08Dh ;# 
   350  008D                     # 1720 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   351                           PCON equ 08Eh ;# 
   352  008E                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   353                           SSPCON2 equ 091h ;# 
   354  0091                     # 1816 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   355                           PR2 equ 092h ;# 
   356  0092                     # 1823 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   357                           SSPADD equ 093h ;# 
   358  0093                     # 1830 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   359                           SSPSTAT equ 094h ;# 
   360  0094                     # 1999 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   361                           TXSTA equ 098h ;# 
   362  0098                     # 2080 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   363                           SPBRG equ 099h ;# 
   364  0099                     # 2087 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   365                           CMCON equ 09Ch ;# 
   366  009C                     # 2157 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   367                           CVRCON equ 09Dh ;# 
   368  009D                     # 2222 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   369                           ADRESL equ 09Eh ;# 
   370  009E                     # 2229 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   371                           ADCON1 equ 09Fh ;# 
   372  009F                     # 2288 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   373                           EEDATA equ 010Ch ;# 
   374  010C                     # 2295 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   375                           EEADR equ 010Dh ;# 
   376  010D                     # 2302 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   377                           EEDATH equ 010Eh ;# 
   378  010E                     # 2309 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   379                           EEADRH equ 010Fh ;# 
   380  010F                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   381                           EECON1 equ 018Ch ;# 
   382  018C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   383                           EECON2 equ 018Dh ;# 
   384  018D                     # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   385                           INDF equ 00h ;# 
   386  0000                     # 59 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   387                           TMR0 equ 01h ;# 
   388  0001                     # 66 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   389                           PCL equ 02h ;# 
   390  0002                     # 73 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   391                           STATUS equ 03h ;# 
   392  0003                     # 159 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   393                           FSR equ 04h ;# 
   394  0004                     # 166 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   395                           PORTA equ 05h ;# 
   396  0005                     # 216 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   397                           PORTB equ 06h ;# 
   398  0006                     # 278 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   399                           PORTC equ 07h ;# 
   400  0007                     # 340 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   401                           PORTD equ 08h ;# 
   402  0008                     # 402 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   403                           PORTE equ 09h ;# 
   404  0009                     # 434 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   405                           PCLATH equ 0Ah ;# 
   406  000A                     # 454 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   407                           INTCON equ 0Bh ;# 
   408  000B                     # 532 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   409                           PIR1 equ 0Ch ;# 
   410  000C                     # 594 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   411                           PIR2 equ 0Dh ;# 
   412  000D                     # 627 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   413                           TMR1 equ 0Eh ;# 
   414  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   415                           TMR1L equ 0Eh ;# 
   416  000E                     # 641 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   417                           TMR1H equ 0Fh ;# 
   418  000F                     # 648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   419                           T1CON equ 010h ;# 
   420  0010                     # 725 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   421                           TMR2 equ 011h ;# 
   422  0011                     # 732 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   423                           T2CON equ 012h ;# 
   424  0012                     # 803 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   425                           SSPBUF equ 013h ;# 
   426  0013                     # 810 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   427                           SSPCON equ 014h ;# 
   428  0014                     # 880 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   429                           CCPR1 equ 015h ;# 
   430  0015                     # 887 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   431                           CCPR1L equ 015h ;# 
   432  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   433                           CCPR1H equ 016h ;# 
   434  0016                     # 901 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   435                           CCP1CON equ 017h ;# 
   436  0017                     # 959 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   437                           RCSTA equ 018h ;# 
   438  0018                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   439                           TXREG equ 019h ;# 
   440  0019                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   441                           RCREG equ 01Ah ;# 
   442  001A                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   443                           CCPR2 equ 01Bh ;# 
   444  001B                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   445                           CCPR2L equ 01Bh ;# 
   446  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   447                           CCPR2H equ 01Ch ;# 
   448  001C                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   449                           CCP2CON equ 01Dh ;# 
   450  001D                     # 1147 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   451                           ADRESH equ 01Eh ;# 
   452  001E                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   453                           ADCON0 equ 01Fh ;# 
   454  001F                     # 1250 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   455                           OPTION_REG equ 081h ;# 
   456  0081                     # 1320 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   457                           TRISA equ 085h ;# 
   458  0085                     # 1370 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   459                           TRISB equ 086h ;# 
   460  0086                     # 1432 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   461                           TRISC equ 087h ;# 
   462  0087                     # 1494 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   463                           TRISD equ 088h ;# 
   464  0088                     # 1556 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   465                           TRISE equ 089h ;# 
   466  0089                     # 1613 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   467                           PIE1 equ 08Ch ;# 
   468  008C                     # 1675 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   469                           PIE2 equ 08Dh ;# 
   470  008D                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   471                           PCON equ 08Eh ;# 
   472  008E                     # 1742 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   473                           SSPCON2 equ 091h ;# 
   474  0091                     # 1804 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   475                           PR2 equ 092h ;# 
   476  0092                     # 1811 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   477                           SSPADD equ 093h ;# 
   478  0093                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   479                           SSPSTAT equ 094h ;# 
   480  0094                     # 1987 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   481                           TXSTA equ 098h ;# 
   482  0098                     # 2068 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   483                           SPBRG equ 099h ;# 
   484  0099                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   485                           ADRESL equ 09Eh ;# 
   486  009E                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   487                           ADCON1 equ 09Fh ;# 
   488  009F                     # 2135 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   489                           EEDATA equ 010Ch ;# 
   490  010C                     # 2142 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   491                           EEADR equ 010Dh ;# 
   492  010D                     # 2149 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   493                           EEDATH equ 010Eh ;# 
   494  010E                     # 2156 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   495                           EEADRH equ 010Fh ;# 
   496  010F                     # 2163 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   497                           EECON1 equ 018Ch ;# 
   498  018C                     # 2208 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   499                           EECON2 equ 018Dh ;# 
   500  018D                     # 31 "src/hardware.h"
   501                           psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# 
   502                           # 31 "src/hardware.h"
   503                           db 1,0,0,0,0,0,0,0 ;# 
   504  0008  0001 0000 0000 0000 0000 0000 0000 0000 # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   505                           INDF equ 00h ;# 
   506  0000                     # 59 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   507                           TMR0 equ 01h ;# 
   508  0001                     # 66 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   509                           PCL equ 02h ;# 
   510  0002                     # 73 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   511                           STATUS equ 03h ;# 
   512  0003                     # 159 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   513                           FSR equ 04h ;# 
   514  0004                     # 166 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   515                           PORTA equ 05h ;# 
   516  0005                     # 216 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   517                           PORTB equ 06h ;# 
   518  0006                     # 278 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   519                           PORTC equ 07h ;# 
   520  0007                     # 340 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   521                           PORTD equ 08h ;# 
   522  0008                     # 402 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   523                           PORTE equ 09h ;# 
   524  0009                     # 434 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   525                           PCLATH equ 0Ah ;# 
   526  000A                     # 454 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   527                           INTCON equ 0Bh ;# 
   528  000B                     # 532 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   529                           PIR1 equ 0Ch ;# 
   530  000C                     # 594 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   531                           PIR2 equ 0Dh ;# 
   532  000D                     # 634 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   533                           TMR1 equ 0Eh ;# 
   534  000E                     # 641 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   535                           TMR1L equ 0Eh ;# 
   536  000E                     # 648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   537                           TMR1H equ 0Fh ;# 
   538  000F                     # 655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   539                           T1CON equ 010h ;# 
   540  0010                     # 730 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   541                           TMR2 equ 011h ;# 
   542  0011                     # 737 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   543                           T2CON equ 012h ;# 
   544  0012                     # 808 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   545                           SSPBUF equ 013h ;# 
   546  0013                     # 815 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   547                           SSPCON equ 014h ;# 
   548  0014                     # 885 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   549                           CCPR1 equ 015h ;# 
   550  0015                     # 892 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   551                           CCPR1L equ 015h ;# 
   552  0015                     # 899 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   553                           CCPR1H equ 016h ;# 
   554  0016                     # 906 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   555                           CCP1CON equ 017h ;# 
   556  0017                     # 964 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   557                           RCSTA equ 018h ;# 
   558  0018                     # 1059 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   559                           TXREG equ 019h ;# 
   560  0019                     # 1066 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   561                           RCREG equ 01Ah ;# 
   562  001A                     # 1073 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   563                           CCPR2 equ 01Bh ;# 
   564  001B                     # 1080 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   565                           CCPR2L equ 01Bh ;# 
   566  001B                     # 1087 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   567                           CCPR2H equ 01Ch ;# 
   568  001C                     # 1094 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   569                           CCP2CON equ 01Dh ;# 
   570  001D                     # 1152 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   571                           ADRESH equ 01Eh ;# 
   572  001E                     # 1159 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   573                           ADCON0 equ 01Fh ;# 
   574  001F                     # 1255 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   575                           OPTION_REG equ 081h ;# 
   576  0081                     # 1325 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   577                           TRISA equ 085h ;# 
   578  0085                     # 1375 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   579                           TRISB equ 086h ;# 
   580  0086                     # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   581                           TRISC equ 087h ;# 
   582  0087                     # 1499 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   583                           TRISD equ 088h ;# 
   584  0088                     # 1561 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   585                           TRISE equ 089h ;# 
   586  0089                     # 1618 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   587                           PIE1 equ 08Ch ;# 
   588  008C                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   589                           PIE2 equ 08Dh ;# 
   590  008D                     # 1720 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   591                           PCON equ 08Eh ;# 
   592  008E                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   593                           SSPCON2 equ 091h ;# 
   594  0091                     # 1816 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   595                           PR2 equ 092h ;# 
   596  0092                     # 1823 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   597                           SSPADD equ 093h ;# 
   598  0093                     # 1830 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   599                           SSPSTAT equ 094h ;# 
   600  0094                     # 1999 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   601                           TXSTA equ 098h ;# 
   602  0098                     # 2080 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   603                           SPBRG equ 099h ;# 
   604  0099                     # 2087 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   605                           CMCON equ 09Ch ;# 
   606  009C                     # 2157 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   607                           CVRCON equ 09Dh ;# 
   608  009D                     # 2222 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   609                           ADRESL equ 09Eh ;# 
   610  009E                     # 2229 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   611                           ADCON1 equ 09Fh ;# 
   612  009F                     # 2288 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   613                           EEDATA equ 010Ch ;# 
   614  010C                     # 2295 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   615                           EEADR equ 010Dh ;# 
   616  010D                     # 2302 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   617                           EEDATH equ 010Eh ;# 
   618  010E                     # 2309 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   619                           EEADRH equ 010Fh ;# 
   620  010F                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   621                           EECON1 equ 018Ch ;# 
   622  018C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877A.h"
   623                           EECON2 equ 018Dh ;# 
   624  018D                     # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   625                           INDF equ 00h ;# 
   626  0000                     # 59 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   627                           TMR0 equ 01h ;# 
   628  0001                     # 66 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   629                           PCL equ 02h ;# 
   630  0002                     # 73 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   631                           STATUS equ 03h ;# 
   632  0003                     # 159 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   633                           FSR equ 04h ;# 
   634  0004                     # 166 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   635                           PORTA equ 05h ;# 
   636  0005                     # 216 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   637                           PORTB equ 06h ;# 
   638  0006                     # 278 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   639                           PORTC equ 07h ;# 
   640  0007                     # 340 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   641                           PORTD equ 08h ;# 
   642  0008                     # 402 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   643                           PORTE equ 09h ;# 
   644  0009                     # 434 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   645                           PCLATH equ 0Ah ;# 
   646  000A                     # 454 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   647                           INTCON equ 0Bh ;# 
   648  000B                     # 532 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   649                           PIR1 equ 0Ch ;# 
   650  000C                     # 594 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   651                           PIR2 equ 0Dh ;# 
   652  000D                     # 627 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   653                           TMR1 equ 0Eh ;# 
   654  000E                     # 634 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   655                           TMR1L equ 0Eh ;# 
   656  000E                     # 641 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   657                           TMR1H equ 0Fh ;# 
   658  000F                     # 648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   659                           T1CON equ 010h ;# 
   660  0010                     # 725 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   661                           TMR2 equ 011h ;# 
   662  0011                     # 732 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   663                           T2CON equ 012h ;# 
   664  0012                     # 803 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   665                           SSPBUF equ 013h ;# 
   666  0013                     # 810 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   667                           SSPCON equ 014h ;# 
   668  0014                     # 880 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   669                           CCPR1 equ 015h ;# 
   670  0015                     # 887 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   671                           CCPR1L equ 015h ;# 
   672  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   673                           CCPR1H equ 016h ;# 
   674  0016                     # 901 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   675                           CCP1CON equ 017h ;# 
   676  0017                     # 959 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   677                           RCSTA equ 018h ;# 
   678  0018                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   679                           TXREG equ 019h ;# 
   680  0019                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   681                           RCREG equ 01Ah ;# 
   682  001A                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   683                           CCPR2 equ 01Bh ;# 
   684  001B                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   685                           CCPR2L equ 01Bh ;# 
   686  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   687                           CCPR2H equ 01Ch ;# 
   688  001C                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   689                           CCP2CON equ 01Dh ;# 
   690  001D                     # 1147 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   691                           ADRESH equ 01Eh ;# 
   692  001E                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   693                           ADCON0 equ 01Fh ;# 
   694  001F                     # 1250 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   695                           OPTION_REG equ 081h ;# 
   696  0081                     # 1320 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   697                           TRISA equ 085h ;# 
   698  0085                     # 1370 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   699                           TRISB equ 086h ;# 
   700  0086                     # 1432 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   701                           TRISC equ 087h ;# 
   702  0087                     # 1494 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   703                           TRISD equ 088h ;# 
   704  0088                     # 1556 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   705                           TRISE equ 089h ;# 
   706  0089                     # 1613 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   707                           PIE1 equ 08Ch ;# 
   708  008C                     # 1675 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   709                           PIE2 equ 08Dh ;# 
   710  008D                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   711                           PCON equ 08Eh ;# 
   712  008E                     # 1742 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   713                           SSPCON2 equ 091h ;# 
   714  0091                     # 1804 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   715                           PR2 equ 092h ;# 
   716  0092                     # 1811 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   717                           SSPADD equ 093h ;# 
   718  0093                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   719                           SSPSTAT equ 094h ;# 
   720  0094                     # 1987 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   721                           TXSTA equ 098h ;# 
   722  0098                     # 2068 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   723                           SPBRG equ 099h ;# 
   724  0099                     # 2075 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   725                           ADRESL equ 09Eh ;# 
   726  009E                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   727                           ADCON1 equ 09Fh ;# 
   728  009F                     # 2135 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   729                           EEDATA equ 010Ch ;# 
   730  010C                     # 2142 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   731                           EEADR equ 010Dh ;# 
   732  010D                     # 2149 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   733                           EEDATH equ 010Eh ;# 
   734  010E                     # 2156 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   735                           EEADRH equ 010Fh ;# 
   736  010F                     # 2163 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   737                           EECON1 equ 018Ch ;# 
   738  018C                     # 2208 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877.h"
   739                           EECON2 equ 018Dh ;# 
   740  018D                     # 31 "src/hardware.h"
   741                           psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# 
   742                           # 31 "src/hardware.h"
   743                           db 1,0,0,0,0,0,0,0 ;# 
   744  0010  0001 0000 0000 0000 0000 0000 0000 0000 	FNCALL	_main,_INT0_init
   745                           	FNCALL	_main,_checaBotaoAjustes
   746                           	FNCALL	_main,_delay_ms
   747                           	FNCALL	_main,_entraEmModoAjuste
   748                           	FNCALL	_main,_enviaStringPelaUart
   749                           	FNCALL	_main,_executaTesteDosSensores
   750                           	FNCALL	_main,_exibeNumeroNenhum
   751                           	FNCALL	_main,_exibeNumeroP
   752                           	FNCALL	_main,_giraDisplay
   753                           	FNCALL	_main,_iniHardware
   754                           	FNCALL	_main,_iniTimer1
   755                           	FNCALL	_main,_iniUart
   756                           	FNCALL	_main,_inicializaDisplay
   757                           	FNCALL	_main,_ligaLEDVerdeBateria
   758                           	FNCALL	_main,_ligaLEDVermelhoBateria
   759                           	FNCALL	_main,_ligaModuloBoost
   760                           	FNCALL	_main,_liga_PWM2
   761                           	FNCALL	_main,_obtemNivelDeBateria
   762                           	FNCALL	_main,_obtemTesteDoGoundBolt
   763                           	FNCALL	_main,_setaSaidaEm9Volts
   764                           	FNCALL	_main,_sprintf
   765                           	FNCALL	_main,_strlen
   766                           	FNCALL	_obtemTesteDoGoundBolt,_enviaStringPelaUart
   767                           	FNCALL	_obtemTesteDoGoundBolt,_obtemConvercaoAD
   768                           	FNCALL	_obtemTesteDoGoundBolt,_sprintf
   769                           	FNCALL	_obtemTesteDoGoundBolt,_strlen
   770                           	FNCALL	_obtemNivelDeBateria,_enviaStringPelaUart
   771                           	FNCALL	_obtemNivelDeBateria,_ligaLEDVerdeBateria
   772                           	FNCALL	_obtemNivelDeBateria,_ligaLEDVermelhoBateria
   773                           	FNCALL	_obtemNivelDeBateria,_obtemConvercaoAD
   774                           	FNCALL	_obtemNivelDeBateria,_sprintf
   775                           	FNCALL	_obtemNivelDeBateria,_strlen
   776                           	FNCALL	_inicializaDisplay,_delay_ms
   777                           	FNCALL	_inicializaDisplay,_desligaPainelLed
   778                           	FNCALL	_inicializaDisplay,_exibeNumero8
   779                           	FNCALL	_inicializaDisplay,_exibeNumeroNenhum
   780                           	FNCALL	_inicializaDisplay,_ligaPainelLed
   781                           	FNCALL	_giraDisplay,_delay_ms
   782                           	FNCALL	_executaTesteDosSensores,_atualizaPainelDeLed
   783                           	FNCALL	_executaTesteDosSensores,_exibeQuantidadeDeSensores
   784                           	FNCALL	_executaTesteDosSensores,_obtemQuantidadeDeSensores
   785                           	FNCALL	_executaTesteDosSensores,_testaSaidaPulsadaEm20Volts
   786                           	FNCALL	_executaTesteDosSensores,_testaSaidaPulsadaEm9Volts
   787                           	FNCALL	_testaSaidaPulsadaEm9Volts,_delay_ms
   788                           	FNCALL	_testaSaidaPulsadaEm9Volts,_setaSaidaEm9Volts
   789                           	FNCALL	_testaSaidaPulsadaEm20Volts,_delay_ms
   790                           	FNCALL	_testaSaidaPulsadaEm20Volts,_setaSaidaEm20Volts
   791                           	FNCALL	_entraEmModoAjuste,_checaBotaoAjustes
   792                           	FNCALL	_entraEmModoAjuste,_delay_ms
   793                           	FNCALL	_entraEmModoAjuste,_desligaModuloBoost
   794                           	FNCALL	_entraEmModoAjuste,_ligaModuloBoost
   795                           	FNCALL	_entraEmModoAjuste,_modoTeste20
   796                           	FNCALL	_entraEmModoAjuste,_modoTeste9
   797                           	FNCALL	_entraEmModoAjuste,_setaSaidaEm20Volts
   798                           	FNCALL	_entraEmModoAjuste,_setaSaidaEm9Volts
   799                           	FNCALL	_modoTeste9,_delay_ms
   800                           	FNCALL	_modoTeste9,_exibeQuantidadeDeSensores
   801                           	FNCALL	_modoTeste9,_obtemQuantidadeDeSensores
   802                           	FNCALL	_modoTeste9,_setaSaidaEm9Volts
   803                           	FNCALL	_modoTeste20,_delay_ms
   804                           	FNCALL	_modoTeste20,_exibeQuantidadeDeSensores
   805                           	FNCALL	_modoTeste20,_obtemQuantidadeDeSensores
   806                           	FNCALL	_modoTeste20,_setaSaidaEm20Volts
   807                           	FNCALL	_obtemQuantidadeDeSensores,_enviaStringPelaUart
   808                           	FNCALL	_obtemQuantidadeDeSensores,_obtemConvercaoAD
   809                           	FNCALL	_obtemQuantidadeDeSensores,_sprintf
   810                           	FNCALL	_obtemQuantidadeDeSensores,_strlen
   811                           	FNCALL	_sprintf,___lwdiv
   812                           	FNCALL	_sprintf,___lwmod
   813                           	FNCALL	_sprintf,___wmul
   814                           	FNCALL	_sprintf,_isdigit
   815                           	FNCALL	_obtemConvercaoAD,_delay_us
   816                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumero0
   817                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumero1
   818                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumero2
   819                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumero3
   820                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumero4
   821                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumero5
   822                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumero6
   823                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumero7
   824                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumero8
   825                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumero9
   826                           	FNCALL	_exibeQuantidadeDeSensores,_exibeNumeroA
   827                           	FNROOT	_main
   828                           	FNCALL	_trataInterrupcao,_operacoesEmTick
   829                           	FNCALL	_trataInterrupcao,_trataEntradaPulsada
   830                           	FNCALL	intlevel1,_trataInterrupcao
   831                           	global	intlevel1
   832                           	FNROOT	intlevel1
   833                           	global	_dpowers
   834                           psect	strings,class=STRING,delta=2,noexec
   835                           global __pstrings
   836                           __pstrings:
   837  0800                     stringtab:
   838  0800                     	global    __stringtab
   839                           __stringtab:
   840  0800                     ;	String table - string pointers are 1 byte each
   841                           stringcode:stringdir:
   842  0800                     movlw high(stringdir)
      + 0800                     stringdir:	
   843  0800  3008               movwf pclath
   844  0801  008A               movf fsr,w
   845  0802  0804               incf fsr
   846  0803  0A84               	addwf pc
   847  0804  0782               	global __stringbase
   848                           __stringbase:
   849  0805                     	retlw	0
   850  0805  3400               psect	strings
   851                           	global    __end_of__stringtab
   852                           __end_of__stringtab:
   853  0806                     	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
   854                           	line	354
   855                           _dpowers:
   856  0806                     	retlw	01h
   857  0806  3401               	retlw	0
   858  0807  3400               
   859                           	retlw	0Ah
   860  0808  340A               	retlw	0
   861  0809  3400               
   862                           	retlw	064h
   863  080A  3464               	retlw	0
   864  080B  3400               
   865                           	retlw	0E8h
   866  080C  34E8               	retlw	03h
   867  080D  3403               
   868                           	retlw	010h
   869  080E  3410               	retlw	027h
   870  080F  3427               
   871                           	global __end_of_dpowers
   872                           __end_of_dpowers:
   873  0810                     	global	_dpowers
   874                           	global	_tempoDeReacaoDoSensor
   875                           	global	_numeroDePulsos
   876                           	global	_flagTempoDeReacaoDoSensor
   877                           	global	_numeroDeSensores
   878                           	global	operacoesEmTick@contadorDe1s
   879                           	global	operacoesEmTick@contadorDe100ms
   880                           	global	_pulsosSemResposta
   881                           	global	_estadoDoSinal
   882                           	global	_flagErrroDeAmplitude
   883                           	global	_tensaoDeSaida
   884                           	global	_flagNivelDeBateria
   885                           	global	_falhaPulsoDeEntrada
   886                           	global	_respostaOk
   887                           	global	_flagErroDeLeitura
   888                           	global	_RCREG
   889                           _RCREG	set	0x1A
   890  001A                     	global	_TXREG
   891                           _TXREG	set	0x19
   892  0019                     	global	_PORTCbits
   893                           _PORTCbits	set	0x7
   894  0007                     	global	_PIR1bits
   895                           _PIR1bits	set	0xC
   896  000C                     	global	_ADRESH
   897                           _ADRESH	set	0x1E
   898  001E                     	global	_CCP2CONbits
   899                           _CCP2CONbits	set	0x1D
   900  001D                     	global	_T2CONbits
   901                           _T2CONbits	set	0x12
   902  0012                     	global	_CCPR2L
   903                           _CCPR2L	set	0x1B
   904  001B                     	global	_CCP2CON
   905                           _CCP2CON	set	0x1D
   906  001D                     	global	_RCSTAbits
   907                           _RCSTAbits	set	0x18
   908  0018                     	global	_INTCONbits
   909                           _INTCONbits	set	0xB
   910  000B                     	global	_T1CONbits
   911                           _T1CONbits	set	0x10
   912  0010                     	global	_ADCON0bits
   913                           _ADCON0bits	set	0x1F
   914  001F                     	global	_RCIF
   915                           _RCIF	set	0x65
   916  0065                     	global	_TXIF
   917                           _TXIF	set	0x64
   918  0064                     	global	_RC2
   919                           _RC2	set	0x3A
   920  003A                     	global	_RB7
   921                           _RB7	set	0x37
   922  0037                     	global	_RB6
   923                           _RB6	set	0x36
   924  0036                     	global	_RB5
   925                           _RB5	set	0x35
   926  0035                     	global	_RB4
   927                           _RB4	set	0x34
   928  0034                     	global	_RB3
   929                           _RB3	set	0x33
   930  0033                     	global	_RB2
   931                           _RB2	set	0x32
   932  0032                     	global	_RB1
   933                           _RB1	set	0x31
   934  0031                     	global	_RC5
   935                           _RC5	set	0x3D
   936  003D                     	global	_RC4
   937                           _RC4	set	0x3C
   938  003C                     	global	_RC3
   939                           _RC3	set	0x3B
   940  003B                     	global	_RD3
   941                           _RD3	set	0x43
   942  0043                     	global	_RD6
   943                           _RD6	set	0x46
   944  0046                     	global	_RD7
   945                           _RD7	set	0x47
   946  0047                     	global	_RD0
   947                           _RD0	set	0x40
   948  0040                     	global	_RD2
   949                           _RD2	set	0x42
   950  0042                     	global	_RD5
   951                           _RD5	set	0x45
   952  0045                     	global	_RD4
   953                           _RD4	set	0x44
   954  0044                     	global	_GIE
   955                           _GIE	set	0x5F
   956  005F                     	global	_CARRY
   957                           _CARRY	set	0x18
   958  0018                     	global	_RD1
   959                           _RD1	set	0x41
   960  0041                     	global	_TMR2ON
   961                           _TMR2ON	set	0x92
   962  0092                     	global	_ADRESL
   963                           _ADRESL	set	0x9E
   964  009E                     	global	_PR2
   965                           _PR2	set	0x92
   966  0092                     	global	_OPTION_REGbits
   967                           _OPTION_REGbits	set	0x81
   968  0081                     	global	_SPBRG
   969                           _SPBRG	set	0x99
   970  0099                     	global	_TXSTAbits
   971                           _TXSTAbits	set	0x98
   972  0098                     	global	_PIE1bits
   973                           _PIE1bits	set	0x8C
   974  008C                     	global	_ADCON1bits
   975                           _ADCON1bits	set	0x9F
   976  009F                     	global	_TRISEbits
   977                           _TRISEbits	set	0x89
   978  0089                     	global	_TRISDbits
   979                           _TRISDbits	set	0x88
   980  0088                     	global	_TRISCbits
   981                           _TRISCbits	set	0x87
   982  0087                     	global	_TRISBbits
   983                           _TRISBbits	set	0x86
   984  0086                     	global	_TRISAbits
   985                           _TRISAbits	set	0x85
   986  0085                     	global	_TRMT
   987                           _TRMT	set	0x4C1
   988  04C1                     	global	_TXIE
   989                           _TXIE	set	0x464
   990  0464                     	global	_RCIE
   991                           _RCIE	set	0x465
   992  0465                     	global	_EEDATA
   993                           _EEDATA	set	0x10C
   994  010C                     	global	_EEADR
   995                           _EEADR	set	0x10D
   996  010D                     	global	_EECON2
   997                           _EECON2	set	0x18D
   998  018D                     	global	_EECON1
   999                           _EECON1	set	0x18C
  1000  018C                     	global	_RD
  1001                           _RD	set	0xC60
  1002  0C60                     	global	_WREN
  1003                           _WREN	set	0xC62
  1004  0C62                     	global	_WR
  1005                           _WR	set	0xC61
  1006  0C61                     	
  1007                           STR_2:	
  1008  0810                     	retlw	81	;'Q'
  1009  0810  3451               	retlw	117	;'u'
  1010  0811  3475               	retlw	97	;'a'
  1011  0812  3461               	retlw	110	;'n'
  1012  0813  346E               	retlw	116	;'t'
  1013  0814  3474               	retlw	105	;'i'
  1014  0815  3469               	retlw	100	;'d'
  1015  0816  3464               	retlw	97	;'a'
  1016  0817  3461               	retlw	100	;'d'
  1017  0818  3464               	retlw	101	;'e'
  1018  0819  3465               	retlw	32	;' '
  1019  081A  3420               	retlw	100	;'d'
  1020  081B  3464               	retlw	101	;'e'
  1021  081C  3465               	retlw	32	;' '
  1022  081D  3420               	retlw	83	;'S'
  1023  081E  3453               	retlw	101	;'e'
  1024  081F  3465               	retlw	110	;'n'
  1025  0820  346E               	retlw	115	;'s'
  1026  0821  3473               	retlw	111	;'o'
  1027  0822  346F               	retlw	114	;'r'
  1028  0823  3472               	retlw	101	;'e'
  1029  0824  3465               	retlw	115	;'s'
  1030  0825  3473               	retlw	32	;' '
  1031  0826  3420               	retlw	61	;'='
  1032  0827  343D               	retlw	32	;' '
  1033  0828  3420               	retlw	37	;'%'
  1034  0829  3425               	retlw	48	;'0'
  1035  082A  3430               	retlw	53	;'5'
  1036  082B  3435               	retlw	100	;'d'
  1037  082C  3464               	retlw	13
  1038  082D  340D               	retlw	10
  1039  082E  340A               	retlw	0
  1040  082F  3400               psect	strings
  1041                           	
  1042                           STR_5:	
  1043  0830                     	retlw	65	;'A'
  1044  0830  3441               	retlw	109	;'m'
  1045  0831  346D               	retlw	112	;'p'
  1046  0832  3470               	retlw	108	;'l'
  1047  0833  346C               	retlw	105	;'i'
  1048  0834  3469               	retlw	116	;'t'
  1049  0835  3474               	retlw	117	;'u'
  1050  0836  3475               	retlw	114	;'r'
  1051  0837  3472               	retlw	101	;'e'
  1052  0838  3465               	retlw	32	;' '
  1053  0839  3420               	retlw	100	;'d'
  1054  083A  3464               	retlw	111	;'o'
  1055  083B  346F               	retlw	32	;' '
  1056  083C  3420               	retlw	83	;'S'
  1057  083D  3453               	retlw	105	;'i'
  1058  083E  3469               	retlw	110	;'n'
  1059  083F  346E               	retlw	97	;'a'
  1060  0840  3461               	retlw	108	;'l'
  1061  0841  346C               	retlw	32	;' '
  1062  0842  3420               	retlw	61	;'='
  1063  0843  343D               	retlw	32	;' '
  1064  0844  3420               	retlw	32	;' '
  1065  0845  3420               	retlw	32	;' '
  1066  0846  3420               	retlw	32	;' '
  1067  0847  3420               	retlw	32	;' '
  1068  0848  3420               	retlw	32	;' '
  1069  0849  3420               	retlw	32	;' '
  1070  084A  3420               	retlw	37	;'%'
  1071  084B  3425               	retlw	117	;'u'
  1072  084C  3475               	retlw	13
  1073  084D  340D               	retlw	10
  1074  084E  340A               	retlw	0
  1075  084F  3400               psect	strings
  1076                           	
  1077                           STR_3:	
  1078  0850                     	retlw	78	;'N'
  1079  0850  344E               	retlw	105	;'i'
  1080  0851  3469               	retlw	118	;'v'
  1081  0852  3476               	retlw	101	;'e'
  1082  0853  3465               	retlw	108	;'l'
  1083  0854  346C               	retlw	32	;' '
  1084  0855  3420               	retlw	100	;'d'
  1085  0856  3464               	retlw	101	;'e'
  1086  0857  3465               	retlw	32	;' '
  1087  0858  3420               	retlw	66	;'B'
  1088  0859  3442               	retlw	97	;'a'
  1089  085A  3461               	retlw	116	;'t'
  1090  085B  3474               	retlw	101	;'e'
  1091  085C  3465               	retlw	114	;'r'
  1092  085D  3472               	retlw	105	;'i'
  1093  085E  3469               	retlw	97	;'a'
  1094  085F  3461               	retlw	32	;' '
  1095  0860  3420               	retlw	61	;'='
  1096  0861  343D               	retlw	32	;' '
  1097  0862  3420               	retlw	32	;' '
  1098  0863  3420               	retlw	32	;' '
  1099  0864  3420               	retlw	32	;' '
  1100  0865  3420               	retlw	32	;' '
  1101  0866  3420               	retlw	32	;' '
  1102  0867  3420               	retlw	32	;' '
  1103  0868  3420               	retlw	37	;'%'
  1104  0869  3425               	retlw	117	;'u'
  1105  086A  3475               	retlw	13
  1106  086B  340D               	retlw	10
  1107  086C  340A               	retlw	0
  1108  086D  3400               psect	strings
  1109                           	
  1110                           STR_4:	
  1111  086E                     	retlw	84	;'T'
  1112  086E  3454               	retlw	101	;'e'
  1113  086F  3465               	retlw	115	;'s'
  1114  0870  3473               	retlw	116	;'t'
  1115  0871  3474               	retlw	101	;'e'
  1116  0872  3465               	retlw	32	;' '
  1117  0873  3420               	retlw	100	;'d'
  1118  0874  3464               	retlw	111	;'o'
  1119  0875  346F               	retlw	32	;' '
  1120  0876  3420               	retlw	71	;'G'
  1121  0877  3447               	retlw	114	;'r'
  1122  0878  3472               	retlw	111	;'o'
  1123  0879  346F               	retlw	117	;'u'
  1124  087A  3475               	retlw	110	;'n'
  1125  087B  346E               	retlw	100	;'d'
  1126  087C  3464               	retlw	32	;' '
  1127  087D  3420               	retlw	66	;'B'
  1128  087E  3442               	retlw	111	;'o'
  1129  087F  346F               	retlw	108	;'l'
  1130  0880  346C               	retlw	116	;'t'
  1131  0881  3474               	retlw	32	;' '
  1132  0882  3420               	retlw	61	;'='
  1133  0883  343D               	retlw	32	;' '
  1134  0884  3420               	retlw	32	;' '
  1135  0885  3420               	retlw	32	;' '
  1136  0886  3420               	retlw	37	;'%'
  1137  0887  3425               	retlw	117	;'u'
  1138  0888  3475               	retlw	13
  1139  0889  340D               	retlw	10
  1140  088A  340A               	retlw	0
  1141  088B  3400               psect	strings
  1142                           STR_1	equ	STR_2+29
  1143  082D                     ; #config settings
  1144                           global __CFG_FOSC$HS
  1145                           __CFG_FOSC$HS equ 0x0
  1146  0000                     global __CFG_WDTE$OFF
  1147                           __CFG_WDTE$OFF equ 0x0
  1148  0000                     global __CFG_PWRTE$OFF
  1149                           __CFG_PWRTE$OFF equ 0x0
  1150  0000                     global __CFG_BOREN$ON
  1151                           __CFG_BOREN$ON equ 0x0
  1152  0000                     global __CFG_LVP$OFF
  1153                           __CFG_LVP$OFF equ 0x0
  1154  0000                     global __CFG_CPD$OFF
  1155                           __CFG_CPD$OFF equ 0x0
  1156  0000                     global __CFG_CP$OFF
  1157                           __CFG_CP$OFF equ 0x0
  1158  0000                     	file	"C:\Users\Marcos\AppData\Local\Temp\sa2k."
  1159                           	line	#
  1160                           psect cinit,class=CODE,delta=2
  1161                           global start_initialization
  1162                           start_initialization:
  1163  0015                     
  1164                           global __initialization
  1165                           __initialization:
  1166  0015                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1167                           global __pbssCOMMON
  1168                           __pbssCOMMON:
  1169  0070                     _tempoDeReacaoDoSensor:
  1170  0070                            ds      2
  1171  0070                     
  1172                           _numeroDePulsos:
  1173  0072                            ds      2
  1174  0072                     
  1175                           _flagTempoDeReacaoDoSensor:
  1176  0074                            ds      1
  1177  0074                     
  1178                           _numeroDeSensores:
  1179  0075                            ds      1
  1180  0075                     
  1181                           psect	bssBANK1,class=BANK1,space=1,noexec
  1182                           global __pbssBANK1
  1183                           __pbssBANK1:
  1184  00D4                     operacoesEmTick@contadorDe1s:
  1185  00D4                            ds      2
  1186  00D4                     
  1187                           operacoesEmTick@contadorDe100ms:
  1188  00D6                            ds      2
  1189  00D6                     
  1190                           obtemNivelDeBateria@tempoDeAmostragem:
  1191  00D8                            ds      2
  1192  00D8                     
  1193                           _periodoDoPulso:
  1194  00DA                            ds      2
  1195  00DA                     
  1196                           _pulsosSemResposta:
  1197  00DC                            ds      2
  1198  00DC                     
  1199                           _contadorDeErros:
  1200  00DE                            ds      1
  1201  00DE                     
  1202                           _estadoDoSinal:
  1203  00DF                            ds      1
  1204  00DF                     
  1205                           _quantidadeDeSensoresEm20V:
  1206  00E0                            ds      1
  1207  00E0                     
  1208                           _quantidadeDeSensoresEm9V:
  1209  00E1                            ds      1
  1210  00E1                     
  1211                           _flagErrroDeAmplitude:
  1212  00E2                            ds      1
  1213  00E2                     
  1214                           _tensaoDeSaida:
  1215  00E3                            ds      1
  1216  00E3                     
  1217                           _flagNivelDeBateria:
  1218  00E4                            ds      1
  1219  00E4                     
  1220                           _falhaPulsoDeEntrada:
  1221  00E5                            ds      1
  1222  00E5                     
  1223                           _respostaOk:
  1224  00E6                            ds      1
  1225  00E6                     
  1226                           _flagErroDeLeitura:
  1227  00E7                            ds      1
  1228  00E7                     
  1229                           _statusScan:
  1230  00E8                            ds      1
  1231  00E8                     
  1232                           	file	"C:\Users\Marcos\AppData\Local\Temp\sa2k."
  1233                           	line	#
  1234                           psect clrtext,class=CODE,delta=2
  1235                           global clear_ram0
  1236                           ;	Called with FSR containing the base address, and
  1237                           ;	W with the last address+1
  1238                           clear_ram0:
  1239  0972                     	clrwdt			;clear the watchdog before getting into this loop
  1240  0972  0064               clrloop0:
  1241  0973                     	clrf	indf		;clear RAM location pointed to by FSR
  1242  0973  0180               	incf	fsr,f		;increment pointer
  1243  0974  0A84               	xorwf	fsr,w		;XOR with final address
  1244  0975  0604               	btfsc	status,2	;have we reached the end yet?
  1245  0976  1903               	retlw	0		;all done for this memory range, return
  1246  0977  3400               	xorwf	fsr,w		;XOR again to restore value
  1247  0978  0604               	goto	clrloop0		;do the next byte
  1248  0979  2973               
  1249                           ; Clear objects allocated to COMMON
  1250                           psect cinit,class=CODE,delta=2,merge=1
  1251                           	clrf	((__pbssCOMMON)+0)&07Fh
  1252  0015  01F0               	clrf	((__pbssCOMMON)+1)&07Fh
  1253  0016  01F1               	clrf	((__pbssCOMMON)+2)&07Fh
  1254  0017  01F2               	clrf	((__pbssCOMMON)+3)&07Fh
  1255  0018  01F3               	clrf	((__pbssCOMMON)+4)&07Fh
  1256  0019  01F4               	clrf	((__pbssCOMMON)+5)&07Fh
  1257  001A  01F5               ; Clear objects allocated to BANK1
  1258                           psect cinit,class=CODE,delta=2,merge=1
  1259                           	bcf	status, 7	;select IRP bank0
  1260  001B  1383               	movlw	low(__pbssBANK1)
  1261  001C  30D4               	movwf	fsr
  1262  001D  0084               	movlw	low((__pbssBANK1)+015h)
  1263  001E  30E9               	fcall	clear_ram0
  1264  001F  120A  158A  2172  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1265                           global end_of_initialization,__end_of__initialization
  1266                           
  1267                           ;End of C runtime variable initialization code
  1268                           
  1269                           end_of_initialization:
  1270  0024                     __end_of__initialization:
  1271  0024                     clrf status
  1272  0024  0183               ljmp _main	;jump to C main() function
  1273  0025  120A  118A  2BB7   psect	cstackBANK3,class=BANK3,space=1,noexec
  1274                           global __pcstackBANK3
  1275                           __pcstackBANK3:
  1276  0190                     	global	main@mensagem
  1277                           main@mensagem:	; 50 bytes @ 0x0
  1278  0190                     	ds	50
  1279  0190                     psect	cstackBANK1,class=BANK1,space=1,noexec
  1280                           global __pcstackBANK1
  1281                           __pcstackBANK1:
  1282  00A0                     	global	obtemQuantidadeDeSensores@mensagem
  1283                           obtemQuantidadeDeSensores@mensagem:	; 50 bytes @ 0x0
  1284  00A0                     	global	obtemNivelDeBateria@mensagem
  1285                           obtemNivelDeBateria@mensagem:	; 50 bytes @ 0x0
  1286  00A0                     	global	obtemTesteDoGoundBolt@mensagem
  1287                           obtemTesteDoGoundBolt@mensagem:	; 50 bytes @ 0x0
  1288  00A0                     	ds	50
  1289  00A0                     	global	obtemQuantidadeDeSensores@resultadoObtidoDoSensores
  1290                           obtemQuantidadeDeSensores@resultadoObtidoDoSensores:	; 2 bytes @ 0x32
  1291  00D2                     	global	obtemNivelDeBateria@nivelDaBateria
  1292                           obtemNivelDeBateria@nivelDaBateria:	; 2 bytes @ 0x32
  1293  00D2                     	global	obtemTesteDoGoundBolt@resultadoDoTesteDoGB
  1294                           obtemTesteDoGoundBolt@resultadoDoTesteDoGB:	; 2 bytes @ 0x32
  1295  00D2                     	ds	2
  1296  00D2                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1297                           global __pcstackCOMMON
  1298                           __pcstackCOMMON:
  1299  0076                     ?_isdigit:	; 1 bit 
  1300  0076                     ?_operacoesEmTick:	; 1 bytes @ 0x0
  1301  0076                     ??_operacoesEmTick:	; 1 bytes @ 0x0
  1302  0076                     ?_trataEntradaPulsada:	; 1 bytes @ 0x0
  1303  0076                     ??_trataEntradaPulsada:	; 1 bytes @ 0x0
  1304  0076                     ?_setaSaidaEm9Volts:	; 1 bytes @ 0x0
  1305  0076                     ?_inicializaDisplay:	; 1 bytes @ 0x0
  1306  0076                     ?_exibeNumeroNenhum:	; 1 bytes @ 0x0
  1307  0076                     ?_ligaModuloBoost:	; 1 bytes @ 0x0
  1308  0076                     ?_ligaLEDVerdeBateria:	; 1 bytes @ 0x0
  1309  0076                     ?_ligaLEDVermelhoBateria:	; 1 bytes @ 0x0
  1310  0076                     ?_checaBotaoAjustes:	; 1 bytes @ 0x0
  1311  0076                     ?_exibeNumeroP:	; 1 bytes @ 0x0
  1312  0076                     ?_entraEmModoAjuste:	; 1 bytes @ 0x0
  1313  0076                     ?_giraDisplay:	; 1 bytes @ 0x0
  1314  0076                     ?_executaTesteDosSensores:	; 1 bytes @ 0x0
  1315  0076                     ?_obtemTesteDoGoundBolt:	; 1 bytes @ 0x0
  1316  0076                     ?_obtemNivelDeBateria:	; 1 bytes @ 0x0
  1317  0076                     ?_testaSaidaPulsadaEm9Volts:	; 1 bytes @ 0x0
  1318  0076                     ?_testaSaidaPulsadaEm20Volts:	; 1 bytes @ 0x0
  1319  0076                     ?_obtemQuantidadeDeSensores:	; 1 bytes @ 0x0
  1320  0076                     ?_exibeQuantidadeDeSensores:	; 1 bytes @ 0x0
  1321  0076                     ?_atualizaPainelDeLed:	; 1 bytes @ 0x0
  1322  0076                     ?_exibeNumero0:	; 1 bytes @ 0x0
  1323  0076                     ?_exibeNumero1:	; 1 bytes @ 0x0
  1324  0076                     ?_exibeNumero2:	; 1 bytes @ 0x0
  1325  0076                     ?_exibeNumero3:	; 1 bytes @ 0x0
  1326  0076                     ?_exibeNumero4:	; 1 bytes @ 0x0
  1327  0076                     ?_exibeNumero5:	; 1 bytes @ 0x0
  1328  0076                     ?_exibeNumero6:	; 1 bytes @ 0x0
  1329  0076                     ?_exibeNumero7:	; 1 bytes @ 0x0
  1330  0076                     ?_exibeNumero8:	; 1 bytes @ 0x0
  1331  0076                     ?_exibeNumero9:	; 1 bytes @ 0x0
  1332  0076                     ?_exibeNumeroA:	; 1 bytes @ 0x0
  1333  0076                     ?_ligaPainelLed:	; 1 bytes @ 0x0
  1334  0076                     ?_desligaPainelLed:	; 1 bytes @ 0x0
  1335  0076                     ?_modoTeste9:	; 1 bytes @ 0x0
  1336  0076                     ?_modoTeste20:	; 1 bytes @ 0x0
  1337  0076                     ?_iniHardware:	; 1 bytes @ 0x0
  1338  0076                     ?_iniTimer1:	; 1 bytes @ 0x0
  1339  0076                     ?_iniUart:	; 1 bytes @ 0x0
  1340  0076                     ?_INT0_init:	; 1 bytes @ 0x0
  1341  0076                     ?_liga_PWM2:	; 1 bytes @ 0x0
  1342  0076                     ?_trataInterrupcao:	; 1 bytes @ 0x0
  1343  0076                     ?_main:	; 1 bytes @ 0x0
  1344  0076                     ?_desligaModuloBoost:	; 1 bytes @ 0x0
  1345  0076                     ?_setaSaidaEm20Volts:	; 1 bytes @ 0x0
  1346  0076                     	global	trataEntradaPulsada@amplitude
  1347                           trataEntradaPulsada@amplitude:	; 2 bytes @ 0x0
  1348  0076                     	ds	2
  1349  0076                     ??_trataInterrupcao:	; 1 bytes @ 0x2
  1350  0078                     	ds	4
  1351  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1352                           global __pcstackBANK0
  1353                           __pcstackBANK0:
  1354  0020                     ?_delay_us:	; 1 bytes @ 0x0
  1355  0020                     ??_setaSaidaEm9Volts:	; 1 bytes @ 0x0
  1356  0020                     ??_exibeNumeroNenhum:	; 1 bytes @ 0x0
  1357  0020                     ??_ligaModuloBoost:	; 1 bytes @ 0x0
  1358  0020                     ??_ligaLEDVerdeBateria:	; 1 bytes @ 0x0
  1359  0020                     ??_ligaLEDVermelhoBateria:	; 1 bytes @ 0x0
  1360  0020                     ??_checaBotaoAjustes:	; 1 bytes @ 0x0
  1361  0020                     ??_exibeNumeroP:	; 1 bytes @ 0x0
  1362  0020                     ??_exibeQuantidadeDeSensores:	; 1 bytes @ 0x0
  1363  0020                     ??_atualizaPainelDeLed:	; 1 bytes @ 0x0
  1364  0020                     ??_exibeNumero0:	; 1 bytes @ 0x0
  1365  0020                     ??_exibeNumero1:	; 1 bytes @ 0x0
  1366  0020                     ??_exibeNumero2:	; 1 bytes @ 0x0
  1367  0020                     ??_exibeNumero3:	; 1 bytes @ 0x0
  1368  0020                     ??_exibeNumero4:	; 1 bytes @ 0x0
  1369  0020                     ??_exibeNumero5:	; 1 bytes @ 0x0
  1370  0020                     ??_exibeNumero6:	; 1 bytes @ 0x0
  1371  0020                     ??_exibeNumero7:	; 1 bytes @ 0x0
  1372  0020                     ??_exibeNumero8:	; 1 bytes @ 0x0
  1373  0020                     ??_exibeNumero9:	; 1 bytes @ 0x0
  1374  0020                     ??_exibeNumeroA:	; 1 bytes @ 0x0
  1375  0020                     ??_ligaPainelLed:	; 1 bytes @ 0x0
  1376  0020                     ??_desligaPainelLed:	; 1 bytes @ 0x0
  1377  0020                     ??_isdigit:	; 1 bytes @ 0x0
  1378  0020                     ??_iniHardware:	; 1 bytes @ 0x0
  1379  0020                     ??_iniTimer1:	; 1 bytes @ 0x0
  1380  0020                     ??_iniUart:	; 1 bytes @ 0x0
  1381  0020                     ??_INT0_init:	; 1 bytes @ 0x0
  1382  0020                     ??_liga_PWM2:	; 1 bytes @ 0x0
  1383  0020                     ?_delay_ms:	; 1 bytes @ 0x0
  1384  0020                     ??_desligaModuloBoost:	; 1 bytes @ 0x0
  1385  0020                     ??_setaSaidaEm20Volts:	; 1 bytes @ 0x0
  1386  0020                     	global	?_strlen
  1387                           ?_strlen:	; 2 bytes @ 0x0
  1388  0020                     	global	?___wmul
  1389                           ?___wmul:	; 2 bytes @ 0x0
  1390  0020                     	global	?___lwdiv
  1391                           ?___lwdiv:	; 2 bytes @ 0x0
  1392  0020                     	global	exibeQuantidadeDeSensores@quantidade
  1393                           exibeQuantidadeDeSensores@quantidade:	; 1 bytes @ 0x0
  1394  0020                     	global	_isdigit$1225
  1395                           _isdigit$1225:	; 1 bytes @ 0x0
  1396  0020                     	global	delay_ms@valor
  1397                           delay_ms@valor:	; 2 bytes @ 0x0
  1398  0020                     	global	delay_us@valor
  1399                           delay_us@valor:	; 2 bytes @ 0x0
  1400  0020                     	global	checaBotaoAjustes@contador
  1401                           checaBotaoAjustes@contador:	; 2 bytes @ 0x0
  1402  0020                     	global	___wmul@multiplier
  1403                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1404  0020                     	global	___lwdiv@divisor
  1405                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1406  0020                     	global	strlen@s
  1407                           strlen@s:	; 2 bytes @ 0x0
  1408  0020                     	ds	1
  1409  0020                     	global	liga_PWM2@freqPWM
  1410                           liga_PWM2@freqPWM:	; 1 bytes @ 0x1
  1411  0021                     	global	isdigit@c
  1412                           isdigit@c:	; 1 bytes @ 0x1
  1413  0021                     	ds	1
  1414  0021                     ??_delay_us:	; 1 bytes @ 0x2
  1415  0022                     ??_strlen:	; 1 bytes @ 0x2
  1416  0022                     ??_delay_ms:	; 1 bytes @ 0x2
  1417  0022                     	global	liga_PWM2@freq_pwm
  1418                           liga_PWM2@freq_pwm:	; 1 bytes @ 0x2
  1419  0022                     	global	delay_us@contador
  1420                           delay_us@contador:	; 2 bytes @ 0x2
  1421  0022                     	global	___wmul@multiplicand
  1422                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1423  0022                     	global	___lwdiv@dividend
  1424                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1425  0022                     	ds	1
  1426  0022                     	global	liga_PWM2@dutyCycle
  1427                           liga_PWM2@dutyCycle:	; 1 bytes @ 0x3
  1428  0023                     	ds	1
  1429  0023                     ??___wmul:	; 1 bytes @ 0x4
  1430  0024                     ??___lwdiv:	; 1 bytes @ 0x4
  1431  0024                     	global	?_obtemConvercaoAD
  1432                           ?_obtemConvercaoAD:	; 2 bytes @ 0x4
  1433  0024                     	global	delay_ms@contador
  1434                           delay_ms@contador:	; 2 bytes @ 0x4
  1435  0024                     	global	___wmul@product
  1436                           ___wmul@product:	; 2 bytes @ 0x4
  1437  0024                     	global	strlen@cp
  1438                           strlen@cp:	; 2 bytes @ 0x4
  1439  0024                     	ds	1
  1440  0024                     	global	___lwdiv@counter
  1441                           ___lwdiv@counter:	; 1 bytes @ 0x5
  1442  0025                     	ds	1
  1443  0025                     ??_inicializaDisplay:	; 1 bytes @ 0x6
  1444  0026                     ??_giraDisplay:	; 1 bytes @ 0x6
  1445  0026                     ?_enviaStringPelaUart:	; 1 bytes @ 0x6
  1446  0026                     ??_testaSaidaPulsadaEm9Volts:	; 1 bytes @ 0x6
  1447  0026                     ??_testaSaidaPulsadaEm20Volts:	; 1 bytes @ 0x6
  1448  0026                     ??_obtemConvercaoAD:	; 1 bytes @ 0x6
  1449  0026                     	global	enviaStringPelaUart@str
  1450                           enviaStringPelaUart@str:	; 2 bytes @ 0x6
  1451  0026                     	global	___lwdiv@quotient
  1452                           ___lwdiv@quotient:	; 2 bytes @ 0x6
  1453  0026                     	ds	2
  1454  0026                     	global	?___lwmod
  1455                           ?___lwmod:	; 2 bytes @ 0x8
  1456  0028                     	global	enviaStringPelaUart@tamanho
  1457                           enviaStringPelaUart@tamanho:	; 2 bytes @ 0x8
  1458  0028                     	global	___lwmod@divisor
  1459                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1460  0028                     	ds	2
  1461  0028                     ??_enviaStringPelaUart:	; 1 bytes @ 0xA
  1462  002A                     	global	___lwmod@dividend
  1463                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1464  002A                     	ds	2
  1465  002A                     ??___lwmod:	; 1 bytes @ 0xC
  1466  002C                     	global	obtemConvercaoAD@canal
  1467                           obtemConvercaoAD@canal:	; 1 bytes @ 0xC
  1468  002C                     	ds	1
  1469  002C                     	global	___lwmod@counter
  1470                           ___lwmod@counter:	; 1 bytes @ 0xD
  1471  002D                     	global	obtemConvercaoAD@valor
  1472                           obtemConvercaoAD@valor:	; 2 bytes @ 0xD
  1473  002D                     	global	enviaStringPelaUart@vetor
  1474                           enviaStringPelaUart@vetor:	; 2 bytes @ 0xD
  1475  002D                     	ds	1
  1476  002D                     	global	?_sprintf
  1477                           ?_sprintf:	; 2 bytes @ 0xE
  1478  002E                     	global	sprintf@sp
  1479                           sprintf@sp:	; 2 bytes @ 0xE
  1480  002E                     	ds	2
  1481  002E                     	global	sprintf@f
  1482                           sprintf@f:	; 1 bytes @ 0x10
  1483  0030                     	ds	3
  1484  0030                     ??_sprintf:	; 1 bytes @ 0x13
  1485  0033                     	ds	3
  1486  0033                     	global	sprintf@prec
  1487                           sprintf@prec:	; 1 bytes @ 0x16
  1488  0036                     	ds	1
  1489  0036                     	global	sprintf@ap
  1490                           sprintf@ap:	; 1 bytes @ 0x17
  1491  0037                     	ds	1
  1492  0037                     	global	sprintf@val
  1493                           sprintf@val:	; 2 bytes @ 0x18
  1494  0038                     	ds	2
  1495  0038                     	global	sprintf@flag
  1496                           sprintf@flag:	; 1 bytes @ 0x1A
  1497  003A                     	ds	1
  1498  003A                     	global	sprintf@width
  1499                           sprintf@width:	; 2 bytes @ 0x1B
  1500  003B                     	ds	2
  1501  003B                     	global	sprintf@c
  1502                           sprintf@c:	; 1 bytes @ 0x1D
  1503  003D                     	ds	1
  1504  003D                     ??_obtemTesteDoGoundBolt:	; 1 bytes @ 0x1E
  1505  003E                     ??_obtemNivelDeBateria:	; 1 bytes @ 0x1E
  1506  003E                     ??_obtemQuantidadeDeSensores:	; 1 bytes @ 0x1E
  1507  003E                     	ds	1
  1508  003E                     ??_entraEmModoAjuste:	; 1 bytes @ 0x1F
  1509  003F                     ??_executaTesteDosSensores:	; 1 bytes @ 0x1F
  1510  003F                     ??_modoTeste9:	; 1 bytes @ 0x1F
  1511  003F                     ??_modoTeste20:	; 1 bytes @ 0x1F
  1512  003F                     ??_main:	; 1 bytes @ 0x1F
  1513  003F                     	ds	1
  1514  003F                     ;!
  1515                           ;!Data Sizes:
  1516                           ;!    Strings     124
  1517                           ;!    Constant    10
  1518                           ;!    Data        0
  1519                           ;!    BSS         27
  1520                           ;!    Persistent  0
  1521                           ;!    Stack       0
  1522                           ;!
  1523                           ;!Auto Spaces:
  1524                           ;!    Space          Size  Autos    Used
  1525                           ;!    COMMON           14      6      12
  1526                           ;!    BANK0            80     32      32
  1527                           ;!    BANK1            80     52      73
  1528                           ;!    BANK3            96     50      50
  1529                           ;!    BANK2            96      0       0
  1530                           
  1531                           ;!
  1532                           ;!Pointer List with Targets:
  1533                           ;!
  1534                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 50
  1535                           ;!		 -> ObtemAmplitureDoSinal@mensagem(BANK0[50]), obtemTesteDoGoundBolt@mensagem(BANK1[
                                 50]), obtemNivelDeBateria@mensagem(BANK1[50]), obtemQuantidadeDeSensores@mensagem(BANK1[
                                 50]), 
  1536                           ;!		 -> main@mensagem(BANK3[50]), 
  1537                           ;!
  1538                           ;!    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
  1539                           ;!		 -> ObtemAmplitureDoSinal@mensagem(BANK0[50]), obtemTesteDoGoundBolt@mensagem(BANK1[
                                 50]), obtemNivelDeBateria@mensagem(BANK1[50]), obtemQuantidadeDeSensores@mensagem(BANK1[
                                 50]), 
  1540                           ;!		 -> main@mensagem(BANK3[50]), 
  1541                           ;!
  1542                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 32
  1543                           ;!		 -> STR_5(CODE[32]), STR_4(CODE[30]), STR_3(CODE[30]), STR_2(CODE[32]), 
  1544                           ;!		 -> STR_1(CODE[3]), 
  1545                           ;!
  1546                           ;!    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
  1547                           ;!		 -> ObtemAmplitureDoSinal@mensagem(BANK0[50]), obtemTesteDoGoundBolt@mensagem(BANK1[
                                 50]), obtemNivelDeBateria@mensagem(BANK1[50]), obtemQuantidadeDeSensores@mensagem(BANK1[
                                 50]), 
  1548                           ;!		 -> main@mensagem(BANK3[50]), 
  1549                           ;!
  1550                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1551                           ;!		 -> ?_sprintf(BANK0[2]), 
  1552                           ;!
  1553                           ;!    enviaStringPelaUart@str	PTR unsigned char  size(2) Largest target is 50
  1554                           ;!		 -> ObtemAmplitureDoSinal@mensagem(BANK0[50]), obtemTesteDoGoundBolt@mensagem(BANK1[
                                 50]), obtemNivelDeBateria@mensagem(BANK1[50]), obtemQuantidadeDeSensores@mensagem(BANK1[
                                 50]), 
  1555                           ;!		 -> main@mensagem(BANK3[50]), 
  1556                           ;!
  1557                           
  1558                           
  1559                           ;!
  1560                           ;!Critical Paths under _main in COMMON
  1561                           ;!
  1562                           ;!    None.
  1563                           ;!
  1564                           ;!Critical Paths under _trataInterrupcao in COMMON
  1565                           ;!
  1566                           ;!    _trataInterrupcao->_trataEntradaPulsada
  1567                           ;!
  1568                           ;!Critical Paths under _main in BANK0
  1569                           ;!
  1570                           ;!    _main->_obtemNivelDeBateria
  1571                           ;!    _main->_obtemTesteDoGoundBolt
  1572                           ;!    _obtemTesteDoGoundBolt->_sprintf
  1573                           ;!    _obtemNivelDeBateria->_sprintf
  1574                           ;!    _inicializaDisplay->_delay_ms
  1575                           ;!    _giraDisplay->_delay_ms
  1576                           ;!    _executaTesteDosSensores->_obtemQuantidadeDeSensores
  1577                           ;!    _testaSaidaPulsadaEm9Volts->_delay_ms
  1578                           ;!    _testaSaidaPulsadaEm20Volts->_delay_ms
  1579                           ;!    _modoTeste9->_obtemQuantidadeDeSensores
  1580                           ;!    _modoTeste20->_obtemQuantidadeDeSensores
  1581                           ;!    _obtemQuantidadeDeSensores->_sprintf
  1582                           ;!    _sprintf->___lwmod
  1583                           ;!    ___lwmod->___lwdiv
  1584                           ;!    _obtemConvercaoAD->_delay_us
  1585                           ;!    _enviaStringPelaUart->_strlen
  1586                           ;!
  1587                           ;!Critical Paths under _trataInterrupcao in BANK0
  1588                           ;!
  1589                           ;!    None.
  1590                           ;!
  1591                           ;!Critical Paths under _main in BANK1
  1592                           ;!
  1593                           ;!    _main->_obtemNivelDeBateria
  1594                           ;!    _main->_obtemTesteDoGoundBolt
  1595                           ;!    _executaTesteDosSensores->_obtemQuantidadeDeSensores
  1596                           ;!    _modoTeste9->_obtemQuantidadeDeSensores
  1597                           ;!    _modoTeste20->_obtemQuantidadeDeSensores
  1598                           ;!
  1599                           ;!Critical Paths under _trataInterrupcao in BANK1
  1600                           ;!
  1601                           ;!    None.
  1602                           ;!
  1603                           ;!Critical Paths under _main in BANK3
  1604                           ;!
  1605                           ;!    None.
  1606                           ;!
  1607                           ;!Critical Paths under _trataInterrupcao in BANK3
  1608                           ;!
  1609                           ;!    None.
  1610                           ;!
  1611                           ;!Critical Paths under _main in BANK2
  1612                           ;!
  1613                           ;!    None.
  1614                           ;!
  1615                           ;!Critical Paths under _trataInterrupcao in BANK2
  1616                           ;!
  1617                           ;!    None.
  1618                           
  1619 ;;
  1620 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1621 ;;
  1622                           
  1623                           ;!
  1624                           ;!Call Graph Tables:
  1625                           ;!
  1626                           ;! ---------------------------------------------------------------------------------
  1627                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1628                           ;! ---------------------------------------------------------------------------------
  1629                           ;! (0) _main                                                51    51      0   48664
  1630                           ;!                                             31 BANK0      1     1      0
  1631                           ;!                                              0 BANK3     50    50      0
  1632                           ;!                          _INT0_init
  1633                           ;!                  _checaBotaoAjustes
  1634                           ;!                           _delay_ms
  1635                           ;!                  _entraEmModoAjuste
  1636                           ;!                _enviaStringPelaUart
  1637                           ;!            _executaTesteDosSensores
  1638                           ;!                  _exibeNumeroNenhum
  1639                           ;!                       _exibeNumeroP
  1640                           ;!                        _giraDisplay
  1641                           ;!                        _iniHardware
  1642                           ;!                          _iniTimer1
  1643                           ;!                            _iniUart
  1644                           ;!                  _inicializaDisplay
  1645                           ;!                _ligaLEDVerdeBateria
  1646                           ;!             _ligaLEDVermelhoBateria
  1647                           ;!                    _ligaModuloBoost
  1648                           ;!                          _liga_PWM2
  1649                           ;!                _obtemNivelDeBateria
  1650                           ;!              _obtemTesteDoGoundBolt
  1651                           ;!                  _setaSaidaEm9Volts
  1652                           ;!                            _sprintf
  1653                           ;!                             _strlen
  1654                           ;! ---------------------------------------------------------------------------------
  1655                           ;! (1) _obtemTesteDoGoundBolt                               53    53      0    5041
  1656                           ;!                                             30 BANK0      1     1      0
  1657                           ;!                                              0 BANK1     52    52      0
  1658                           ;!                _enviaStringPelaUart
  1659                           ;!                   _obtemConvercaoAD
  1660                           ;!                            _sprintf
  1661                           ;!                             _strlen
  1662                           ;! ---------------------------------------------------------------------------------
  1663                           ;! (1) _obtemNivelDeBateria                                 53    53      0    4917
  1664                           ;!                                             30 BANK0      1     1      0
  1665                           ;!                                              0 BANK1     52    52      0
  1666                           ;!                _enviaStringPelaUart
  1667                           ;!                _ligaLEDVerdeBateria
  1668                           ;!             _ligaLEDVermelhoBateria
  1669                           ;!                   _obtemConvercaoAD
  1670                           ;!                            _sprintf
  1671                           ;!                             _strlen
  1672                           ;! ---------------------------------------------------------------------------------
  1673                           ;! (2) _ligaLEDVermelhoBateria                               0     0      0       0
  1674                           ;! ---------------------------------------------------------------------------------
  1675                           ;! (2) _ligaLEDVerdeBateria                                  0     0      0       0
  1676                           ;! ---------------------------------------------------------------------------------
  1677                           ;! (1) _liga_PWM2                                            4     4      0      68
  1678                           ;!                                              0 BANK0      4     4      0
  1679                           ;! ---------------------------------------------------------------------------------
  1680                           ;! (1) _inicializaDisplay                                    0     0      0    2169
  1681                           ;!                           _delay_ms
  1682                           ;!                   _desligaPainelLed
  1683                           ;!                       _exibeNumero8
  1684                           ;!                  _exibeNumeroNenhum
  1685                           ;!                      _ligaPainelLed
  1686                           ;! ---------------------------------------------------------------------------------
  1687                           ;! (2) _ligaPainelLed                                        0     0      0       0
  1688                           ;! ---------------------------------------------------------------------------------
  1689                           ;! (2) _exibeNumeroNenhum                                    0     0      0       0
  1690                           ;! ---------------------------------------------------------------------------------
  1691                           ;! (2) _desligaPainelLed                                     0     0      0       0
  1692                           ;! ---------------------------------------------------------------------------------
  1693                           ;! (1) _iniUart                                              0     0      0       0
  1694                           ;! ---------------------------------------------------------------------------------
  1695                           ;! (1) _iniTimer1                                            0     0      0       0
  1696                           ;! ---------------------------------------------------------------------------------
  1697                           ;! (1) _iniHardware                                          0     0      0       0
  1698                           ;! ---------------------------------------------------------------------------------
  1699                           ;! (1) _giraDisplay                                          0     0      0    2169
  1700                           ;!                           _delay_ms
  1701                           ;! ---------------------------------------------------------------------------------
  1702                           ;! (1) _exibeNumeroP                                         0     0      0       0
  1703                           ;! ---------------------------------------------------------------------------------
  1704                           ;! (1) _executaTesteDosSensores                              0     0      0    9878
  1705                           ;!                _atualizaPainelDeLed
  1706                           ;!          _exibeQuantidadeDeSensores
  1707                           ;!          _obtemQuantidadeDeSensores
  1708                           ;!         _testaSaidaPulsadaEm20Volts
  1709                           ;!          _testaSaidaPulsadaEm9Volts
  1710                           ;! ---------------------------------------------------------------------------------
  1711                           ;! (2) _testaSaidaPulsadaEm9Volts                            1     1      0    2169
  1712                           ;!                                              6 BANK0      1     1      0
  1713                           ;!                           _delay_ms
  1714                           ;!                  _setaSaidaEm9Volts
  1715                           ;! ---------------------------------------------------------------------------------
  1716                           ;! (2) _testaSaidaPulsadaEm20Volts                           1     1      0    2169
  1717                           ;!                                              6 BANK0      1     1      0
  1718                           ;!                           _delay_ms
  1719                           ;!                 _setaSaidaEm20Volts
  1720                           ;! ---------------------------------------------------------------------------------
  1721                           ;! (2) _atualizaPainelDeLed                                  0     0      0       0
  1722                           ;! ---------------------------------------------------------------------------------
  1723                           ;! (1) _entraEmModoAjuste                                    0     0      0   17655
  1724                           ;!                  _checaBotaoAjustes
  1725                           ;!                           _delay_ms
  1726                           ;!                 _desligaModuloBoost
  1727                           ;!                    _ligaModuloBoost
  1728                           ;!                        _modoTeste20
  1729                           ;!                         _modoTeste9
  1730                           ;!                 _setaSaidaEm20Volts
  1731                           ;!                  _setaSaidaEm9Volts
  1732                           ;! ---------------------------------------------------------------------------------
  1733                           ;! (2) _modoTeste9                                           0     0      0    7709
  1734                           ;!                           _delay_ms
  1735                           ;!          _exibeQuantidadeDeSensores
  1736                           ;!          _obtemQuantidadeDeSensores
  1737                           ;!                  _setaSaidaEm9Volts
  1738                           ;! ---------------------------------------------------------------------------------
  1739                           ;! (1) _setaSaidaEm9Volts                                    0     0      0       0
  1740                           ;! ---------------------------------------------------------------------------------
  1741                           ;! (2) _modoTeste20                                          0     0      0    7709
  1742                           ;!                           _delay_ms
  1743                           ;!          _exibeQuantidadeDeSensores
  1744                           ;!          _obtemQuantidadeDeSensores
  1745                           ;!                 _setaSaidaEm20Volts
  1746                           ;! ---------------------------------------------------------------------------------
  1747                           ;! (3) _setaSaidaEm20Volts                                   0     0      0       0
  1748                           ;! ---------------------------------------------------------------------------------
  1749                           ;! (2) _obtemQuantidadeDeSensores                           55    55      0    5509
  1750                           ;!                                             30 BANK0      1     1      0
  1751                           ;!                                              0 BANK1     52    52      0
  1752                           ;!                _enviaStringPelaUart
  1753                           ;!                   _obtemConvercaoAD
  1754                           ;!                            _sprintf
  1755                           ;!                             _strlen
  1756                           ;! ---------------------------------------------------------------------------------
  1757                           ;! (1) _strlen                                               6     4      2     315
  1758                           ;!                                              0 BANK0      6     4      2
  1759                           ;! ---------------------------------------------------------------------------------
  1760                           ;! (1) _sprintf                                             24    19      5    3278
  1761                           ;!                                             14 BANK0     16    11      5
  1762                           ;!                            ___lwdiv
  1763                           ;!                            ___lwmod
  1764                           ;!                             ___wmul
  1765                           ;!                            _isdigit
  1766                           ;! ---------------------------------------------------------------------------------
  1767                           ;! (2) _isdigit                                              2     2      0      99
  1768                           ;!                                              0 BANK0      2     2      0
  1769                           ;! ---------------------------------------------------------------------------------
  1770                           ;! (2) ___wmul                                               6     2      4     316
  1771                           ;!                                              0 BANK0      6     2      4
  1772                           ;! ---------------------------------------------------------------------------------
  1773                           ;! (2) ___lwmod                                              6     2      4     412
  1774                           ;!                                              8 BANK0      6     2      4
  1775                           ;!                            ___lwdiv (ARG)
  1776                           ;! ---------------------------------------------------------------------------------
  1777                           ;! (2) ___lwdiv                                              8     4      4     421
  1778                           ;!                                              0 BANK0      8     4      4
  1779                           ;! ---------------------------------------------------------------------------------
  1780                           ;! (2) _obtemConvercaoAD                                    11     9      2     291
  1781                           ;!                                              4 BANK0     11     9      2
  1782                           ;!                           _delay_us
  1783                           ;! ---------------------------------------------------------------------------------
  1784                           ;! (3) _delay_us                                             4     2      2     189
  1785                           ;!                                              0 BANK0      4     2      2
  1786                           ;! ---------------------------------------------------------------------------------
  1787                           ;! (2) _enviaStringPelaUart                                  9     5      4     796
  1788                           ;!                                              6 BANK0      9     5      4
  1789                           ;!                             _strlen (ARG)
  1790                           ;! ---------------------------------------------------------------------------------
  1791                           ;! (2) _exibeQuantidadeDeSensores                           51    51      0      31
  1792                           ;!                                              0 BANK0      1     1      0
  1793                           ;!                       _exibeNumero0
  1794                           ;!                       _exibeNumero1
  1795                           ;!                       _exibeNumero2
  1796                           ;!                       _exibeNumero3
  1797                           ;!                       _exibeNumero4
  1798                           ;!                       _exibeNumero5
  1799                           ;!                       _exibeNumero6
  1800                           ;!                       _exibeNumero7
  1801                           ;!                       _exibeNumero8
  1802                           ;!                       _exibeNumero9
  1803                           ;!                       _exibeNumeroA
  1804                           ;! ---------------------------------------------------------------------------------
  1805                           ;! (3) _exibeNumeroA                                         0     0      0       0
  1806                           ;! ---------------------------------------------------------------------------------
  1807                           ;! (3) _exibeNumero9                                         0     0      0       0
  1808                           ;! ---------------------------------------------------------------------------------
  1809                           ;! (2) _exibeNumero8                                         0     0      0       0
  1810                           ;! ---------------------------------------------------------------------------------
  1811                           ;! (3) _exibeNumero7                                         0     0      0       0
  1812                           ;! ---------------------------------------------------------------------------------
  1813                           ;! (3) _exibeNumero6                                         0     0      0       0
  1814                           ;! ---------------------------------------------------------------------------------
  1815                           ;! (3) _exibeNumero5                                         0     0      0       0
  1816                           ;! ---------------------------------------------------------------------------------
  1817                           ;! (3) _exibeNumero4                                         0     0      0       0
  1818                           ;! ---------------------------------------------------------------------------------
  1819                           ;! (3) _exibeNumero3                                         0     0      0       0
  1820                           ;! ---------------------------------------------------------------------------------
  1821                           ;! (3) _exibeNumero2                                         0     0      0       0
  1822                           ;! ---------------------------------------------------------------------------------
  1823                           ;! (3) _exibeNumero1                                         0     0      0       0
  1824                           ;! ---------------------------------------------------------------------------------
  1825                           ;! (3) _exibeNumero0                                         0     0      0       0
  1826                           ;! ---------------------------------------------------------------------------------
  1827                           ;! (2) _delay_ms                                             6     4      2    2169
  1828                           ;!                                              0 BANK0      6     4      2
  1829                           ;! ---------------------------------------------------------------------------------
  1830                           ;! (1) _ligaModuloBoost                                      0     0      0       0
  1831                           ;! ---------------------------------------------------------------------------------
  1832                           ;! (2) _desligaModuloBoost                                   0     0      0       0
  1833                           ;! ---------------------------------------------------------------------------------
  1834                           ;! (2) _checaBotaoAjustes                                    2     2      0      68
  1835                           ;!                                              0 BANK0      2     2      0
  1836                           ;! ---------------------------------------------------------------------------------
  1837                           ;! (1) _INT0_init                                            0     0      0       0
  1838                           ;! ---------------------------------------------------------------------------------
  1839                           ;! Estimated maximum stack depth 3
  1840                           ;! ---------------------------------------------------------------------------------
  1841                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1842                           ;! ---------------------------------------------------------------------------------
  1843                           ;! (6) _trataInterrupcao                                     4     4      0      45
  1844                           ;!                                              2 COMMON     4     4      0
  1845                           ;!                    _operacoesEmTick
  1846                           ;!                _trataEntradaPulsada
  1847                           ;! ---------------------------------------------------------------------------------
  1848                           ;! (7) _trataEntradaPulsada                                 52    52      0      45
  1849                           ;!                                              0 COMMON     2     2      0
  1850                           ;! ---------------------------------------------------------------------------------
  1851                           ;! (7) _operacoesEmTick                                      0     0      0       0
  1852                           ;! ---------------------------------------------------------------------------------
  1853                           ;! Estimated maximum stack depth 7
  1854                           ;! ---------------------------------------------------------------------------------
  1855                           ;!
  1856                           ;! Call Graph Graphs:
  1857                           ;!
  1858                           ;! _main (ROOT)
  1859                           ;!   _INT0_init
  1860                           ;!   _checaBotaoAjustes
  1861                           ;!   _delay_ms
  1862                           ;!   _entraEmModoAjuste
  1863                           ;!     _checaBotaoAjustes
  1864                           ;!     _delay_ms
  1865                           ;!     _desligaModuloBoost
  1866                           ;!     _ligaModuloBoost
  1867                           ;!     _modoTeste20
  1868                           ;!       _delay_ms
  1869                           ;!       _exibeQuantidadeDeSensores
  1870                           ;!         _exibeNumero0
  1871                           ;!         _exibeNumero1
  1872                           ;!         _exibeNumero2
  1873                           ;!         _exibeNumero3
  1874                           ;!         _exibeNumero4
  1875                           ;!         _exibeNumero5
  1876                           ;!         _exibeNumero6
  1877                           ;!         _exibeNumero7
  1878                           ;!         _exibeNumero8
  1879                           ;!         _exibeNumero9
  1880                           ;!         _exibeNumeroA
  1881                           ;!       _obtemQuantidadeDeSensores
  1882                           ;!         _enviaStringPelaUart
  1883                           ;!           _strlen (ARG)
  1884                           ;!         _obtemConvercaoAD
  1885                           ;!           _delay_us
  1886                           ;!         _sprintf
  1887                           ;!           ___lwdiv
  1888                           ;!           ___lwmod
  1889                           ;!             ___lwdiv (ARG)
  1890                           ;!           ___wmul
  1891                           ;!           _isdigit
  1892                           ;!         _strlen
  1893                           ;!       _setaSaidaEm20Volts
  1894                           ;!     _modoTeste9
  1895                           ;!       _delay_ms
  1896                           ;!       _exibeQuantidadeDeSensores
  1897                           ;!         _exibeNumero0
  1898                           ;!         _exibeNumero1
  1899                           ;!         _exibeNumero2
  1900                           ;!         _exibeNumero3
  1901                           ;!         _exibeNumero4
  1902                           ;!         _exibeNumero5
  1903                           ;!         _exibeNumero6
  1904                           ;!         _exibeNumero7
  1905                           ;!         _exibeNumero8
  1906                           ;!         _exibeNumero9
  1907                           ;!         _exibeNumeroA
  1908                           ;!       _obtemQuantidadeDeSensores
  1909                           ;!         _enviaStringPelaUart
  1910                           ;!           _strlen (ARG)
  1911                           ;!         _obtemConvercaoAD
  1912                           ;!           _delay_us
  1913                           ;!         _sprintf
  1914                           ;!           ___lwdiv
  1915                           ;!           ___lwmod
  1916                           ;!             ___lwdiv (ARG)
  1917                           ;!           ___wmul
  1918                           ;!           _isdigit
  1919                           ;!         _strlen
  1920                           ;!       _setaSaidaEm9Volts
  1921                           ;!     _setaSaidaEm20Volts
  1922                           ;!     _setaSaidaEm9Volts
  1923                           ;!   _enviaStringPelaUart
  1924                           ;!     _strlen (ARG)
  1925                           ;!   _executaTesteDosSensores
  1926                           ;!     _atualizaPainelDeLed
  1927                           ;!     _exibeQuantidadeDeSensores
  1928                           ;!       _exibeNumero0
  1929                           ;!       _exibeNumero1
  1930                           ;!       _exibeNumero2
  1931                           ;!       _exibeNumero3
  1932                           ;!       _exibeNumero4
  1933                           ;!       _exibeNumero5
  1934                           ;!       _exibeNumero6
  1935                           ;!       _exibeNumero7
  1936                           ;!       _exibeNumero8
  1937                           ;!       _exibeNumero9
  1938                           ;!       _exibeNumeroA
  1939                           ;!     _obtemQuantidadeDeSensores
  1940                           ;!       _enviaStringPelaUart
  1941                           ;!         _strlen (ARG)
  1942                           ;!       _obtemConvercaoAD
  1943                           ;!         _delay_us
  1944                           ;!       _sprintf
  1945                           ;!         ___lwdiv
  1946                           ;!         ___lwmod
  1947                           ;!           ___lwdiv (ARG)
  1948                           ;!         ___wmul
  1949                           ;!         _isdigit
  1950                           ;!       _strlen
  1951                           ;!     _testaSaidaPulsadaEm20Volts
  1952                           ;!       _delay_ms
  1953                           ;!       _setaSaidaEm20Volts
  1954                           ;!     _testaSaidaPulsadaEm9Volts
  1955                           ;!       _delay_ms
  1956                           ;!       _setaSaidaEm9Volts
  1957                           ;!   _exibeNumeroNenhum
  1958                           ;!   _exibeNumeroP
  1959                           ;!   _giraDisplay
  1960                           ;!     _delay_ms
  1961                           ;!   _iniHardware
  1962                           ;!   _iniTimer1
  1963                           ;!   _iniUart
  1964                           ;!   _inicializaDisplay
  1965                           ;!     _delay_ms
  1966                           ;!     _desligaPainelLed
  1967                           ;!     _exibeNumero8
  1968                           ;!     _exibeNumeroNenhum
  1969                           ;!     _ligaPainelLed
  1970                           ;!   _ligaLEDVerdeBateria
  1971                           ;!   _ligaLEDVermelhoBateria
  1972                           ;!   _ligaModuloBoost
  1973                           ;!   _liga_PWM2
  1974                           ;!   _obtemNivelDeBateria
  1975                           ;!     _enviaStringPelaUart
  1976                           ;!       _strlen (ARG)
  1977                           ;!     _ligaLEDVerdeBateria
  1978                           ;!     _ligaLEDVermelhoBateria
  1979                           ;!     _obtemConvercaoAD
  1980                           ;!       _delay_us
  1981                           ;!     _sprintf
  1982                           ;!       ___lwdiv
  1983                           ;!       ___lwmod
  1984                           ;!         ___lwdiv (ARG)
  1985                           ;!       ___wmul
  1986                           ;!       _isdigit
  1987                           ;!     _strlen
  1988                           ;!   _obtemTesteDoGoundBolt
  1989                           ;!     _enviaStringPelaUart
  1990                           ;!       _strlen (ARG)
  1991                           ;!     _obtemConvercaoAD
  1992                           ;!       _delay_us
  1993                           ;!     _sprintf
  1994                           ;!       ___lwdiv
  1995                           ;!       ___lwmod
  1996                           ;!         ___lwdiv (ARG)
  1997                           ;!       ___wmul
  1998                           ;!       _isdigit
  1999                           ;!     _strlen
  2000                           ;!   _setaSaidaEm9Volts
  2001                           ;!   _sprintf
  2002                           ;!     ___lwdiv
  2003                           ;!     ___lwmod
  2004                           ;!       ___lwdiv (ARG)
  2005                           ;!     ___wmul
  2006                           ;!     _isdigit
  2007                           ;!   _strlen
  2008                           ;!
  2009                           ;! _trataInterrupcao (ROOT)
  2010                           ;!   _operacoesEmTick
  2011                           ;!   _trataEntradaPulsada
  2012                           ;!
  2013                           
  2014                           ;! Address spaces:
  2015                           
  2016                           ;!Name               Size   Autos  Total    Cost      Usage
  2017                           ;!BITCOMMON            E      0       0       0        0.0%
  2018                           ;!EEDATA             100      0       0       0        0.0%
  2019                           ;!NULL                 0      0       0       0        0.0%
  2020                           ;!CODE                 0      0       0       0        0.0%
  2021                           ;!COMMON               E      6       C       1       85.7%
  2022                           ;!BITSFR0              0      0       0       1        0.0%
  2023                           ;!SFR0                 0      0       0       1        0.0%
  2024                           ;!BITSFR1              0      0       0       2        0.0%
  2025                           ;!SFR1                 0      0       0       2        0.0%
  2026                           ;!STACK                0      0       0       2        0.0%
  2027                           ;!ABS                  0      0      A7       3        0.0%
  2028                           ;!BITBANK0            50      0       0       4        0.0%
  2029                           ;!BITSFR3              0      0       0       4        0.0%
  2030                           ;!SFR3                 0      0       0       4        0.0%
  2031                           ;!BANK0               50     20      20       5       40.0%
  2032                           ;!BITSFR2              0      0       0       5        0.0%
  2033                           ;!SFR2                 0      0       0       5        0.0%
  2034                           ;!BITBANK1            50      0       0       6        0.0%
  2035                           ;!BANK1               50     34      49       7       91.3%
  2036                           ;!BITBANK3            60      0       0       8        0.0%
  2037                           ;!BANK3               60     32      32       9       52.1%
  2038                           ;!BITBANK2            60      0       0      10        0.0%
  2039                           ;!BANK2               60      0       0      11        0.0%
  2040                           ;!DATA                 0      0      A7      12        0.0%
  2041                           
  2042                           	global	_main
  2043                           
  2044 ;; *************** function _main *****************
  2045 ;; Defined at:
  2046 ;;		line 175 in file "src/main.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  mensagem       50    0[BANK3 ] unsigned char [50]
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : B00/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         0       0       0      50       0
  2062 ;;      Temps:          0       1       0       0       0
  2063 ;;      Totals:         0       1       0      50       0
  2064 ;;Total ram usage:       51 bytes
  2065 ;; Hardware stack levels required when called:    7
  2066 ;; This function calls:
  2067 ;;		_INT0_init
  2068 ;;		_checaBotaoAjustes
  2069 ;;		_delay_ms
  2070 ;;		_entraEmModoAjuste
  2071 ;;		_enviaStringPelaUart
  2072 ;;		_executaTesteDosSensores
  2073 ;;		_exibeNumeroNenhum
  2074 ;;		_exibeNumeroP
  2075 ;;		_giraDisplay
  2076 ;;		_iniHardware
  2077 ;;		_iniTimer1
  2078 ;;		_iniUart
  2079 ;;		_inicializaDisplay
  2080 ;;		_ligaLEDVerdeBateria
  2081 ;;		_ligaLEDVermelhoBateria
  2082 ;;		_ligaModuloBoost
  2083 ;;		_liga_PWM2
  2084 ;;		_obtemNivelDeBateria
  2085 ;;		_obtemTesteDoGoundBolt
  2086 ;;		_setaSaidaEm9Volts
  2087 ;;		_sprintf
  2088 ;;		_strlen
  2089 ;; This function is called by:
  2090 ;;		Startup code after reset
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2094                           	file	"src/main.c"
  2095                           	line	175
  2096                           global __pmaintext
  2097                           __pmaintext:	;psect for function _main
  2098  03B7                     psect	maintext
  2099                           	file	"src/main.c"
  2100                           	line	175
  2101                           	global	__size_of_main
  2102                           	__size_of_main	equ	__end_of_main-_main
  2103  0106                     	
  2104                           _main:	
  2105  03B7                     ;incstack = 0
  2106                           	opt	stack 1
  2107                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2108                           	line	177
  2109                           	
  2110                           l4215:	
  2111  03B7                     ;main.c: 177: iniHardware();
  2112                           	fcall	_iniHardware
  2113  03B7  120A  158A  22F7  120A  118A  	line	179
  2114                           	
  2115                           l4217:	
  2116  03BC                     ;main.c: 179: iniTimer1();
  2117                           	fcall	_iniTimer1
  2118  03BC  120A  158A  2212  120A  118A  	line	181
  2119                           	
  2120                           l4219:	
  2121  03C1                     ;main.c: 181: iniUart();
  2122                           	fcall	_iniUart
  2123  03C1  120A  158A  2246  120A  118A  	line	182
  2124                           	
  2125                           l4221:	
  2126  03C6                     ;main.c: 182: liga_PWM2(100);
  2127                           	movlw	low(064h)
  2128  03C6  3064               	fcall	_liga_PWM2
  2129  03C7  120A  158A  225D  120A  118A  	line	184
  2130                           	
  2131                           l4223:	
  2132  03CC                     ;main.c: 184: setaSaidaEm9Volts();
  2133                           	fcall	_setaSaidaEm9Volts
  2134  03CC  120A  158A  2166  120A  118A  	line	185
  2135                           	
  2136                           l4225:	
  2137  03D1                     ;main.c: 185: RD1 = 0;
  2138                           	bcf	status, 5	;RP0=0, select bank0
  2139  03D1  1283               	bcf	status, 6	;RP1=0, select bank0
  2140  03D2  1303               	bcf	(65/8),(65)&7	;volatile
  2141  03D3  1088               	line	186
  2142                           ;main.c: 186: inicializaDisplay();
  2143                           	fcall	_inicializaDisplay
  2144  03D4  120A  158A  22B6  120A  118A  	line	187
  2145                           	
  2146                           l4227:	
  2147  03D9                     ;main.c: 187: INT0_init();
  2148                           	fcall	_INT0_init
  2149  03D9  120A  158A  216B  120A  118A  	line	188
  2150                           	
  2151                           l4229:	
  2152  03DE                     ;main.c: 188: exibeNumeroNenhum();
  2153                           	fcall	_exibeNumeroNenhum
  2154  03DE  120A  158A  2207  120A  118A  	line	189
  2155                           ;main.c: 189: delay_ms(500);
  2156                           	movlw	0F4h
  2157  03E3  30F4               	bcf	status, 5	;RP0=0, select bank0
  2158  03E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2159  03E5  1303               	movwf	(delay_ms@valor)
  2160  03E6  00A0               	movlw	01h
  2161  03E7  3001               	movwf	((delay_ms@valor))+1
  2162  03E8  00A1               	fcall	_delay_ms
  2163  03E9  120A  118A  27D9  120A  118A  	line	190
  2164                           	
  2165                           l4231:	
  2166  03EE                     ;main.c: 190: ligaModuloBoost();
  2167                           	fcall	_ligaModuloBoost
  2168  03EE  120A  118A  2003  120A  118A  	goto	l292
  2169  03F3  2BF5               	line	192
  2170                           ;main.c: 192: do{ while (WR) { continue; } EEADR = (0); EEDATA = (0); EECON1 &= 0x3F; CA
                                 RRY = 0; if (GIE) { CARRY = 1; } GIE = 0; WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; WR = 1
                                 ; WREN = 0; if (CARRY) { GIE = 1; } } while (0);
  2171                           	
  2172                           l291:	
  2173  03F4                     	goto	l292
  2174  03F4  2BF5               	
  2175                           l293:	
  2176  03F5                     	
  2177                           l292:	
  2178  03F5                     	bsf	status, 5	;RP0=1, select bank3
  2179  03F5  1683               	bsf	status, 6	;RP1=1, select bank3
  2180  03F6  1703               	btfsc	(3169/8)^0180h,(3169)&7	;volsfr
  2181  03F7  188C               	goto	u4051
  2182  03F8  2BFA               	goto	u4050
  2183  03F9  2BFB               u4051:
  2184  03FA                     	goto	l292
  2185  03FA  2BF5               u4050:
  2186  03FB                     	goto	l4233
  2187  03FB  2BFC               	
  2188                           l294:	
  2189  03FC                     	
  2190                           l4233:	
  2191  03FC                     	bcf	status, 5	;RP0=0, select bank2
  2192  03FC  1283               	bsf	status, 6	;RP1=1, select bank2
  2193  03FD  1703               	clrf	(269)^0100h	;volatile
  2194  03FE  018D               	clrf	(268)^0100h	;volatile
  2195  03FF  018C               	
  2196                           l4235:	
  2197  0400                     	movlw	low(03Fh)
  2198  0400  303F               	bcf	status, 5	;RP0=0, select bank0
  2199  0401  1283               	bcf	status, 6	;RP1=0, select bank0
  2200  0402  1303               	movwf	(??_main+0)+0
  2201  0403  00BF               	movf	(??_main+0)+0,w
  2202  0404  083F               	bsf	status, 5	;RP0=1, select bank3
  2203  0405  1683               	bsf	status, 6	;RP1=1, select bank3
  2204  0406  1703               	andwf	(396)^0180h,f	;volsfr
  2205  0407  058C               	
  2206                           l4237:	
  2207  0408                     	bcf	status, 5	;RP0=0, select bank0
  2208  0408  1283               	bcf	status, 6	;RP1=0, select bank0
  2209  0409  1303               	bcf	(24/8),(24)&7	;volatile
  2210  040A  1003               	
  2211                           l4239:	
  2212  040B                     	btfss	(95/8),(95)&7	;volatile
  2213  040B  1F8B               	goto	u4061
  2214  040C  2C0E               	goto	u4060
  2215  040D  2C0F               u4061:
  2216  040E                     	goto	l295
  2217  040E  2C10               u4060:
  2218  040F                     	
  2219                           l4241:	
  2220  040F                     	bsf	(24/8),(24)&7	;volatile
  2221  040F  1403               	
  2222                           l295:	
  2223  0410                     	bcf	(95/8),(95)&7	;volatile
  2224  0410  138B               	bsf	status, 5	;RP0=1, select bank3
  2225  0411  1683               	bsf	status, 6	;RP1=1, select bank3
  2226  0412  1703               	bsf	(3170/8)^0180h,(3170)&7	;volsfr
  2227  0413  150C               	
  2228                           l4243:	
  2229  0414                     	movlw	low(055h)
  2230  0414  3055               	movwf	(397)^0180h	;volsfr
  2231  0415  008D               	movlw	low(0AAh)
  2232  0416  30AA               	movwf	(397)^0180h	;volsfr
  2233  0417  008D               	
  2234                           l4245:	
  2235  0418                     	bsf	(3169/8)^0180h,(3169)&7	;volsfr
  2236  0418  148C               	
  2237                           l4247:	
  2238  0419                     	bcf	(3170/8)^0180h,(3170)&7	;volsfr
  2239  0419  110C               	
  2240                           l4249:	
  2241  041A                     	bcf	status, 5	;RP0=0, select bank0
  2242  041A  1283               	bcf	status, 6	;RP1=0, select bank0
  2243  041B  1303               	btfss	(24/8),(24)&7	;volatile
  2244  041C  1C03               	goto	u4071
  2245  041D  2C1F               	goto	u4070
  2246  041E  2C20               u4071:
  2247  041F                     	goto	l4253
  2248  041F  2C23               u4070:
  2249  0420                     	
  2250                           l4251:	
  2251  0420                     	bsf	(95/8),(95)&7	;volatile
  2252  0420  178B               	goto	l4253
  2253  0421  2C23               	
  2254                           l296:	
  2255  0422                     	goto	l4253
  2256  0422  2C23               	
  2257                           l297:	
  2258  0423                     	line	193
  2259                           	
  2260                           l4253:	
  2261  0423                     ;main.c: 193: flagNivelDeBateria = ( EEADR = 0, EECON1 &= 0x3F, RD = 1, EEDATA);
  2262                           	bcf	status, 5	;RP0=0, select bank2
  2263  0423  1283               	bsf	status, 6	;RP1=1, select bank2
  2264  0424  1703               	clrf	(269)^0100h	;volatile
  2265  0425  018D               	
  2266                           l4255:	
  2267  0426                     	movlw	low(03Fh)
  2268  0426  303F               	bcf	status, 5	;RP0=0, select bank0
  2269  0427  1283               	bcf	status, 6	;RP1=0, select bank0
  2270  0428  1303               	movwf	(??_main+0)+0
  2271  0429  00BF               	movf	(??_main+0)+0,w
  2272  042A  083F               	bsf	status, 5	;RP0=1, select bank3
  2273  042B  1683               	bsf	status, 6	;RP1=1, select bank3
  2274  042C  1703               	andwf	(396)^0180h,f	;volsfr
  2275  042D  058C               	
  2276                           l4257:	
  2277  042E                     	bsf	(3168/8)^0180h,(3168)&7	;volsfr
  2278  042E  140C               	
  2279                           l4259:	
  2280  042F                     	bcf	status, 5	;RP0=0, select bank2
  2281  042F  1283               	bsf	status, 6	;RP1=1, select bank2
  2282  0430  1703               	movf	(268)^0100h,w	;volatile
  2283  0431  080C               	bcf	status, 5	;RP0=0, select bank0
  2284  0432  1283               	bcf	status, 6	;RP1=0, select bank0
  2285  0433  1303               	movwf	(??_main+0)+0
  2286  0434  00BF               	movf	(??_main+0)+0,w
  2287  0435  083F               	bsf	status, 5	;RP0=1, select bank1
  2288  0436  1683               	bcf	status, 6	;RP1=0, select bank1
  2289  0437  1303               	movwf	(_flagNivelDeBateria)^080h
  2290  0438  00E4               	line	194
  2291                           	
  2292                           l4261:	
  2293  0439                     ;main.c: 194: if(flagNivelDeBateria == 0){
  2294                           	movf	((_flagNivelDeBateria)^080h),w
  2295  0439  0864               	btfss	status,2
  2296  043A  1D03               	goto	u4081
  2297  043B  2C3D               	goto	u4080
  2298  043C  2C3E               u4081:
  2299  043D                     	goto	l4265
  2300  043D  2C44               u4080:
  2301  043E                     	line	195
  2302                           	
  2303                           l4263:	
  2304  043E                     ;main.c: 195: ligaLEDVerdeBateria();
  2305                           	fcall	_ligaLEDVerdeBateria
  2306  043E  120A  158A  2159  120A  118A  	line	196
  2307                           ;main.c: 196: }else{
  2308                           	goto	l4267
  2309  0443  2C4A               	
  2310                           l298:	
  2311  0444                     	line	197
  2312                           	
  2313                           l4265:	
  2314  0444                     ;main.c: 197: ligaLEDVermelhoBateria();
  2315                           	fcall	_ligaLEDVermelhoBateria
  2316  0444  120A  158A  215D  120A  118A  	goto	l4267
  2317  0449  2C4A               	line	198
  2318                           	
  2319                           l299:	
  2320  044A                     	line	200
  2321                           	
  2322                           l4267:	
  2323  044A                     ;main.c: 198: }
  2324                           ;main.c: 200: if(checaBotaoAjustes() == 1){
  2325                           	fcall	_checaBotaoAjustes
  2326  044A  120A  158A  22D6  120A  118A  	xorlw	01h
  2327  044F  3A01               	skipz
  2328  0450  1D03               	goto	u4091
  2329  0451  2C53               	goto	u4090
  2330  0452  2C54               u4091:
  2331  0453                     	goto	l4281
  2332  0453  2C80               u4090:
  2333  0454                     	line	201
  2334                           	
  2335                           l4269:	
  2336  0454                     ;main.c: 201: exibeNumeroP();
  2337                           	fcall	_exibeNumeroP
  2338  0454  120A  158A  21FC  120A  118A  	line	202
  2339                           	
  2340                           l4271:	
  2341  0459                     ;main.c: 202: delay_ms(1000);
  2342                           	movlw	0E8h
  2343  0459  30E8               	bcf	status, 5	;RP0=0, select bank0
  2344  045A  1283               	bcf	status, 6	;RP1=0, select bank0
  2345  045B  1303               	movwf	(delay_ms@valor)
  2346  045C  00A0               	movlw	03h
  2347  045D  3003               	movwf	((delay_ms@valor))+1
  2348  045E  00A1               	fcall	_delay_ms
  2349  045F  120A  118A  27D9  120A  118A  	line	203
  2350                           	
  2351                           l4273:	
  2352  0464                     ;main.c: 203: entraEmModoAjuste();
  2353                           	fcall	_entraEmModoAjuste
  2354  0464  120A  158A  2499  120A  118A  	line	204
  2355                           	
  2356                           l4275:	
  2357  0469                     ;main.c: 204: giraDisplay();
  2358                           	fcall	_giraDisplay
  2359  0469  120A  158A  2698  120A  118A  	line	205
  2360                           	
  2361                           l4277:	
  2362  046E                     ;main.c: 205: exibeNumeroNenhum();
  2363                           	fcall	_exibeNumeroNenhum
  2364  046E  120A  158A  2207  120A  118A  	line	206
  2365                           	
  2366                           l4279:	
  2367  0473                     ;main.c: 206: delay_ms(1000);
  2368                           	movlw	0E8h
  2369  0473  30E8               	bcf	status, 5	;RP0=0, select bank0
  2370  0474  1283               	bcf	status, 6	;RP1=0, select bank0
  2371  0475  1303               	movwf	(delay_ms@valor)
  2372  0476  00A0               	movlw	03h
  2373  0477  3003               	movwf	((delay_ms@valor))+1
  2374  0478  00A1               	fcall	_delay_ms
  2375  0479  120A  118A  27D9  120A  118A  	goto	l4281
  2376  047E  2C80               	line	207
  2377                           	
  2378                           l300:	
  2379  047F                     	goto	l4281
  2380  047F  2C80               	line	218
  2381                           ;main.c: 207: }
  2382                           ;main.c: 218: while(1){
  2383                           	
  2384                           l301:	
  2385  0480                     	line	220
  2386                           	
  2387                           l4281:	
  2388  0480                     ;main.c: 220: executaTesteDosSensores();
  2389                           	fcall	_executaTesteDosSensores
  2390  0480  120A  158A  2297  120A  118A  	line	221
  2391                           	
  2392                           l4283:	
  2393  0485                     ;main.c: 221: obtemTesteDoGoundBolt();
  2394                           	fcall	_obtemTesteDoGoundBolt
  2395  0485  120A  158A  25FD  120A  118A  	line	222
  2396                           	
  2397                           l4285:	
  2398  048A                     ;main.c: 222: obtemNivelDeBateria();
  2399                           	fcall	_obtemNivelDeBateria
  2400  048A  120A  118A  24BD  120A  118A  	line	225
  2401                           	
  2402                           l4287:	
  2403  048F                     ;main.c: 224: unsigned char mensagem[50];
  2404                           ;main.c: 225: sprintf(mensagem, "\r\n");
  2405                           	movlw	(low(main@mensagem|((0x1)<<8))&0ffh)
  2406  048F  3090               	bcf	status, 5	;RP0=0, select bank0
  2407  0490  1283               	bcf	status, 6	;RP1=0, select bank0
  2408  0491  1303               	movwf	(sprintf@sp)
  2409  0492  00AE               	movlw	(0x1)
  2410  0493  3001               	movwf	(sprintf@sp+1)
  2411  0494  00AF               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2412  0495  3028               	movwf	(??_main+0)+0
  2413  0496  00BF               	movf	(??_main+0)+0,w
  2414  0497  083F               	movwf	(sprintf@f)
  2415  0498  00B0               	fcall	_sprintf
  2416  0499  120A  118A  2028  120A  118A  	line	226
  2417                           	
  2418                           l4289:	
  2419  049E                     ;main.c: 226: enviaStringPelaUart(mensagem, strlen(mensagem));
  2420                           	movlw	(low(main@mensagem|((0x1)<<8))&0ffh)
  2421  049E  3090               	bcf	status, 5	;RP0=0, select bank0
  2422  049F  1283               	bcf	status, 6	;RP1=0, select bank0
  2423  04A0  1303               	movwf	(enviaStringPelaUart@str)
  2424  04A1  00A6               	movlw	(0x1)
  2425  04A2  3001               	movwf	(enviaStringPelaUart@str+1)
  2426  04A3  00A7               	movlw	(low(main@mensagem|((0x1)<<8))&0ffh)
  2427  04A4  3090               	movwf	(strlen@s)
  2428  04A5  00A0               	movlw	(0x1)
  2429  04A6  3001               	movwf	(strlen@s+1)
  2430  04A7  00A1               	fcall	_strlen
  2431  04A8  120A  158A  233F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2432  04AD  1283               	bcf	status, 6	;RP1=0, select bank0
  2433  04AE  1303               	movf	(1+(?_strlen)),w
  2434  04AF  0821               	movwf	(enviaStringPelaUart@tamanho+1)
  2435  04B0  00A9               	movf	(0+(?_strlen)),w
  2436  04B1  0820               	movwf	(enviaStringPelaUart@tamanho)
  2437  04B2  00A8               	fcall	_enviaStringPelaUart
  2438  04B3  120A  158A  23CE  120A  118A  	goto	l4281
  2439  04B8  2C80               	line	232
  2440                           	
  2441                           l302:	
  2442  04B9                     	line	218
  2443                           	goto	l4281
  2444  04B9  2C80               	
  2445                           l303:	
  2446  04BA                     	line	234
  2447                           	
  2448                           l304:	
  2449  04BA                     	global	start
  2450                           	ljmp	start
  2451  04BA  120A  118A  2812   	opt stack 0
  2452                           GLOBAL	__end_of_main
  2453                           	__end_of_main:
  2454  04BD                     	signat	_main,89
  2455                           	global	_obtemTesteDoGoundBolt
  2456                           
  2457 ;; *************** function _obtemTesteDoGoundBolt *****************
  2458 ;; Defined at:
  2459 ;;		line 596 in file "src/main.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  mensagem       50    0[BANK1 ] unsigned char [50]
  2464 ;;  resultadoDoT    2   50[BANK1 ] unsigned int 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         0       0      52       0       0
  2476 ;;      Temps:          0       1       0       0       0
  2477 ;;      Totals:         0       1      52       0       0
  2478 ;;Total ram usage:       53 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    4
  2481 ;; This function calls:
  2482 ;;		_enviaStringPelaUart
  2483 ;;		_obtemConvercaoAD
  2484 ;;		_sprintf
  2485 ;;		_strlen
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2491                           	line	596
  2492                           global __ptext1
  2493                           __ptext1:	;psect for function _obtemTesteDoGoundBolt
  2494  0DFD                     psect	text1
  2495                           	file	"src/main.c"
  2496                           	line	596
  2497                           	global	__size_of_obtemTesteDoGoundBolt
  2498                           	__size_of_obtemTesteDoGoundBolt	equ	__end_of_obtemTesteDoGoundBolt-_obtemTesteDoGoundBo
                                 lt
  2499  009B                     	
  2500                           _obtemTesteDoGoundBolt:	
  2501  0DFD                     ;incstack = 0
  2502                           	opt	stack 3
  2503                           ; Regs used in _obtemTesteDoGoundBolt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
                                 ck]
  2504                           	line	600
  2505                           	
  2506                           l4129:	
  2507  0DFD                     ;main.c: 597: unsigned int resultadoDoTesteDoGB;
  2508                           ;main.c: 598: unsigned char mensagem[50];
  2509                           ;main.c: 600: resultadoDoTesteDoGB = obtemConvercaoAD(2);
  2510                           	movlw	low(02h)
  2511  0DFD  3002               	fcall	_obtemConvercaoAD
  2512  0DFE  120A  158A  244E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2513  0E03  1283               	bcf	status, 6	;RP1=0, select bank0
  2514  0E04  1303               	movf	(1+(?_obtemConvercaoAD)),w
  2515  0E05  0825               	bsf	status, 5	;RP0=1, select bank1
  2516  0E06  1683               	bcf	status, 6	;RP1=0, select bank1
  2517  0E07  1303               	movwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB+1)^080h
  2518  0E08  00D3               	bcf	status, 5	;RP0=0, select bank0
  2519  0E09  1283               	bcf	status, 6	;RP1=0, select bank0
  2520  0E0A  1303               	movf	(0+(?_obtemConvercaoAD)),w
  2521  0E0B  0824               	bsf	status, 5	;RP0=1, select bank1
  2522  0E0C  1683               	bcf	status, 6	;RP1=0, select bank1
  2523  0E0D  1303               	movwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB)^080h
  2524  0E0E  00D2               	line	602
  2525                           	
  2526                           l4131:	
  2527  0E0F                     ;main.c: 602: sprintf(mensagem, "Teste do Ground Bolt =   %u\r\n", resultadoDoTesteDoGB)
                                 ;
  2528                           	movlw	(low(obtemTesteDoGoundBolt@mensagem|((0x0)<<8))&0ffh)
  2529  0E0F  30A0               	bcf	status, 5	;RP0=0, select bank0
  2530  0E10  1283               	bcf	status, 6	;RP1=0, select bank0
  2531  0E11  1303               	movwf	(sprintf@sp)
  2532  0E12  00AE               	movlw	(0x0)
  2533  0E13  3000               	movwf	(sprintf@sp+1)
  2534  0E14  00AF               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2535  0E15  3069               	movwf	(??_obtemTesteDoGoundBolt+0)+0
  2536  0E16  00BE               	movf	(??_obtemTesteDoGoundBolt+0)+0,w
  2537  0E17  083E               	movwf	(sprintf@f)
  2538  0E18  00B0               	bsf	status, 5	;RP0=1, select bank1
  2539  0E19  1683               	bcf	status, 6	;RP1=0, select bank1
  2540  0E1A  1303               	movf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB+1)^080h,w
  2541  0E1B  0853               	bcf	status, 5	;RP0=0, select bank0
  2542  0E1C  1283               	bcf	status, 6	;RP1=0, select bank0
  2543  0E1D  1303               	movwf	1+(?_sprintf)+03h
  2544  0E1E  00B2               	bsf	status, 5	;RP0=1, select bank1
  2545  0E1F  1683               	bcf	status, 6	;RP1=0, select bank1
  2546  0E20  1303               	movf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB)^080h,w
  2547  0E21  0852               	bcf	status, 5	;RP0=0, select bank0
  2548  0E22  1283               	bcf	status, 6	;RP1=0, select bank0
  2549  0E23  1303               	movwf	0+(?_sprintf)+03h
  2550  0E24  00B1               	fcall	_sprintf
  2551  0E25  120A  118A  2028  120A  158A  	line	603
  2552                           	
  2553                           l4133:	
  2554  0E2A                     ;main.c: 603: enviaStringPelaUart(mensagem, strlen(mensagem));
  2555                           	movlw	(low(obtemTesteDoGoundBolt@mensagem|((0x0)<<8))&0ffh)
  2556  0E2A  30A0               	bcf	status, 5	;RP0=0, select bank0
  2557  0E2B  1283               	bcf	status, 6	;RP1=0, select bank0
  2558  0E2C  1303               	movwf	(enviaStringPelaUart@str)
  2559  0E2D  00A6               	movlw	(0x0)
  2560  0E2E  3000               	movwf	(enviaStringPelaUart@str+1)
  2561  0E2F  00A7               	movlw	(low(obtemTesteDoGoundBolt@mensagem|((0x0)<<8))&0ffh)
  2562  0E30  30A0               	movwf	(strlen@s)
  2563  0E31  00A0               	movlw	(0x0)
  2564  0E32  3000               	movwf	(strlen@s+1)
  2565  0E33  00A1               	fcall	_strlen
  2566  0E34  120A  158A  233F  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2567  0E39  1283               	bcf	status, 6	;RP1=0, select bank0
  2568  0E3A  1303               	movf	(1+(?_strlen)),w
  2569  0E3B  0821               	movwf	(enviaStringPelaUart@tamanho+1)
  2570  0E3C  00A9               	movf	(0+(?_strlen)),w
  2571  0E3D  0820               	movwf	(enviaStringPelaUart@tamanho)
  2572  0E3E  00A8               	fcall	_enviaStringPelaUart
  2573  0E3F  120A  158A  23CE  120A  158A  	line	605
  2574                           	
  2575                           l4135:	
  2576  0E44                     ;main.c: 605: if((resultadoDoTesteDoGB < 327 + 20) && (resultadoDoTesteDoGB > 327 - 20))
                                 {
  2577                           	movlw	01h
  2578  0E44  3001               	bsf	status, 5	;RP0=1, select bank1
  2579  0E45  1683               	bcf	status, 6	;RP1=0, select bank1
  2580  0E46  1303               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB+1)^080h,w
  2581  0E47  0253               	movlw	05Bh
  2582  0E48  305B               	skipnz
  2583  0E49  1903               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB)^080h,w
  2584  0E4A  0252               	skipnc
  2585  0E4B  1803               	goto	u3891
  2586  0E4C  2E4E               	goto	u3890
  2587  0E4D  2E4F               u3891:
  2588  0E4E                     	goto	l4141
  2589  0E4E  2E5E               u3890:
  2590  0E4F                     	
  2591                           l4137:	
  2592  0E4F                     	movlw	01h
  2593  0E4F  3001               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB+1)^080h,w
  2594  0E50  0253               	movlw	034h
  2595  0E51  3034               	skipnz
  2596  0E52  1903               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB)^080h,w
  2597  0E53  0252               	skipc
  2598  0E54  1C03               	goto	u3901
  2599  0E55  2E57               	goto	u3900
  2600  0E56  2E58               u3901:
  2601  0E57                     	goto	l4141
  2602  0E57  2E5E               u3900:
  2603  0E58                     	line	606
  2604                           	
  2605                           l4139:	
  2606  0E58                     ;main.c: 606: RC3 = 1;
  2607                           	bcf	status, 5	;RP0=0, select bank0
  2608  0E58  1283               	bcf	status, 6	;RP1=0, select bank0
  2609  0E59  1303               	bsf	(59/8),(59)&7	;volatile
  2610  0E5A  1587               	line	607
  2611                           ;main.c: 607: RC4 = 0;
  2612                           	bcf	(60/8),(60)&7	;volatile
  2613  0E5B  1207               	line	608
  2614                           ;main.c: 608: RC5 = 0;
  2615                           	bcf	(61/8),(61)&7	;volatile
  2616  0E5C  1287               	line	609
  2617                           ;main.c: 609: return;
  2618                           	goto	l404
  2619  0E5D  2E97               	line	610
  2620                           	
  2621                           l403:	
  2622  0E5E                     	line	612
  2623                           	
  2624                           l4141:	
  2625  0E5E                     ;main.c: 610: }
  2626                           ;main.c: 612: if((resultadoDoTesteDoGB < 224 + 20) && (resultadoDoTesteDoGB > 224 - 20))
                                 {
  2627                           	movlw	0
  2628  0E5E  3000               	bsf	status, 5	;RP0=1, select bank1
  2629  0E5F  1683               	bcf	status, 6	;RP1=0, select bank1
  2630  0E60  1303               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB+1)^080h,w
  2631  0E61  0253               	movlw	0F4h
  2632  0E62  30F4               	skipnz
  2633  0E63  1903               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB)^080h,w
  2634  0E64  0252               	skipnc
  2635  0E65  1803               	goto	u3911
  2636  0E66  2E68               	goto	u3910
  2637  0E67  2E69               u3911:
  2638  0E68                     	goto	l4147
  2639  0E68  2E78               u3910:
  2640  0E69                     	
  2641                           l4143:	
  2642  0E69                     	movlw	0
  2643  0E69  3000               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB+1)^080h,w
  2644  0E6A  0253               	movlw	0CDh
  2645  0E6B  30CD               	skipnz
  2646  0E6C  1903               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB)^080h,w
  2647  0E6D  0252               	skipc
  2648  0E6E  1C03               	goto	u3921
  2649  0E6F  2E71               	goto	u3920
  2650  0E70  2E72               u3921:
  2651  0E71                     	goto	l4147
  2652  0E71  2E78               u3920:
  2653  0E72                     	line	613
  2654                           	
  2655                           l4145:	
  2656  0E72                     ;main.c: 613: RC4 = 1;
  2657                           	bcf	status, 5	;RP0=0, select bank0
  2658  0E72  1283               	bcf	status, 6	;RP1=0, select bank0
  2659  0E73  1303               	bsf	(60/8),(60)&7	;volatile
  2660  0E74  1607               	line	614
  2661                           ;main.c: 614: RC3 = 0;
  2662                           	bcf	(59/8),(59)&7	;volatile
  2663  0E75  1187               	line	615
  2664                           ;main.c: 615: RC5 = 0;
  2665                           	bcf	(61/8),(61)&7	;volatile
  2666  0E76  1287               	line	616
  2667                           ;main.c: 616: return;
  2668                           	goto	l404
  2669  0E77  2E97               	line	617
  2670                           	
  2671                           l405:	
  2672  0E78                     	line	619
  2673                           	
  2674                           l4147:	
  2675  0E78                     ;main.c: 617: }
  2676                           ;main.c: 619: if((resultadoDoTesteDoGB < 384 + 20) && (resultadoDoTesteDoGB > 384 - 20))
                                 {
  2677                           	movlw	01h
  2678  0E78  3001               	bsf	status, 5	;RP0=1, select bank1
  2679  0E79  1683               	bcf	status, 6	;RP1=0, select bank1
  2680  0E7A  1303               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB+1)^080h,w
  2681  0E7B  0253               	movlw	094h
  2682  0E7C  3094               	skipnz
  2683  0E7D  1903               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB)^080h,w
  2684  0E7E  0252               	skipnc
  2685  0E7F  1803               	goto	u3931
  2686  0E80  2E82               	goto	u3930
  2687  0E81  2E83               u3931:
  2688  0E82                     	goto	l406
  2689  0E82  2E92               u3930:
  2690  0E83                     	
  2691                           l4149:	
  2692  0E83                     	movlw	01h
  2693  0E83  3001               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB+1)^080h,w
  2694  0E84  0253               	movlw	06Dh
  2695  0E85  306D               	skipnz
  2696  0E86  1903               	subwf	(obtemTesteDoGoundBolt@resultadoDoTesteDoGB)^080h,w
  2697  0E87  0252               	skipc
  2698  0E88  1C03               	goto	u3941
  2699  0E89  2E8B               	goto	u3940
  2700  0E8A  2E8C               u3941:
  2701  0E8B                     	goto	l406
  2702  0E8B  2E92               u3940:
  2703  0E8C                     	line	620
  2704                           	
  2705                           l4151:	
  2706  0E8C                     ;main.c: 620: RC5 = 1;
  2707                           	bcf	status, 5	;RP0=0, select bank0
  2708  0E8C  1283               	bcf	status, 6	;RP1=0, select bank0
  2709  0E8D  1303               	bsf	(61/8),(61)&7	;volatile
  2710  0E8E  1687               	line	621
  2711                           ;main.c: 621: RC4 = 0;
  2712                           	bcf	(60/8),(60)&7	;volatile
  2713  0E8F  1207               	line	622
  2714                           ;main.c: 622: RC3 = 0;
  2715                           	bcf	(59/8),(59)&7	;volatile
  2716  0E90  1187               	line	623
  2717                           ;main.c: 623: return;
  2718                           	goto	l404
  2719  0E91  2E97               	line	624
  2720                           	
  2721                           l406:	
  2722  0E92                     	line	626
  2723                           ;main.c: 624: }
  2724                           ;main.c: 626: RC5 = 0;
  2725                           	bcf	status, 5	;RP0=0, select bank0
  2726  0E92  1283               	bcf	status, 6	;RP1=0, select bank0
  2727  0E93  1303               	bcf	(61/8),(61)&7	;volatile
  2728  0E94  1287               	line	627
  2729                           ;main.c: 627: RC4 = 1;
  2730                           	bsf	(60/8),(60)&7	;volatile
  2731  0E95  1607               	line	628
  2732                           ;main.c: 628: RC3 = 0;
  2733                           	bcf	(59/8),(59)&7	;volatile
  2734  0E96  1187               	line	630
  2735                           	
  2736                           l404:	
  2737  0E97                     	return
  2738  0E97  0008               	opt stack 0
  2739                           GLOBAL	__end_of_obtemTesteDoGoundBolt
  2740                           	__end_of_obtemTesteDoGoundBolt:
  2741  0E98                     	signat	_obtemTesteDoGoundBolt,89
  2742                           	global	_obtemNivelDeBateria
  2743                           
  2744 ;; *************** function _obtemNivelDeBateria *****************
  2745 ;; Defined at:
  2746 ;;		line 557 in file "src/main.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  mensagem       50    0[BANK1 ] unsigned char [50]
  2751 ;;  nivelDaBater    2   50[BANK1 ] unsigned int 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2761 ;;      Params:         0       0       0       0       0
  2762 ;;      Locals:         0       0      52       0       0
  2763 ;;      Temps:          0       1       0       0       0
  2764 ;;      Totals:         0       1      52       0       0
  2765 ;;Total ram usage:       53 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    4
  2768 ;; This function calls:
  2769 ;;		_enviaStringPelaUart
  2770 ;;		_ligaLEDVerdeBateria
  2771 ;;		_ligaLEDVermelhoBateria
  2772 ;;		_obtemConvercaoAD
  2773 ;;		_sprintf
  2774 ;;		_strlen
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2780                           	line	557
  2781                           global __ptext2
  2782                           __ptext2:	;psect for function _obtemNivelDeBateria
  2783  04BD                     psect	text2
  2784                           	file	"src/main.c"
  2785                           	line	557
  2786                           	global	__size_of_obtemNivelDeBateria
  2787                           	__size_of_obtemNivelDeBateria	equ	__end_of_obtemNivelDeBateria-_obtemNivelDeBateria
  2788  00DB                     	
  2789                           _obtemNivelDeBateria:	
  2790  04BD                     ;incstack = 0
  2791                           	opt	stack 3
  2792                           ; Regs used in _obtemNivelDeBateria: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  2793                           	line	562
  2794                           	
  2795                           l4153:	
  2796  04BD                     ;main.c: 558: static unsigned int tempoDeAmostragem = 0;
  2797                           ;main.c: 559: unsigned int nivelDaBateria;
  2798                           ;main.c: 560: unsigned char mensagem[50];
  2799                           ;main.c: 562: nivelDaBateria = obtemConvercaoAD(1);
  2800                           	movlw	low(01h)
  2801  04BD  3001               	fcall	_obtemConvercaoAD
  2802  04BE  120A  158A  244E  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2803  04C3  1283               	bcf	status, 6	;RP1=0, select bank0
  2804  04C4  1303               	movf	(1+(?_obtemConvercaoAD)),w
  2805  04C5  0825               	bsf	status, 5	;RP0=1, select bank1
  2806  04C6  1683               	bcf	status, 6	;RP1=0, select bank1
  2807  04C7  1303               	movwf	(obtemNivelDeBateria@nivelDaBateria+1)^080h
  2808  04C8  00D3               	bcf	status, 5	;RP0=0, select bank0
  2809  04C9  1283               	bcf	status, 6	;RP1=0, select bank0
  2810  04CA  1303               	movf	(0+(?_obtemConvercaoAD)),w
  2811  04CB  0824               	bsf	status, 5	;RP0=1, select bank1
  2812  04CC  1683               	bcf	status, 6	;RP1=0, select bank1
  2813  04CD  1303               	movwf	(obtemNivelDeBateria@nivelDaBateria)^080h
  2814  04CE  00D2               	line	564
  2815                           	
  2816                           l4155:	
  2817  04CF                     ;main.c: 564: sprintf(mensagem, "Nivel de Bateria =       %u\r\n", nivelDaBateria);
  2818                           	movlw	(low(obtemNivelDeBateria@mensagem|((0x0)<<8))&0ffh)
  2819  04CF  30A0               	bcf	status, 5	;RP0=0, select bank0
  2820  04D0  1283               	bcf	status, 6	;RP1=0, select bank0
  2821  04D1  1303               	movwf	(sprintf@sp)
  2822  04D2  00AE               	movlw	(0x0)
  2823  04D3  3000               	movwf	(sprintf@sp+1)
  2824  04D4  00AF               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  2825  04D5  304B               	movwf	(??_obtemNivelDeBateria+0)+0
  2826  04D6  00BE               	movf	(??_obtemNivelDeBateria+0)+0,w
  2827  04D7  083E               	movwf	(sprintf@f)
  2828  04D8  00B0               	bsf	status, 5	;RP0=1, select bank1
  2829  04D9  1683               	bcf	status, 6	;RP1=0, select bank1
  2830  04DA  1303               	movf	(obtemNivelDeBateria@nivelDaBateria+1)^080h,w
  2831  04DB  0853               	bcf	status, 5	;RP0=0, select bank0
  2832  04DC  1283               	bcf	status, 6	;RP1=0, select bank0
  2833  04DD  1303               	movwf	1+(?_sprintf)+03h
  2834  04DE  00B2               	bsf	status, 5	;RP0=1, select bank1
  2835  04DF  1683               	bcf	status, 6	;RP1=0, select bank1
  2836  04E0  1303               	movf	(obtemNivelDeBateria@nivelDaBateria)^080h,w
  2837  04E1  0852               	bcf	status, 5	;RP0=0, select bank0
  2838  04E2  1283               	bcf	status, 6	;RP1=0, select bank0
  2839  04E3  1303               	movwf	0+(?_sprintf)+03h
  2840  04E4  00B1               	fcall	_sprintf
  2841  04E5  120A  118A  2028  120A  118A  	line	565
  2842                           	
  2843                           l4157:	
  2844  04EA                     ;main.c: 565: enviaStringPelaUart(mensagem, strlen(mensagem));
  2845                           	movlw	(low(obtemNivelDeBateria@mensagem|((0x0)<<8))&0ffh)
  2846  04EA  30A0               	bcf	status, 5	;RP0=0, select bank0
  2847  04EB  1283               	bcf	status, 6	;RP1=0, select bank0
  2848  04EC  1303               	movwf	(enviaStringPelaUart@str)
  2849  04ED  00A6               	movlw	(0x0)
  2850  04EE  3000               	movwf	(enviaStringPelaUart@str+1)
  2851  04EF  00A7               	movlw	(low(obtemNivelDeBateria@mensagem|((0x0)<<8))&0ffh)
  2852  04F0  30A0               	movwf	(strlen@s)
  2853  04F1  00A0               	movlw	(0x0)
  2854  04F2  3000               	movwf	(strlen@s+1)
  2855  04F3  00A1               	fcall	_strlen
  2856  04F4  120A  158A  233F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2857  04F9  1283               	bcf	status, 6	;RP1=0, select bank0
  2858  04FA  1303               	movf	(1+(?_strlen)),w
  2859  04FB  0821               	movwf	(enviaStringPelaUart@tamanho+1)
  2860  04FC  00A9               	movf	(0+(?_strlen)),w
  2861  04FD  0820               	movwf	(enviaStringPelaUart@tamanho)
  2862  04FE  00A8               	fcall	_enviaStringPelaUart
  2863  04FF  120A  158A  23CE  120A  118A  	line	569
  2864                           	
  2865                           l4159:	
  2866  0504                     ;main.c: 569: if(flagNivelDeBateria == 0){
  2867                           	bsf	status, 5	;RP0=1, select bank1
  2868  0504  1683               	bcf	status, 6	;RP1=0, select bank1
  2869  0505  1303               	movf	((_flagNivelDeBateria)^080h),w
  2870  0506  0864               	btfss	status,2
  2871  0507  1D03               	goto	u3951
  2872  0508  2D0A               	goto	u3950
  2873  0509  2D0B               u3951:
  2874  050A                     	goto	l4187
  2875  050A  2D4F               u3950:
  2876  050B                     	line	570
  2877                           	
  2878                           l4161:	
  2879  050B                     ;main.c: 570: if(nivelDaBateria < 700){
  2880                           	movlw	02h
  2881  050B  3002               	subwf	(obtemNivelDeBateria@nivelDaBateria+1)^080h,w
  2882  050C  0253               	movlw	0BCh
  2883  050D  30BC               	skipnz
  2884  050E  1903               	subwf	(obtemNivelDeBateria@nivelDaBateria)^080h,w
  2885  050F  0252               	skipnc
  2886  0510  1803               	goto	u3961
  2887  0511  2D13               	goto	u3960
  2888  0512  2D14               u3961:
  2889  0513                     	goto	l4187
  2890  0513  2D4F               u3960:
  2891  0514                     	line	571
  2892                           	
  2893                           l4163:	
  2894  0514                     ;main.c: 571: ligaLEDVermelhoBateria();
  2895                           	fcall	_ligaLEDVermelhoBateria
  2896  0514  120A  158A  215D  120A  118A  	goto	l379
  2897  0519  2D1B               	line	572
  2898                           ;main.c: 572: do{ while (WR) { continue; } EEADR = (0); EEDATA = (1); EECON1 &= 0x3F; CA
                                 RRY = 0; if (GIE) { CARRY = 1; } GIE = 0; WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; WR = 1
                                 ; WREN = 0; if (CARRY) { GIE = 1; } } while (0);
  2899                           	
  2900                           l378:	
  2901  051A                     	goto	l379
  2902  051A  2D1B               	
  2903                           l380:	
  2904  051B                     	
  2905                           l379:	
  2906  051B                     	bsf	status, 5	;RP0=1, select bank3
  2907  051B  1683               	bsf	status, 6	;RP1=1, select bank3
  2908  051C  1703               	btfsc	(3169/8)^0180h,(3169)&7	;volsfr
  2909  051D  188C               	goto	u3971
  2910  051E  2D20               	goto	u3970
  2911  051F  2D21               u3971:
  2912  0520                     	goto	l379
  2913  0520  2D1B               u3970:
  2914  0521                     	goto	l4165
  2915  0521  2D22               	
  2916                           l381:	
  2917  0522                     	
  2918                           l4165:	
  2919  0522                     	bcf	status, 5	;RP0=0, select bank2
  2920  0522  1283               	bsf	status, 6	;RP1=1, select bank2
  2921  0523  1703               	clrf	(269)^0100h	;volatile
  2922  0524  018D               	
  2923                           l4167:	
  2924  0525                     	movlw	low(01h)
  2925  0525  3001               	movwf	(268)^0100h	;volatile
  2926  0526  008C               	
  2927                           l4169:	
  2928  0527                     	movlw	low(03Fh)
  2929  0527  303F               	bcf	status, 5	;RP0=0, select bank0
  2930  0528  1283               	bcf	status, 6	;RP1=0, select bank0
  2931  0529  1303               	movwf	(??_obtemNivelDeBateria+0)+0
  2932  052A  00BE               	movf	(??_obtemNivelDeBateria+0)+0,w
  2933  052B  083E               	bsf	status, 5	;RP0=1, select bank3
  2934  052C  1683               	bsf	status, 6	;RP1=1, select bank3
  2935  052D  1703               	andwf	(396)^0180h,f	;volsfr
  2936  052E  058C               	
  2937                           l4171:	
  2938  052F                     	bcf	status, 5	;RP0=0, select bank0
  2939  052F  1283               	bcf	status, 6	;RP1=0, select bank0
  2940  0530  1303               	bcf	(24/8),(24)&7	;volatile
  2941  0531  1003               	
  2942                           l4173:	
  2943  0532                     	btfss	(95/8),(95)&7	;volatile
  2944  0532  1F8B               	goto	u3981
  2945  0533  2D35               	goto	u3980
  2946  0534  2D36               u3981:
  2947  0535                     	goto	l382
  2948  0535  2D37               u3980:
  2949  0536                     	
  2950                           l4175:	
  2951  0536                     	bsf	(24/8),(24)&7	;volatile
  2952  0536  1403               	
  2953                           l382:	
  2954  0537                     	bcf	(95/8),(95)&7	;volatile
  2955  0537  138B               	bsf	status, 5	;RP0=1, select bank3
  2956  0538  1683               	bsf	status, 6	;RP1=1, select bank3
  2957  0539  1703               	bsf	(3170/8)^0180h,(3170)&7	;volsfr
  2958  053A  150C               	
  2959                           l4177:	
  2960  053B                     	movlw	low(055h)
  2961  053B  3055               	movwf	(397)^0180h	;volsfr
  2962  053C  008D               	movlw	low(0AAh)
  2963  053D  30AA               	movwf	(397)^0180h	;volsfr
  2964  053E  008D               	
  2965                           l4179:	
  2966  053F                     	bsf	(3169/8)^0180h,(3169)&7	;volsfr
  2967  053F  148C               	
  2968                           l4181:	
  2969  0540                     	bcf	(3170/8)^0180h,(3170)&7	;volsfr
  2970  0540  110C               	
  2971                           l4183:	
  2972  0541                     	bcf	status, 5	;RP0=0, select bank0
  2973  0541  1283               	bcf	status, 6	;RP1=0, select bank0
  2974  0542  1303               	btfss	(24/8),(24)&7	;volatile
  2975  0543  1C03               	goto	u3991
  2976  0544  2D46               	goto	u3990
  2977  0545  2D47               u3991:
  2978  0546                     	goto	l384
  2979  0546  2D49               u3990:
  2980  0547                     	
  2981                           l4185:	
  2982  0547                     	bsf	(95/8),(95)&7	;volatile
  2983  0547  178B               	goto	l384
  2984  0548  2D49               	
  2985                           l383:	
  2986  0549                     	
  2987                           l384:	
  2988  0549                     	line	573
  2989                           ;main.c: 573: flagNivelDeBateria = 1;
  2990                           	bsf	status, 5	;RP0=1, select bank1
  2991  0549  1683               	bcf	status, 6	;RP1=0, select bank1
  2992  054A  1303               	clrf	(_flagNivelDeBateria)^080h
  2993  054B  01E4               	incf	(_flagNivelDeBateria)^080h,f
  2994  054C  0AE4               	goto	l4187
  2995  054D  2D4F               	line	574
  2996                           	
  2997                           l377:	
  2998  054E                     	goto	l4187
  2999  054E  2D4F               	line	575
  3000                           	
  3001                           l376:	
  3002  054F                     	line	577
  3003                           	
  3004                           l4187:	
  3005  054F                     ;main.c: 574: }
  3006                           ;main.c: 575: }
  3007                           ;main.c: 577: if(flagNivelDeBateria == 1){
  3008                           		decf	((_flagNivelDeBateria)^080h),w
  3009  054F  0364               	btfss	status,2
  3010  0550  1D03               	goto	u4001
  3011  0551  2D53               	goto	u4000
  3012  0552  2D54               u4001:
  3013  0553                     	goto	l394
  3014  0553  2D97               u4000:
  3015  0554                     	line	578
  3016                           	
  3017                           l4189:	
  3018  0554                     ;main.c: 578: if(nivelDaBateria > 827){
  3019                           	movlw	03h
  3020  0554  3003               	subwf	(obtemNivelDeBateria@nivelDaBateria+1)^080h,w
  3021  0555  0253               	movlw	03Ch
  3022  0556  303C               	skipnz
  3023  0557  1903               	subwf	(obtemNivelDeBateria@nivelDaBateria)^080h,w
  3024  0558  0252               	skipc
  3025  0559  1C03               	goto	u4011
  3026  055A  2D5C               	goto	u4010
  3027  055B  2D5D               u4011:
  3028  055C                     	goto	l394
  3029  055C  2D97               u4010:
  3030  055D                     	line	579
  3031                           	
  3032                           l4191:	
  3033  055D                     ;main.c: 579: ligaLEDVerdeBateria();
  3034                           	fcall	_ligaLEDVerdeBateria
  3035  055D  120A  158A  2159  120A  118A  	goto	l388
  3036  0562  2D64               	line	580
  3037                           ;main.c: 580: do{ while (WR) { continue; } EEADR = (0); EEDATA = (0); EECON1 &= 0x3F; CA
                                 RRY = 0; if (GIE) { CARRY = 1; } GIE = 0; WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; WR = 1
                                 ; WREN = 0; if (CARRY) { GIE = 1; } } while (0);
  3038                           	
  3039                           l387:	
  3040  0563                     	goto	l388
  3041  0563  2D64               	
  3042                           l389:	
  3043  0564                     	
  3044                           l388:	
  3045  0564                     	bsf	status, 5	;RP0=1, select bank3
  3046  0564  1683               	bsf	status, 6	;RP1=1, select bank3
  3047  0565  1703               	btfsc	(3169/8)^0180h,(3169)&7	;volsfr
  3048  0566  188C               	goto	u4021
  3049  0567  2D69               	goto	u4020
  3050  0568  2D6A               u4021:
  3051  0569                     	goto	l388
  3052  0569  2D64               u4020:
  3053  056A                     	goto	l4193
  3054  056A  2D6B               	
  3055                           l390:	
  3056  056B                     	
  3057                           l4193:	
  3058  056B                     	bcf	status, 5	;RP0=0, select bank2
  3059  056B  1283               	bsf	status, 6	;RP1=1, select bank2
  3060  056C  1703               	clrf	(269)^0100h	;volatile
  3061  056D  018D               	clrf	(268)^0100h	;volatile
  3062  056E  018C               	
  3063                           l4195:	
  3064  056F                     	movlw	low(03Fh)
  3065  056F  303F               	bcf	status, 5	;RP0=0, select bank0
  3066  0570  1283               	bcf	status, 6	;RP1=0, select bank0
  3067  0571  1303               	movwf	(??_obtemNivelDeBateria+0)+0
  3068  0572  00BE               	movf	(??_obtemNivelDeBateria+0)+0,w
  3069  0573  083E               	bsf	status, 5	;RP0=1, select bank3
  3070  0574  1683               	bsf	status, 6	;RP1=1, select bank3
  3071  0575  1703               	andwf	(396)^0180h,f	;volsfr
  3072  0576  058C               	
  3073                           l4197:	
  3074  0577                     	bcf	status, 5	;RP0=0, select bank0
  3075  0577  1283               	bcf	status, 6	;RP1=0, select bank0
  3076  0578  1303               	bcf	(24/8),(24)&7	;volatile
  3077  0579  1003               	
  3078                           l4199:	
  3079  057A                     	btfss	(95/8),(95)&7	;volatile
  3080  057A  1F8B               	goto	u4031
  3081  057B  2D7D               	goto	u4030
  3082  057C  2D7E               u4031:
  3083  057D                     	goto	l391
  3084  057D  2D7F               u4030:
  3085  057E                     	
  3086                           l4201:	
  3087  057E                     	bsf	(24/8),(24)&7	;volatile
  3088  057E  1403               	
  3089                           l391:	
  3090  057F                     	bcf	(95/8),(95)&7	;volatile
  3091  057F  138B               	bsf	status, 5	;RP0=1, select bank3
  3092  0580  1683               	bsf	status, 6	;RP1=1, select bank3
  3093  0581  1703               	bsf	(3170/8)^0180h,(3170)&7	;volsfr
  3094  0582  150C               	
  3095                           l4203:	
  3096  0583                     	movlw	low(055h)
  3097  0583  3055               	movwf	(397)^0180h	;volsfr
  3098  0584  008D               	movlw	low(0AAh)
  3099  0585  30AA               	movwf	(397)^0180h	;volsfr
  3100  0586  008D               	
  3101                           l4205:	
  3102  0587                     	bsf	(3169/8)^0180h,(3169)&7	;volsfr
  3103  0587  148C               	
  3104                           l4207:	
  3105  0588                     	bcf	(3170/8)^0180h,(3170)&7	;volsfr
  3106  0588  110C               	
  3107                           l4209:	
  3108  0589                     	bcf	status, 5	;RP0=0, select bank0
  3109  0589  1283               	bcf	status, 6	;RP1=0, select bank0
  3110  058A  1303               	btfss	(24/8),(24)&7	;volatile
  3111  058B  1C03               	goto	u4041
  3112  058C  2D8E               	goto	u4040
  3113  058D  2D8F               u4041:
  3114  058E                     	goto	l4213
  3115  058E  2D92               u4040:
  3116  058F                     	
  3117                           l4211:	
  3118  058F                     	bsf	(95/8),(95)&7	;volatile
  3119  058F  178B               	goto	l4213
  3120  0590  2D92               	
  3121                           l392:	
  3122  0591                     	goto	l4213
  3123  0591  2D92               	
  3124                           l393:	
  3125  0592                     	line	581
  3126                           	
  3127                           l4213:	
  3128  0592                     ;main.c: 581: flagNivelDeBateria = 0;
  3129                           	bsf	status, 5	;RP0=1, select bank1
  3130  0592  1683               	bcf	status, 6	;RP1=0, select bank1
  3131  0593  1303               	clrf	(_flagNivelDeBateria)^080h
  3132  0594  01E4               	goto	l394
  3133  0595  2D97               	line	582
  3134                           	
  3135                           l386:	
  3136  0596                     	goto	l394
  3137  0596  2D97               	line	583
  3138                           	
  3139                           l385:	
  3140  0597                     	line	585
  3141                           	
  3142                           l394:	
  3143  0597                     	return
  3144  0597  0008               	opt stack 0
  3145                           GLOBAL	__end_of_obtemNivelDeBateria
  3146                           	__end_of_obtemNivelDeBateria:
  3147  0598                     	signat	_obtemNivelDeBateria,89
  3148                           	global	_ligaLEDVermelhoBateria
  3149                           
  3150 ;; *************** function _ligaLEDVermelhoBateria *****************
  3151 ;; Defined at:
  3152 ;;		line 587 in file "src/main.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		None
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3166 ;;      Params:         0       0       0       0       0
  3167 ;;      Locals:         0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0
  3169 ;;      Totals:         0       0       0       0       0
  3170 ;;Total ram usage:        0 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    2
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;;		_obtemNivelDeBateria
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3181                           	line	587
  3182                           global __ptext3
  3183                           __ptext3:	;psect for function _ligaLEDVermelhoBateria
  3184  095D                     psect	text3
  3185                           	file	"src/main.c"
  3186                           	line	587
  3187                           	global	__size_of_ligaLEDVermelhoBateria
  3188                           	__size_of_ligaLEDVermelhoBateria	equ	__end_of_ligaLEDVermelhoBateria-_ligaLEDVermelhoBa
                                 teria
  3189  0004                     	
  3190                           _ligaLEDVermelhoBateria:	
  3191  095D                     ;incstack = 0
  3192                           	opt	stack 4
  3193                           ; Regs used in _ligaLEDVermelhoBateria: []
  3194                           	line	588
  3195                           	
  3196                           l3719:	
  3197  095D                     ;main.c: 588: RD3 = 0;
  3198                           	bcf	status, 5	;RP0=0, select bank0
  3199  095D  1283               	bcf	status, 6	;RP1=0, select bank0
  3200  095E  1303               	bcf	(67/8),(67)&7	;volatile
  3201  095F  1188               	line	589
  3202                           	
  3203                           l397:	
  3204  0960                     	return
  3205  0960  0008               	opt stack 0
  3206                           GLOBAL	__end_of_ligaLEDVermelhoBateria
  3207                           	__end_of_ligaLEDVermelhoBateria:
  3208  0961                     	signat	_ligaLEDVermelhoBateria,89
  3209                           	global	_ligaLEDVerdeBateria
  3210                           
  3211 ;; *************** function _ligaLEDVerdeBateria *****************
  3212 ;; Defined at:
  3213 ;;		line 591 in file "src/main.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      void 
  3220 ;; Registers used:
  3221 ;;		None
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3227 ;;      Params:         0       0       0       0       0
  3228 ;;      Locals:         0       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0
  3230 ;;      Totals:         0       0       0       0       0
  3231 ;;Total ram usage:        0 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    2
  3234 ;; This function calls:
  3235 ;;		Nothing
  3236 ;; This function is called by:
  3237 ;;		_main
  3238 ;;		_obtemNivelDeBateria
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3242                           	line	591
  3243                           global __ptext4
  3244                           __ptext4:	;psect for function _ligaLEDVerdeBateria
  3245  0959                     psect	text4
  3246                           	file	"src/main.c"
  3247                           	line	591
  3248                           	global	__size_of_ligaLEDVerdeBateria
  3249                           	__size_of_ligaLEDVerdeBateria	equ	__end_of_ligaLEDVerdeBateria-_ligaLEDVerdeBateria
  3250  0004                     	
  3251                           _ligaLEDVerdeBateria:	
  3252  0959                     ;incstack = 0
  3253                           	opt	stack 4
  3254                           ; Regs used in _ligaLEDVerdeBateria: []
  3255                           	line	592
  3256                           	
  3257                           l3717:	
  3258  0959                     ;main.c: 592: RD3 = 1;
  3259                           	bcf	status, 5	;RP0=0, select bank0
  3260  0959  1283               	bcf	status, 6	;RP1=0, select bank0
  3261  095A  1303               	bsf	(67/8),(67)&7	;volatile
  3262  095B  1588               	line	593
  3263                           	
  3264                           l400:	
  3265  095C                     	return
  3266  095C  0008               	opt stack 0
  3267                           GLOBAL	__end_of_ligaLEDVerdeBateria
  3268                           	__end_of_ligaLEDVerdeBateria:
  3269  095D                     	signat	_ligaLEDVerdeBateria,89
  3270                           	global	_liga_PWM2
  3271                           
  3272 ;; *************** function _liga_PWM2 *****************
  3273 ;; Defined at:
  3274 ;;		line 139 in file "src/hardware.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  freq_pwm        1    wreg     unsigned char 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  freq_pwm        1    2[BANK0 ] unsigned char 
  3279 ;;  dutyCycle       1    3[BANK0 ] unsigned char 
  3280 ;;  freqPWM         1    1[BANK0 ] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       0       0       0       0
  3291 ;;      Locals:         0       3       0       0       0
  3292 ;;      Temps:          0       1       0       0       0
  3293 ;;      Totals:         0       4       0       0       0
  3294 ;;Total ram usage:        4 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    2
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3304                           	file	"src/hardware.c"
  3305                           	line	139
  3306                           global __ptext5
  3307                           __ptext5:	;psect for function _liga_PWM2
  3308  0A5D                     psect	text5
  3309                           	file	"src/hardware.c"
  3310                           	line	139
  3311                           	global	__size_of_liga_PWM2
  3312                           	__size_of_liga_PWM2	equ	__end_of_liga_PWM2-_liga_PWM2
  3313  001B                     	
  3314                           _liga_PWM2:	
  3315  0A5D                     ;incstack = 0
  3316                           	opt	stack 5
  3317                           ; Regs used in _liga_PWM2: [wreg+status,2+status,0]
  3318                           ;liga_PWM2@freq_pwm stored from wreg
  3319                           	bcf	status, 5	;RP0=0, select bank0
  3320  0A5D  1283               	bcf	status, 6	;RP1=0, select bank0
  3321  0A5E  1303               	movwf	(liga_PWM2@freq_pwm)
  3322  0A5F  00A2               	line	140
  3323                           	
  3324                           l4047:	
  3325  0A60                     ;hardware.c: 140: unsigned char dutyCycle = 90;
  3326                           	movlw	low(05Ah)
  3327  0A60  305A               	movwf	(??_liga_PWM2+0)+0
  3328  0A61  00A0               	movf	(??_liga_PWM2+0)+0,w
  3329  0A62  0820               	movwf	(liga_PWM2@dutyCycle)
  3330  0A63  00A3               	line	143
  3331                           ;hardware.c: 141: unsigned char freqPWM;
  3332                           ;hardware.c: 143: freqPWM = freq_pwm;
  3333                           	movf	(liga_PWM2@freq_pwm),w
  3334  0A64  0822               	movwf	(??_liga_PWM2+0)+0
  3335  0A65  00A0               	movf	(??_liga_PWM2+0)+0,w
  3336  0A66  0820               	movwf	(liga_PWM2@freqPWM)
  3337  0A67  00A1               	line	145
  3338                           ;hardware.c: 145: CCP2CON = 0x0F;
  3339                           	movlw	low(0Fh)
  3340  0A68  300F               	movwf	(29)	;volatile
  3341  0A69  009D               	line	146
  3342                           ;hardware.c: 146: PR2 = 180;
  3343                           	movlw	low(0B4h)
  3344  0A6A  30B4               	bsf	status, 5	;RP0=1, select bank1
  3345  0A6B  1683               	bcf	status, 6	;RP1=0, select bank1
  3346  0A6C  1303               	movwf	(146)^080h	;volatile
  3347  0A6D  0092               	line	147
  3348                           ;hardware.c: 147: CCPR2L = dutyCycle;
  3349                           	bcf	status, 5	;RP0=0, select bank0
  3350  0A6E  1283               	bcf	status, 6	;RP1=0, select bank0
  3351  0A6F  1303               	movf	(liga_PWM2@dutyCycle),w
  3352  0A70  0823               	movwf	(27)	;volatile
  3353  0A71  009B               	line	148
  3354                           	
  3355                           l4049:	
  3356  0A72                     ;hardware.c: 148: T2CONbits.T2CKPS = 0;
  3357                           	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  3358  0A72  30FC               	andwf	(18),f	;volatile
  3359  0A73  0592               	line	149
  3360                           	
  3361                           l4051:	
  3362  0A74                     ;hardware.c: 149: T2CONbits.TOUTPS = 0;
  3363                           	movlw	((0 & ((1<<4)-1))<<3)|not (((1<<4)-1)<<3)
  3364  0A74  3087               	andwf	(18),f	;volatile
  3365  0A75  0592               	line	150
  3366                           	
  3367                           l4053:	
  3368  0A76                     ;hardware.c: 150: TMR2ON = 1;
  3369                           	bsf	(146/8),(146)&7	;volatile
  3370  0A76  1512               	line	151
  3371                           	
  3372                           l66:	
  3373  0A77                     	return
  3374  0A77  0008               	opt stack 0
  3375                           GLOBAL	__end_of_liga_PWM2
  3376                           	__end_of_liga_PWM2:
  3377  0A78                     	signat	_liga_PWM2,4217
  3378                           	global	_inicializaDisplay
  3379                           
  3380 ;; *************** function _inicializaDisplay *****************
  3381 ;; Defined at:
  3382 ;;		line 908 in file "src/main.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0, pclath, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3396 ;;      Params:         0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0
  3399 ;;      Totals:         0       0       0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    3
  3403 ;; This function calls:
  3404 ;;		_delay_ms
  3405 ;;		_desligaPainelLed
  3406 ;;		_exibeNumero8
  3407 ;;		_exibeNumeroNenhum
  3408 ;;		_ligaPainelLed
  3409 ;; This function is called by:
  3410 ;;		_main
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3414                           	file	"src/main.c"
  3415                           	line	908
  3416                           global __ptext6
  3417                           __ptext6:	;psect for function _inicializaDisplay
  3418  0AB6                     psect	text6
  3419                           	file	"src/main.c"
  3420                           	line	908
  3421                           	global	__size_of_inicializaDisplay
  3422                           	__size_of_inicializaDisplay	equ	__end_of_inicializaDisplay-_inicializaDisplay
  3423  0020                     	
  3424                           _inicializaDisplay:	
  3425  0AB6                     ;incstack = 0
  3426                           	opt	stack 4
  3427                           ; Regs used in _inicializaDisplay: [wreg+status,2+status,0+pclath+cstack]
  3428                           	line	910
  3429                           	
  3430                           l4055:	
  3431  0AB6                     ;main.c: 910: exibeNumero8();
  3432                           	fcall	_exibeNumero8
  3433  0AB6  120A  158A  21CA  120A  158A  	line	911
  3434                           ;main.c: 911: ligaPainelLed();
  3435                           	fcall	_ligaPainelLed
  3436  0ABB  120A  158A  21F2  120A  158A  	line	912
  3437                           	
  3438                           l4057:	
  3439  0AC0                     ;main.c: 912: delay_ms(1000);
  3440                           	movlw	0E8h
  3441  0AC0  30E8               	bcf	status, 5	;RP0=0, select bank0
  3442  0AC1  1283               	bcf	status, 6	;RP1=0, select bank0
  3443  0AC2  1303               	movwf	(delay_ms@valor)
  3444  0AC3  00A0               	movlw	03h
  3445  0AC4  3003               	movwf	((delay_ms@valor))+1
  3446  0AC5  00A1               	fcall	_delay_ms
  3447  0AC6  120A  118A  27D9  120A  158A  	line	913
  3448                           	
  3449                           l4059:	
  3450  0ACB                     ;main.c: 913: exibeNumeroNenhum();
  3451                           	fcall	_exibeNumeroNenhum
  3452  0ACB  120A  158A  2207  120A  158A  	line	914
  3453                           	
  3454                           l4061:	
  3455  0AD0                     ;main.c: 914: desligaPainelLed();
  3456                           	fcall	_desligaPainelLed
  3457  0AD0  120A  158A  21E8  120A  158A  	line	916
  3458                           	
  3459                           l486:	
  3460  0AD5                     	return
  3461  0AD5  0008               	opt stack 0
  3462                           GLOBAL	__end_of_inicializaDisplay
  3463                           	__end_of_inicializaDisplay:
  3464  0AD6                     	signat	_inicializaDisplay,89
  3465                           	global	_ligaPainelLed
  3466                           
  3467 ;; *************** function _ligaPainelLed *****************
  3468 ;; Defined at:
  3469 ;;		line 918 in file "src/main.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		None
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    2
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_inicializaDisplay
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3497                           	line	918
  3498                           global __ptext7
  3499                           __ptext7:	;psect for function _ligaPainelLed
  3500  09F2                     psect	text7
  3501                           	file	"src/main.c"
  3502                           	line	918
  3503                           	global	__size_of_ligaPainelLed
  3504                           	__size_of_ligaPainelLed	equ	__end_of_ligaPainelLed-_ligaPainelLed
  3505  000A                     	
  3506                           _ligaPainelLed:	
  3507  09F2                     ;incstack = 0
  3508                           	opt	stack 4
  3509                           ; Regs used in _ligaPainelLed: []
  3510                           	line	919
  3511                           	
  3512                           l3871:	
  3513  09F2                     ;main.c: 919: RD4 = 1;
  3514                           	bcf	status, 5	;RP0=0, select bank0
  3515  09F2  1283               	bcf	status, 6	;RP1=0, select bank0
  3516  09F3  1303               	bsf	(68/8),(68)&7	;volatile
  3517  09F4  1608               	line	920
  3518                           ;main.c: 920: RD5 = 1;
  3519                           	bsf	(69/8),(69)&7	;volatile
  3520  09F5  1688               	line	921
  3521                           ;main.c: 921: RD6 = 1;
  3522                           	bsf	(70/8),(70)&7	;volatile
  3523  09F6  1708               	line	922
  3524                           ;main.c: 922: RD7 = 1;
  3525                           	bsf	(71/8),(71)&7	;volatile
  3526  09F7  1788               	line	923
  3527                           ;main.c: 923: RC3 = 1;
  3528                           	bsf	(59/8),(59)&7	;volatile
  3529  09F8  1587               	line	924
  3530                           ;main.c: 924: RC4 = 1;
  3531                           	bsf	(60/8),(60)&7	;volatile
  3532  09F9  1607               	line	925
  3533                           ;main.c: 925: RC5 = 1;
  3534                           	bsf	(61/8),(61)&7	;volatile
  3535  09FA  1687               	line	926
  3536                           	
  3537                           l489:	
  3538  09FB                     	return
  3539  09FB  0008               	opt stack 0
  3540                           GLOBAL	__end_of_ligaPainelLed
  3541                           	__end_of_ligaPainelLed:
  3542  09FC                     	signat	_ligaPainelLed,89
  3543                           	global	_exibeNumeroNenhum
  3544                           
  3545 ;; *************** function _exibeNumeroNenhum *****************
  3546 ;; Defined at:
  3547 ;;		line 854 in file "src/main.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		None
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0
  3564 ;;      Totals:         0       0       0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;;		_inicializaDisplay
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3576                           	line	854
  3577                           global __ptext8
  3578                           __ptext8:	;psect for function _exibeNumeroNenhum
  3579  0A07                     psect	text8
  3580                           	file	"src/main.c"
  3581                           	line	854
  3582                           	global	__size_of_exibeNumeroNenhum
  3583                           	__size_of_exibeNumeroNenhum	equ	__end_of_exibeNumeroNenhum-_exibeNumeroNenhum
  3584  000B                     	
  3585                           _exibeNumeroNenhum:	
  3586  0A07                     ;incstack = 0
  3587                           	opt	stack 4
  3588                           ; Regs used in _exibeNumeroNenhum: []
  3589                           	line	855
  3590                           	
  3591                           l3715:	
  3592  0A07                     ;main.c: 855: RB1 = 1;
  3593                           	bcf	status, 5	;RP0=0, select bank0
  3594  0A07  1283               	bcf	status, 6	;RP1=0, select bank0
  3595  0A08  1303               	bsf	(49/8),(49)&7	;volatile
  3596  0A09  1486               	line	856
  3597                           ;main.c: 856: RB2 = 1;
  3598                           	bsf	(50/8),(50)&7	;volatile
  3599  0A0A  1506               	line	857
  3600                           ;main.c: 857: RB3 = 1;
  3601                           	bsf	(51/8),(51)&7	;volatile
  3602  0A0B  1586               	line	858
  3603                           ;main.c: 858: RB4 = 1;
  3604                           	bsf	(52/8),(52)&7	;volatile
  3605  0A0C  1606               	line	859
  3606                           ;main.c: 859: RB5 = 1;
  3607                           	bsf	(53/8),(53)&7	;volatile
  3608  0A0D  1686               	line	860
  3609                           ;main.c: 860: RB6 = 1;
  3610                           	bsf	(54/8),(54)&7	;volatile
  3611  0A0E  1706               	line	861
  3612                           ;main.c: 861: RB7 = 1;
  3613                           	bsf	(55/8),(55)&7	;volatile
  3614  0A0F  1786               	line	862
  3615                           ;main.c: 862: RC2 = 1;
  3616                           	bsf	(58/8),(58)&7	;volatile
  3617  0A10  1507               	line	863
  3618                           	
  3619                           l477:	
  3620  0A11                     	return
  3621  0A11  0008               	opt stack 0
  3622                           GLOBAL	__end_of_exibeNumeroNenhum
  3623                           	__end_of_exibeNumeroNenhum:
  3624  0A12                     	signat	_exibeNumeroNenhum,89
  3625                           	global	_desligaPainelLed
  3626                           
  3627 ;; *************** function _desligaPainelLed *****************
  3628 ;; Defined at:
  3629 ;;		line 928 in file "src/main.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		None
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3643 ;;      Params:         0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0
  3646 ;;      Totals:         0       0       0       0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    2
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_inicializaDisplay
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3657                           	line	928
  3658                           global __ptext9
  3659                           __ptext9:	;psect for function _desligaPainelLed
  3660  09E8                     psect	text9
  3661                           	file	"src/main.c"
  3662                           	line	928
  3663                           	global	__size_of_desligaPainelLed
  3664                           	__size_of_desligaPainelLed	equ	__end_of_desligaPainelLed-_desligaPainelLed
  3665  000A                     	
  3666                           _desligaPainelLed:	
  3667  09E8                     ;incstack = 0
  3668                           	opt	stack 4
  3669                           ; Regs used in _desligaPainelLed: []
  3670                           	line	929
  3671                           	
  3672                           l3873:	
  3673  09E8                     ;main.c: 929: RD4 = 0;
  3674                           	bcf	status, 5	;RP0=0, select bank0
  3675  09E8  1283               	bcf	status, 6	;RP1=0, select bank0
  3676  09E9  1303               	bcf	(68/8),(68)&7	;volatile
  3677  09EA  1208               	line	930
  3678                           ;main.c: 930: RD5 = 0;
  3679                           	bcf	(69/8),(69)&7	;volatile
  3680  09EB  1288               	line	931
  3681                           ;main.c: 931: RD6 = 0;
  3682                           	bcf	(70/8),(70)&7	;volatile
  3683  09EC  1308               	line	932
  3684                           ;main.c: 932: RD7 = 0;
  3685                           	bcf	(71/8),(71)&7	;volatile
  3686  09ED  1388               	line	933
  3687                           ;main.c: 933: RC3 = 0;
  3688                           	bcf	(59/8),(59)&7	;volatile
  3689  09EE  1187               	line	934
  3690                           ;main.c: 934: RC4 = 0;
  3691                           	bcf	(60/8),(60)&7	;volatile
  3692  09EF  1207               	line	935
  3693                           ;main.c: 935: RC5 = 0;
  3694                           	bcf	(61/8),(61)&7	;volatile
  3695  09F0  1287               	line	936
  3696                           	
  3697                           l492:	
  3698  09F1                     	return
  3699  09F1  0008               	opt stack 0
  3700                           GLOBAL	__end_of_desligaPainelLed
  3701                           	__end_of_desligaPainelLed:
  3702  09F2                     	signat	_desligaPainelLed,89
  3703                           	global	_iniUart
  3704                           
  3705 ;; *************** function _iniUart *****************
  3706 ;; Defined at:
  3707 ;;		line 114 in file "src/hardware.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3721 ;;      Params:         0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0
  3724 ;;      Totals:         0       0       0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    2
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_main
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3735                           	file	"src/hardware.c"
  3736                           	line	114
  3737                           global __ptext10
  3738                           __ptext10:	;psect for function _iniUart
  3739  0A46                     psect	text10
  3740                           	file	"src/hardware.c"
  3741                           	line	114
  3742                           	global	__size_of_iniUart
  3743                           	__size_of_iniUart	equ	__end_of_iniUart-_iniUart
  3744  0017                     	
  3745                           _iniUart:	
  3746  0A46                     ;incstack = 0
  3747                           	opt	stack 5
  3748                           ; Regs used in _iniUart: [wreg]
  3749                           	line	115
  3750                           	
  3751                           l4025:	
  3752  0A46                     ;hardware.c: 115: TXSTAbits.BRGH = 1;
  3753                           	bsf	status, 5	;RP0=1, select bank1
  3754  0A46  1683               	bcf	status, 6	;RP1=0, select bank1
  3755  0A47  1303               	bsf	(152)^080h,2	;volatile
  3756  0A48  1518               	line	116
  3757                           ;hardware.c: 116: TXSTAbits.SYNC = 0;
  3758                           	bcf	(152)^080h,4	;volatile
  3759  0A49  1218               	line	119
  3760                           	
  3761                           l4027:	
  3762  0A4A                     ;hardware.c: 119: SPBRG = 129;
  3763                           	movlw	low(081h)
  3764  0A4A  3081               	movwf	(153)^080h	;volatile
  3765  0A4B  0099               	line	121
  3766                           	
  3767                           l4029:	
  3768  0A4C                     ;hardware.c: 121: RCSTAbits.SPEN = 1;
  3769                           	bcf	status, 5	;RP0=0, select bank0
  3770  0A4C  1283               	bcf	status, 6	;RP1=0, select bank0
  3771  0A4D  1303               	bsf	(24),7	;volatile
  3772  0A4E  1798               	line	122
  3773                           	
  3774                           l4031:	
  3775  0A4F                     ;hardware.c: 122: TXSTAbits.TXEN = 1;
  3776                           	bsf	status, 5	;RP0=1, select bank1
  3777  0A4F  1683               	bcf	status, 6	;RP1=0, select bank1
  3778  0A50  1303               	bsf	(152)^080h,5	;volatile
  3779  0A51  1698               	line	123
  3780                           	
  3781                           l4033:	
  3782  0A52                     ;hardware.c: 123: TXSTAbits.TX9 = 0;
  3783                           	bcf	(152)^080h,6	;volatile
  3784  0A52  1318               	line	124
  3785                           	
  3786                           l4035:	
  3787  0A53                     ;hardware.c: 124: RCSTAbits.RX9 = 0;
  3788                           	bcf	status, 5	;RP0=0, select bank0
  3789  0A53  1283               	bcf	status, 6	;RP1=0, select bank0
  3790  0A54  1303               	bcf	(24),6	;volatile
  3791  0A55  1318               	line	125
  3792                           	
  3793                           l4037:	
  3794  0A56                     ;hardware.c: 125: RCSTAbits.ADDEN = 0;
  3795                           	bcf	(24),3	;volatile
  3796  0A56  1198               	line	126
  3797                           	
  3798                           l4039:	
  3799  0A57                     ;hardware.c: 126: PIE1bits.RCIE = 1;
  3800                           	bsf	status, 5	;RP0=1, select bank1
  3801  0A57  1683               	bcf	status, 6	;RP1=0, select bank1
  3802  0A58  1303               	bsf	(140)^080h,5	;volatile
  3803  0A59  168C               	line	127
  3804                           	
  3805                           l4041:	
  3806  0A5A                     ;hardware.c: 127: INTCONbits.GIE = 1;
  3807                           	bsf	(11),7	;volatile
  3808  0A5A  178B               	line	128
  3809                           	
  3810                           l4043:	
  3811  0A5B                     ;hardware.c: 128: INTCONbits.PEIE = 1;
  3812                           	bsf	(11),6	;volatile
  3813  0A5B  170B               	line	129
  3814                           	
  3815                           l60:	
  3816  0A5C                     	return
  3817  0A5C  0008               	opt stack 0
  3818                           GLOBAL	__end_of_iniUart
  3819                           	__end_of_iniUart:
  3820  0A5D                     	signat	_iniUart,89
  3821                           	global	_iniTimer1
  3822                           
  3823 ;; *************** function _iniTimer1 *****************
  3824 ;; Defined at:
  3825 ;;		line 103 in file "src/hardware.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3839 ;;      Params:         0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0
  3842 ;;      Totals:         0       0       0       0       0
  3843 ;;Total ram usage:        0 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    2
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_main
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3853                           	line	103
  3854                           global __ptext11
  3855                           __ptext11:	;psect for function _iniTimer1
  3856  0A12                     psect	text11
  3857                           	file	"src/hardware.c"
  3858                           	line	103
  3859                           	global	__size_of_iniTimer1
  3860                           	__size_of_iniTimer1	equ	__end_of_iniTimer1-_iniTimer1
  3861  000C                     	
  3862                           _iniTimer1:	
  3863  0A12                     ;incstack = 0
  3864                           	opt	stack 5
  3865                           ; Regs used in _iniTimer1: [wreg+status,2+status,0]
  3866                           	line	104
  3867                           	
  3868                           l4013:	
  3869  0A12                     ;hardware.c: 104: T1CONbits.TMR1CS = 0;
  3870                           	bcf	status, 5	;RP0=0, select bank0
  3871  0A12  1283               	bcf	status, 6	;RP1=0, select bank0
  3872  0A13  1303               	bcf	(16),1	;volatile
  3873  0A14  1090               	line	105
  3874                           	
  3875                           l4015:	
  3876  0A15                     ;hardware.c: 105: T1CONbits.T1CKPS = 0;
  3877                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
  3878  0A15  30CF               	andwf	(16),f	;volatile
  3879  0A16  0590               	line	108
  3880                           	
  3881                           l4017:	
  3882  0A17                     ;hardware.c: 108: T1CONbits.TMR1ON = 1;
  3883                           	bsf	(16),0	;volatile
  3884  0A17  1410               	line	109
  3885                           	
  3886                           l4019:	
  3887  0A18                     ;hardware.c: 109: PIE1bits.TMR1IE = 1;
  3888                           	bsf	status, 5	;RP0=1, select bank1
  3889  0A18  1683               	bcf	status, 6	;RP1=0, select bank1
  3890  0A19  1303               	bsf	(140)^080h,0	;volatile
  3891  0A1A  140C               	line	110
  3892                           	
  3893                           l4021:	
  3894  0A1B                     ;hardware.c: 110: INTCONbits.PEIE = 1;
  3895                           	bsf	(11),6	;volatile
  3896  0A1B  170B               	line	111
  3897                           	
  3898                           l4023:	
  3899  0A1C                     ;hardware.c: 111: INTCONbits.GIE = 1;
  3900                           	bsf	(11),7	;volatile
  3901  0A1C  178B               	line	112
  3902                           	
  3903                           l57:	
  3904  0A1D                     	return
  3905  0A1D  0008               	opt stack 0
  3906                           GLOBAL	__end_of_iniTimer1
  3907                           	__end_of_iniTimer1:
  3908  0A1E                     	signat	_iniTimer1,89
  3909                           	global	_iniHardware
  3910                           
  3911 ;; *************** function _iniHardware *****************
  3912 ;; Defined at:
  3913 ;;		line 11 in file "src/hardware.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		None
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3927 ;;      Params:         0       0       0       0       0
  3928 ;;      Locals:         0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0
  3930 ;;      Totals:         0       0       0       0       0
  3931 ;;Total ram usage:        0 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    2
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_main
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3941                           	line	11
  3942                           global __ptext12
  3943                           __ptext12:	;psect for function _iniHardware
  3944  0AF7                     psect	text12
  3945                           	file	"src/hardware.c"
  3946                           	line	11
  3947                           	global	__size_of_iniHardware
  3948                           	__size_of_iniHardware	equ	__end_of_iniHardware-_iniHardware
  3949  0023                     	
  3950                           _iniHardware:	
  3951  0AF7                     ;incstack = 0
  3952                           	opt	stack 5
  3953                           ; Regs used in _iniHardware: []
  3954                           	line	13
  3955                           	
  3956                           l4011:	
  3957  0AF7                     ;hardware.c: 13: TRISAbits.TRISA0 = 1;
  3958                           	bsf	status, 5	;RP0=1, select bank1
  3959  0AF7  1683               	bcf	status, 6	;RP1=0, select bank1
  3960  0AF8  1303               	bsf	(133)^080h,0	;volatile
  3961  0AF9  1405               	line	14
  3962                           ;hardware.c: 14: TRISAbits.TRISA1 = 1;
  3963                           	bsf	(133)^080h,1	;volatile
  3964  0AFA  1485               	line	15
  3965                           ;hardware.c: 15: TRISAbits.TRISA2 = 1;
  3966                           	bsf	(133)^080h,2	;volatile
  3967  0AFB  1505               	line	16
  3968                           ;hardware.c: 16: TRISAbits.TRISA3 = 1;
  3969                           	bsf	(133)^080h,3	;volatile
  3970  0AFC  1585               	line	17
  3971                           ;hardware.c: 17: TRISAbits.TRISA5 = 1;
  3972                           	bsf	(133)^080h,5	;volatile
  3973  0AFD  1685               	line	21
  3974                           ;hardware.c: 21: TRISBbits.TRISB0 = 1;
  3975                           	bsf	(134)^080h,0	;volatile
  3976  0AFE  1406               	line	22
  3977                           ;hardware.c: 22: TRISBbits.TRISB1 = 0;
  3978                           	bcf	(134)^080h,1	;volatile
  3979  0AFF  1086               	line	23
  3980                           ;hardware.c: 23: TRISBbits.TRISB2 = 0;
  3981                           	bcf	(134)^080h,2	;volatile
  3982  0B00  1106               	line	24
  3983                           ;hardware.c: 24: TRISBbits.TRISB3 = 0;
  3984                           	bcf	(134)^080h,3	;volatile
  3985  0B01  1186               	line	25
  3986                           ;hardware.c: 25: TRISBbits.TRISB4 = 0;
  3987                           	bcf	(134)^080h,4	;volatile
  3988  0B02  1206               	line	26
  3989                           ;hardware.c: 26: TRISBbits.TRISB5 = 0;
  3990                           	bcf	(134)^080h,5	;volatile
  3991  0B03  1286               	line	27
  3992                           ;hardware.c: 27: TRISBbits.TRISB6 = 0;
  3993                           	bcf	(134)^080h,6	;volatile
  3994  0B04  1306               	line	28
  3995                           ;hardware.c: 28: TRISBbits.TRISB7 = 0;
  3996                           	bcf	(134)^080h,7	;volatile
  3997  0B05  1386               	line	30
  3998                           ;hardware.c: 30: TRISCbits.TRISC0 = 1;
  3999                           	bsf	(135)^080h,0	;volatile
  4000  0B06  1407               	line	31
  4001                           ;hardware.c: 31: TRISCbits.TRISC1 = 0;
  4002                           	bcf	(135)^080h,1	;volatile
  4003  0B07  1087               	line	32
  4004                           ;hardware.c: 32: TRISCbits.TRISC2 = 0;
  4005                           	bcf	(135)^080h,2	;volatile
  4006  0B08  1107               	line	33
  4007                           ;hardware.c: 33: TRISCbits.TRISC3 = 0;
  4008                           	bcf	(135)^080h,3	;volatile
  4009  0B09  1187               	line	34
  4010                           ;hardware.c: 34: TRISCbits.TRISC4 = 0;
  4011                           	bcf	(135)^080h,4	;volatile
  4012  0B0A  1207               	line	35
  4013                           ;hardware.c: 35: TRISCbits.TRISC5 = 0;
  4014                           	bcf	(135)^080h,5	;volatile
  4015  0B0B  1287               	line	36
  4016                           ;hardware.c: 36: TRISCbits.TRISC6 = 0;
  4017                           	bcf	(135)^080h,6	;volatile
  4018  0B0C  1307               	line	37
  4019                           ;hardware.c: 37: TRISCbits.TRISC7 = 1;
  4020                           	bsf	(135)^080h,7	;volatile
  4021  0B0D  1787               	line	39
  4022                           ;hardware.c: 39: TRISDbits.TRISD0 = 0;
  4023                           	bcf	(136)^080h,0	;volatile
  4024  0B0E  1008               	line	40
  4025                           ;hardware.c: 40: TRISDbits.TRISD1 = 0;
  4026                           	bcf	(136)^080h,1	;volatile
  4027  0B0F  1088               	line	41
  4028                           ;hardware.c: 41: TRISDbits.TRISD2 = 0;
  4029                           	bcf	(136)^080h,2	;volatile
  4030  0B10  1108               	line	42
  4031                           ;hardware.c: 42: TRISDbits.TRISD3 = 0;
  4032                           	bcf	(136)^080h,3	;volatile
  4033  0B11  1188               	line	43
  4034                           ;hardware.c: 43: TRISDbits.TRISD4 = 0;
  4035                           	bcf	(136)^080h,4	;volatile
  4036  0B12  1208               	line	44
  4037                           ;hardware.c: 44: TRISDbits.TRISD5 = 0;
  4038                           	bcf	(136)^080h,5	;volatile
  4039  0B13  1288               	line	45
  4040                           ;hardware.c: 45: TRISDbits.TRISD6 = 0;
  4041                           	bcf	(136)^080h,6	;volatile
  4042  0B14  1308               	line	46
  4043                           ;hardware.c: 46: TRISDbits.TRISD7 = 0;
  4044                           	bcf	(136)^080h,7	;volatile
  4045  0B15  1388               	line	49
  4046                           ;hardware.c: 49: TRISEbits.TRISE0 = 1;
  4047                           	bsf	(137)^080h,0	;volatile
  4048  0B16  1409               	line	50
  4049                           ;hardware.c: 50: TRISEbits.TRISE1 = 1;
  4050                           	bsf	(137)^080h,1	;volatile
  4051  0B17  1489               	line	51
  4052                           ;hardware.c: 51: TRISEbits.TRISE2 = 1;
  4053                           	bsf	(137)^080h,2	;volatile
  4054  0B18  1509               	line	92
  4055                           	
  4056                           l51:	
  4057  0B19                     	return
  4058  0B19  0008               	opt stack 0
  4059                           GLOBAL	__end_of_iniHardware
  4060                           	__end_of_iniHardware:
  4061  0B1A                     	signat	_iniHardware,89
  4062                           	global	_giraDisplay
  4063                           
  4064 ;; *************** function _giraDisplay *****************
  4065 ;; Defined at:
  4066 ;;		line 876 in file "src/main.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, pclath, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4080 ;;      Params:         0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0
  4083 ;;      Totals:         0       0       0       0       0
  4084 ;;Total ram usage:        0 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    3
  4087 ;; This function calls:
  4088 ;;		_delay_ms
  4089 ;; This function is called by:
  4090 ;;		_main
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4094                           	file	"src/main.c"
  4095                           	line	876
  4096                           global __ptext13
  4097                           __ptext13:	;psect for function _giraDisplay
  4098  0E98                     psect	text13
  4099                           	file	"src/main.c"
  4100                           	line	876
  4101                           	global	__size_of_giraDisplay
  4102                           	__size_of_giraDisplay	equ	__end_of_giraDisplay-_giraDisplay
  4103  00A9                     	
  4104                           _giraDisplay:	
  4105  0E98                     ;incstack = 0
  4106                           	opt	stack 4
  4107                           ; Regs used in _giraDisplay: [wreg+status,2+status,0+pclath+cstack]
  4108                           	line	877
  4109                           	
  4110                           l4087:	
  4111  0E98                     ;main.c: 877: RB1 = 0;
  4112                           	bcf	status, 5	;RP0=0, select bank0
  4113  0E98  1283               	bcf	status, 6	;RP1=0, select bank0
  4114  0E99  1303               	bcf	(49/8),(49)&7	;volatile
  4115  0E9A  1086               	line	878
  4116                           	
  4117                           l4089:	
  4118  0E9B                     ;main.c: 878: delay_ms(100);
  4119                           	movlw	064h
  4120  0E9B  3064               	movwf	(delay_ms@valor)
  4121  0E9C  00A0               	movlw	0
  4122  0E9D  3000               	movwf	((delay_ms@valor))+1
  4123  0E9E  00A1               	fcall	_delay_ms
  4124  0E9F  120A  118A  27D9  120A  158A  	line	879
  4125                           	
  4126                           l4091:	
  4127  0EA4                     ;main.c: 879: RB1 = 1;
  4128                           	bcf	status, 5	;RP0=0, select bank0
  4129  0EA4  1283               	bcf	status, 6	;RP1=0, select bank0
  4130  0EA5  1303               	bsf	(49/8),(49)&7	;volatile
  4131  0EA6  1486               	line	880
  4132                           ;main.c: 880: delay_ms(50);
  4133                           	movlw	032h
  4134  0EA7  3032               	movwf	(delay_ms@valor)
  4135  0EA8  00A0               	movlw	0
  4136  0EA9  3000               	movwf	((delay_ms@valor))+1
  4137  0EAA  00A1               	fcall	_delay_ms
  4138  0EAB  120A  118A  27D9  120A  158A  	line	881
  4139                           	
  4140                           l4093:	
  4141  0EB0                     ;main.c: 881: RB2 = 0;
  4142                           	bcf	status, 5	;RP0=0, select bank0
  4143  0EB0  1283               	bcf	status, 6	;RP1=0, select bank0
  4144  0EB1  1303               	bcf	(50/8),(50)&7	;volatile
  4145  0EB2  1106               	line	882
  4146                           ;main.c: 882: delay_ms(100);
  4147                           	movlw	064h
  4148  0EB3  3064               	movwf	(delay_ms@valor)
  4149  0EB4  00A0               	movlw	0
  4150  0EB5  3000               	movwf	((delay_ms@valor))+1
  4151  0EB6  00A1               	fcall	_delay_ms
  4152  0EB7  120A  118A  27D9  120A  158A  	line	883
  4153                           	
  4154                           l4095:	
  4155  0EBC                     ;main.c: 883: RB2 = 1;
  4156                           	bcf	status, 5	;RP0=0, select bank0
  4157  0EBC  1283               	bcf	status, 6	;RP1=0, select bank0
  4158  0EBD  1303               	bsf	(50/8),(50)&7	;volatile
  4159  0EBE  1506               	line	884
  4160                           ;main.c: 884: delay_ms(50);
  4161                           	movlw	032h
  4162  0EBF  3032               	movwf	(delay_ms@valor)
  4163  0EC0  00A0               	movlw	0
  4164  0EC1  3000               	movwf	((delay_ms@valor))+1
  4165  0EC2  00A1               	fcall	_delay_ms
  4166  0EC3  120A  118A  27D9  120A  158A  	line	885
  4167                           	
  4168                           l4097:	
  4169  0EC8                     ;main.c: 885: RB3 = 0;
  4170                           	bcf	status, 5	;RP0=0, select bank0
  4171  0EC8  1283               	bcf	status, 6	;RP1=0, select bank0
  4172  0EC9  1303               	bcf	(51/8),(51)&7	;volatile
  4173  0ECA  1186               	line	886
  4174                           ;main.c: 886: delay_ms(100);
  4175                           	movlw	064h
  4176  0ECB  3064               	movwf	(delay_ms@valor)
  4177  0ECC  00A0               	movlw	0
  4178  0ECD  3000               	movwf	((delay_ms@valor))+1
  4179  0ECE  00A1               	fcall	_delay_ms
  4180  0ECF  120A  118A  27D9  120A  158A  	line	887
  4181                           	
  4182                           l4099:	
  4183  0ED4                     ;main.c: 887: RB3 = 1;
  4184                           	bcf	status, 5	;RP0=0, select bank0
  4185  0ED4  1283               	bcf	status, 6	;RP1=0, select bank0
  4186  0ED5  1303               	bsf	(51/8),(51)&7	;volatile
  4187  0ED6  1586               	line	888
  4188                           ;main.c: 888: delay_ms(50);
  4189                           	movlw	032h
  4190  0ED7  3032               	movwf	(delay_ms@valor)
  4191  0ED8  00A0               	movlw	0
  4192  0ED9  3000               	movwf	((delay_ms@valor))+1
  4193  0EDA  00A1               	fcall	_delay_ms
  4194  0EDB  120A  118A  27D9  120A  158A  	line	889
  4195                           	
  4196                           l4101:	
  4197  0EE0                     ;main.c: 889: RB4 = 0;
  4198                           	bcf	status, 5	;RP0=0, select bank0
  4199  0EE0  1283               	bcf	status, 6	;RP1=0, select bank0
  4200  0EE1  1303               	bcf	(52/8),(52)&7	;volatile
  4201  0EE2  1206               	line	890
  4202                           ;main.c: 890: delay_ms(100);
  4203                           	movlw	064h
  4204  0EE3  3064               	movwf	(delay_ms@valor)
  4205  0EE4  00A0               	movlw	0
  4206  0EE5  3000               	movwf	((delay_ms@valor))+1
  4207  0EE6  00A1               	fcall	_delay_ms
  4208  0EE7  120A  118A  27D9  120A  158A  	line	891
  4209                           	
  4210                           l4103:	
  4211  0EEC                     ;main.c: 891: RB4 = 1;
  4212                           	bcf	status, 5	;RP0=0, select bank0
  4213  0EEC  1283               	bcf	status, 6	;RP1=0, select bank0
  4214  0EED  1303               	bsf	(52/8),(52)&7	;volatile
  4215  0EEE  1606               	line	892
  4216                           ;main.c: 892: delay_ms(50);
  4217                           	movlw	032h
  4218  0EEF  3032               	movwf	(delay_ms@valor)
  4219  0EF0  00A0               	movlw	0
  4220  0EF1  3000               	movwf	((delay_ms@valor))+1
  4221  0EF2  00A1               	fcall	_delay_ms
  4222  0EF3  120A  118A  27D9  120A  158A  	line	893
  4223                           	
  4224                           l4105:	
  4225  0EF8                     ;main.c: 893: RB5 = 0;
  4226                           	bcf	status, 5	;RP0=0, select bank0
  4227  0EF8  1283               	bcf	status, 6	;RP1=0, select bank0
  4228  0EF9  1303               	bcf	(53/8),(53)&7	;volatile
  4229  0EFA  1286               	line	894
  4230                           ;main.c: 894: delay_ms(100);
  4231                           	movlw	064h
  4232  0EFB  3064               	movwf	(delay_ms@valor)
  4233  0EFC  00A0               	movlw	0
  4234  0EFD  3000               	movwf	((delay_ms@valor))+1
  4235  0EFE  00A1               	fcall	_delay_ms
  4236  0EFF  120A  118A  27D9  120A  158A  	line	895
  4237                           	
  4238                           l4107:	
  4239  0F04                     ;main.c: 895: RB5 = 1;
  4240                           	bcf	status, 5	;RP0=0, select bank0
  4241  0F04  1283               	bcf	status, 6	;RP1=0, select bank0
  4242  0F05  1303               	bsf	(53/8),(53)&7	;volatile
  4243  0F06  1686               	line	896
  4244                           ;main.c: 896: delay_ms(50);
  4245                           	movlw	032h
  4246  0F07  3032               	movwf	(delay_ms@valor)
  4247  0F08  00A0               	movlw	0
  4248  0F09  3000               	movwf	((delay_ms@valor))+1
  4249  0F0A  00A1               	fcall	_delay_ms
  4250  0F0B  120A  118A  27D9  120A  158A  	line	897
  4251                           	
  4252                           l4109:	
  4253  0F10                     ;main.c: 897: RB6 = 0;
  4254                           	bcf	status, 5	;RP0=0, select bank0
  4255  0F10  1283               	bcf	status, 6	;RP1=0, select bank0
  4256  0F11  1303               	bcf	(54/8),(54)&7	;volatile
  4257  0F12  1306               	line	898
  4258                           ;main.c: 898: delay_ms(100);
  4259                           	movlw	064h
  4260  0F13  3064               	movwf	(delay_ms@valor)
  4261  0F14  00A0               	movlw	0
  4262  0F15  3000               	movwf	((delay_ms@valor))+1
  4263  0F16  00A1               	fcall	_delay_ms
  4264  0F17  120A  118A  27D9  120A  158A  	line	899
  4265                           	
  4266                           l4111:	
  4267  0F1C                     ;main.c: 899: RB6 = 1;
  4268                           	bcf	status, 5	;RP0=0, select bank0
  4269  0F1C  1283               	bcf	status, 6	;RP1=0, select bank0
  4270  0F1D  1303               	bsf	(54/8),(54)&7	;volatile
  4271  0F1E  1706               	line	900
  4272                           ;main.c: 900: delay_ms(50);
  4273                           	movlw	032h
  4274  0F1F  3032               	movwf	(delay_ms@valor)
  4275  0F20  00A0               	movlw	0
  4276  0F21  3000               	movwf	((delay_ms@valor))+1
  4277  0F22  00A1               	fcall	_delay_ms
  4278  0F23  120A  118A  27D9  120A  158A  	line	901
  4279                           	
  4280                           l4113:	
  4281  0F28                     ;main.c: 901: RC2 = 0;
  4282                           	bcf	status, 5	;RP0=0, select bank0
  4283  0F28  1283               	bcf	status, 6	;RP1=0, select bank0
  4284  0F29  1303               	bcf	(58/8),(58)&7	;volatile
  4285  0F2A  1107               	line	902
  4286                           ;main.c: 902: delay_ms(100);
  4287                           	movlw	064h
  4288  0F2B  3064               	movwf	(delay_ms@valor)
  4289  0F2C  00A0               	movlw	0
  4290  0F2D  3000               	movwf	((delay_ms@valor))+1
  4291  0F2E  00A1               	fcall	_delay_ms
  4292  0F2F  120A  118A  27D9  120A  158A  	line	903
  4293                           	
  4294                           l4115:	
  4295  0F34                     ;main.c: 903: RC2 = 1;
  4296                           	bcf	status, 5	;RP0=0, select bank0
  4297  0F34  1283               	bcf	status, 6	;RP1=0, select bank0
  4298  0F35  1303               	bsf	(58/8),(58)&7	;volatile
  4299  0F36  1507               	line	904
  4300                           ;main.c: 904: delay_ms(100);
  4301                           	movlw	064h
  4302  0F37  3064               	movwf	(delay_ms@valor)
  4303  0F38  00A0               	movlw	0
  4304  0F39  3000               	movwf	((delay_ms@valor))+1
  4305  0F3A  00A1               	fcall	_delay_ms
  4306  0F3B  120A  118A  27D9  120A  158A  	line	905
  4307                           	
  4308                           l483:	
  4309  0F40                     	return
  4310  0F40  0008               	opt stack 0
  4311                           GLOBAL	__end_of_giraDisplay
  4312                           	__end_of_giraDisplay:
  4313  0F41                     	signat	_giraDisplay,89
  4314                           	global	_exibeNumeroP
  4315                           
  4316 ;; *************** function _exibeNumeroP *****************
  4317 ;; Defined at:
  4318 ;;		line 865 in file "src/main.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;		None
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;		None
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		None
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4332 ;;      Params:         0       0       0       0       0
  4333 ;;      Locals:         0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0
  4335 ;;      Totals:         0       0       0       0       0
  4336 ;;Total ram usage:        0 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    2
  4339 ;; This function calls:
  4340 ;;		Nothing
  4341 ;; This function is called by:
  4342 ;;		_main
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4346                           	line	865
  4347                           global __ptext14
  4348                           __ptext14:	;psect for function _exibeNumeroP
  4349  09FC                     psect	text14
  4350                           	file	"src/main.c"
  4351                           	line	865
  4352                           	global	__size_of_exibeNumeroP
  4353                           	__size_of_exibeNumeroP	equ	__end_of_exibeNumeroP-_exibeNumeroP
  4354  000B                     	
  4355                           _exibeNumeroP:	
  4356  09FC                     ;incstack = 0
  4357                           	opt	stack 5
  4358                           ; Regs used in _exibeNumeroP: []
  4359                           	line	866
  4360                           	
  4361                           l4063:	
  4362  09FC                     ;main.c: 866: RB1 = 0;
  4363                           	bcf	status, 5	;RP0=0, select bank0
  4364  09FC  1283               	bcf	status, 6	;RP1=0, select bank0
  4365  09FD  1303               	bcf	(49/8),(49)&7	;volatile
  4366  09FE  1086               	line	867
  4367                           ;main.c: 867: RB2 = 0;
  4368                           	bcf	(50/8),(50)&7	;volatile
  4369  09FF  1106               	line	868
  4370                           ;main.c: 868: RB3 = 1;
  4371                           	bsf	(51/8),(51)&7	;volatile
  4372  0A00  1586               	line	869
  4373                           ;main.c: 869: RB4 = 1;
  4374                           	bsf	(52/8),(52)&7	;volatile
  4375  0A01  1606               	line	870
  4376                           ;main.c: 870: RB5 = 0;
  4377                           	bcf	(53/8),(53)&7	;volatile
  4378  0A02  1286               	line	871
  4379                           ;main.c: 871: RB6 = 0;
  4380                           	bcf	(54/8),(54)&7	;volatile
  4381  0A03  1306               	line	872
  4382                           ;main.c: 872: RB7 = 0;
  4383                           	bcf	(55/8),(55)&7	;volatile
  4384  0A04  1386               	line	873
  4385                           ;main.c: 873: RC2 = 0;
  4386                           	bcf	(58/8),(58)&7	;volatile
  4387  0A05  1107               	line	874
  4388                           	
  4389                           l480:	
  4390  0A06                     	return
  4391  0A06  0008               	opt stack 0
  4392                           GLOBAL	__end_of_exibeNumeroP
  4393                           	__end_of_exibeNumeroP:
  4394  0A07                     	signat	_exibeNumeroP,89
  4395                           	global	_executaTesteDosSensores
  4396                           
  4397 ;; *************** function _executaTesteDosSensores *****************
  4398 ;; Defined at:
  4399 ;;		line 238 in file "src/main.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0
  4416 ;;      Totals:         0       0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    5
  4420 ;; This function calls:
  4421 ;;		_atualizaPainelDeLed
  4422 ;;		_exibeQuantidadeDeSensores
  4423 ;;		_obtemQuantidadeDeSensores
  4424 ;;		_testaSaidaPulsadaEm20Volts
  4425 ;;		_testaSaidaPulsadaEm9Volts
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4431                           	line	238
  4432                           global __ptext15
  4433                           __ptext15:	;psect for function _executaTesteDosSensores
  4434  0A97                     psect	text15
  4435                           	file	"src/main.c"
  4436                           	line	238
  4437                           	global	__size_of_executaTesteDosSensores
  4438                           	__size_of_executaTesteDosSensores	equ	__end_of_executaTesteDosSensores-_executaTesteDos
                                 Sensores
  4439  001F                     	
  4440                           _executaTesteDosSensores:	
  4441  0A97                     ;incstack = 0
  4442                           	opt	stack 2
  4443                           ; Regs used in _executaTesteDosSensores: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
                                 tack]
  4444                           	line	239
  4445                           	
  4446                           l4117:	
  4447  0A97                     ;main.c: 239: numeroDeSensores = 0;
  4448                           	clrf	(_numeroDeSensores)
  4449  0A97  01F5               	line	240
  4450                           ;main.c: 240: flagErroDeLeitura = 0;
  4451                           	bsf	status, 5	;RP0=1, select bank1
  4452  0A98  1683               	bcf	status, 6	;RP1=0, select bank1
  4453  0A99  1303               	clrf	(_flagErroDeLeitura)^080h
  4454  0A9A  01E7               	line	242
  4455                           	
  4456                           l4119:	
  4457  0A9B                     ;main.c: 242: testaSaidaPulsadaEm9Volts();
  4458                           	fcall	_testaSaidaPulsadaEm9Volts
  4459  0A9B  120A  118A  2598  120A  158A  	line	243
  4460                           	
  4461                           l4121:	
  4462  0AA0                     ;main.c: 243: testaSaidaPulsadaEm20Volts();
  4463                           	fcall	_testaSaidaPulsadaEm20Volts
  4464  0AA0  120A  118A  2659  120A  158A  	line	244
  4465                           	
  4466                           l4123:	
  4467  0AA5                     ;main.c: 244: obtemQuantidadeDeSensores();
  4468                           	fcall	_obtemQuantidadeDeSensores
  4469  0AA5  120A  118A  2249  120A  158A  	line	245
  4470                           	
  4471                           l4125:	
  4472  0AAA                     ;main.c: 245: exibeQuantidadeDeSensores(numeroDeSensores);
  4473                           	movf	(_numeroDeSensores),w
  4474  0AAA  0875               	fcall	_exibeQuantidadeDeSensores
  4475  0AAB  120A  158A  258F  120A  158A  	line	247
  4476                           	
  4477                           l4127:	
  4478  0AB0                     ;main.c: 247: atualizaPainelDeLed();
  4479                           	fcall	_atualizaPainelDeLed
  4480  0AB0  120A  158A  221E  120A  158A  	line	248
  4481                           	
  4482                           l307:	
  4483  0AB5                     	return
  4484  0AB5  0008               	opt stack 0
  4485                           GLOBAL	__end_of_executaTesteDosSensores
  4486                           	__end_of_executaTesteDosSensores:
  4487  0AB6                     	signat	_executaTesteDosSensores,89
  4488                           	global	_testaSaidaPulsadaEm9Volts
  4489                           
  4490 ;; *************** function _testaSaidaPulsadaEm9Volts *****************
  4491 ;; Defined at:
  4492 ;;		line 291 in file "src/main.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1    wreg      void 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0, pclath, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4506 ;;      Params:         0       0       0       0       0
  4507 ;;      Locals:         0       0       0       0       0
  4508 ;;      Temps:          0       1       0       0       0
  4509 ;;      Totals:         0       1       0       0       0
  4510 ;;Total ram usage:        1 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:    3
  4513 ;; This function calls:
  4514 ;;		_delay_ms
  4515 ;;		_setaSaidaEm9Volts
  4516 ;; This function is called by:
  4517 ;;		_executaTesteDosSensores
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4521                           	line	291
  4522                           global __ptext16
  4523                           __ptext16:	;psect for function _testaSaidaPulsadaEm9Volts
  4524  0598                     psect	text16
  4525                           	file	"src/main.c"
  4526                           	line	291
  4527                           	global	__size_of_testaSaidaPulsadaEm9Volts
  4528                           	__size_of_testaSaidaPulsadaEm9Volts	equ	__end_of_testaSaidaPulsadaEm9Volts-_testaSaidaP
                                 ulsadaEm9Volts
  4529  00C1                     	
  4530                           _testaSaidaPulsadaEm9Volts:	
  4531  0598                     ;incstack = 0
  4532                           	opt	stack 3
  4533                           ; Regs used in _testaSaidaPulsadaEm9Volts: [wreg+status,2+status,0+pclath+cstack]
  4534                           	line	293
  4535                           	
  4536                           l3735:	
  4537  0598                     ;main.c: 293: RD1 = 0;
  4538                           	bcf	status, 5	;RP0=0, select bank0
  4539  0598  1283               	bcf	status, 6	;RP1=0, select bank0
  4540  0599  1303               	bcf	(65/8),(65)&7	;volatile
  4541  059A  1088               	line	294
  4542                           	
  4543                           l3737:	
  4544  059B                     ;main.c: 294: setaSaidaEm9Volts();
  4545                           	fcall	_setaSaidaEm9Volts
  4546  059B  120A  158A  2166  120A  118A  	line	295
  4547                           	
  4548                           l3739:	
  4549  05A0                     ;main.c: 295: tensaoDeSaida = 9;
  4550                           	movlw	low(09h)
  4551  05A0  3009               	bcf	status, 5	;RP0=0, select bank0
  4552  05A1  1283               	bcf	status, 6	;RP1=0, select bank0
  4553  05A2  1303               	movwf	(??_testaSaidaPulsadaEm9Volts+0)+0
  4554  05A3  00A6               	movf	(??_testaSaidaPulsadaEm9Volts+0)+0,w
  4555  05A4  0826               	bsf	status, 5	;RP0=1, select bank1
  4556  05A5  1683               	bcf	status, 6	;RP1=0, select bank1
  4557  05A6  1303               	movwf	(_tensaoDeSaida)^080h
  4558  05A7  00E3               	line	296
  4559                           ;main.c: 296: delay_ms(10);
  4560                           	movlw	0Ah
  4561  05A8  300A               	bcf	status, 5	;RP0=0, select bank0
  4562  05A9  1283               	bcf	status, 6	;RP1=0, select bank0
  4563  05AA  1303               	movwf	(delay_ms@valor)
  4564  05AB  00A0               	movlw	0
  4565  05AC  3000               	movwf	((delay_ms@valor))+1
  4566  05AD  00A1               	fcall	_delay_ms
  4567  05AE  120A  118A  27D9  120A  118A  	line	297
  4568                           	
  4569                           l3741:	
  4570  05B3                     ;main.c: 297: pulsosSemResposta = 0;
  4571                           	bsf	status, 5	;RP0=1, select bank1
  4572  05B3  1683               	bcf	status, 6	;RP1=0, select bank1
  4573  05B4  1303               	clrf	(_pulsosSemResposta)^080h
  4574  05B5  01DC               	clrf	(_pulsosSemResposta+1)^080h
  4575  05B6  01DD               	line	298
  4576                           	
  4577                           l3743:	
  4578  05B7                     ;main.c: 298: falhaPulsoDeEntrada = 0;
  4579                           	clrf	(_falhaPulsoDeEntrada)^080h
  4580  05B7  01E5               	line	299
  4581                           	
  4582                           l3745:	
  4583  05B8                     ;main.c: 299: respostaOk = 0;
  4584                           	clrf	(_respostaOk)^080h
  4585  05B8  01E6               	line	300
  4586                           	
  4587                           l3747:	
  4588  05B9                     ;main.c: 300: tempoDeReacaoDoSensor = 0;
  4589                           	clrf	(_tempoDeReacaoDoSensor)
  4590  05B9  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  4591  05BA  01F1               	line	301
  4592                           	
  4593                           l3749:	
  4594  05BB                     ;main.c: 301: flagTempoDeReacaoDoSensor = 0;
  4595                           	clrf	(_flagTempoDeReacaoDoSensor)
  4596  05BB  01F4               	line	302
  4597                           	
  4598                           l3751:	
  4599  05BC                     ;main.c: 302: numeroDePulsos = 0;
  4600                           	clrf	(_numeroDePulsos)
  4601  05BC  01F2               	clrf	(_numeroDePulsos+1)
  4602  05BD  01F3               	line	303
  4603                           	
  4604                           l3753:	
  4605  05BE                     ;main.c: 303: for(numeroDePulsos = 0; numeroDePulsos < (10); numeroDePulsos++){
  4606                           	clrf	(_numeroDePulsos)
  4607  05BE  01F2               	clrf	(_numeroDePulsos+1)
  4608  05BF  01F3               	
  4609                           l3755:	
  4610  05C0                     	movlw	0
  4611  05C0  3000               	subwf	(_numeroDePulsos+1),w
  4612  05C1  0273               	movlw	0Ah
  4613  05C2  300A               	skipnz
  4614  05C3  1903               	subwf	(_numeroDePulsos),w
  4615  05C4  0272               	skipc
  4616  05C5  1C03               	goto	u3521
  4617  05C6  2DC8               	goto	u3520
  4618  05C7  2DC9               u3521:
  4619  05C8                     	goto	l3759
  4620  05C8  2DCB               u3520:
  4621  05C9                     	goto	l3791
  4622  05C9  2E32               	
  4623                           l3757:	
  4624  05CA                     	goto	l3791
  4625  05CA  2E32               	
  4626                           l334:	
  4627  05CB                     	line	304
  4628                           	
  4629                           l3759:	
  4630  05CB                     ;main.c: 304: pulsosSemResposta = 1;
  4631                           	movlw	01h
  4632  05CB  3001               	bsf	status, 5	;RP0=1, select bank1
  4633  05CC  1683               	bcf	status, 6	;RP1=0, select bank1
  4634  05CD  1303               	movwf	(_pulsosSemResposta)^080h
  4635  05CE  00DC               	movlw	0
  4636  05CF  3000               	movwf	((_pulsosSemResposta)^080h)+1
  4637  05D0  00DD               	line	305
  4638                           	
  4639                           l3761:	
  4640  05D1                     ;main.c: 305: OPTION_REGbits.INTEDG = 1;
  4641                           	bsf	(129)^080h,6	;volatile
  4642  05D1  1701               	line	306
  4643                           	
  4644                           l3763:	
  4645  05D2                     ;main.c: 306: estadoDoSinal = 1;
  4646                           	clrf	(_estadoDoSinal)^080h
  4647  05D2  01DF               	incf	(_estadoDoSinal)^080h,f
  4648  05D3  0ADF               	line	307
  4649                           	
  4650                           l3765:	
  4651  05D4                     ;main.c: 307: RD1 = 1;
  4652                           	bcf	status, 5	;RP0=0, select bank0
  4653  05D4  1283               	bcf	status, 6	;RP1=0, select bank0
  4654  05D5  1303               	bsf	(65/8),(65)&7	;volatile
  4655  05D6  1488               	line	308
  4656                           	
  4657                           l3767:	
  4658  05D7                     ;main.c: 308: for(tempoDeReacaoDoSensor = 0; tempoDeReacaoDoSensor < 110; tempoDeReacaoD
                                 oSensor++){
  4659                           	clrf	(_tempoDeReacaoDoSensor)
  4660  05D7  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  4661  05D8  01F1               	
  4662                           l3769:	
  4663  05D9                     	movlw	0
  4664  05D9  3000               	subwf	(_tempoDeReacaoDoSensor+1),w
  4665  05DA  0271               	movlw	06Eh
  4666  05DB  306E               	skipnz
  4667  05DC  1903               	subwf	(_tempoDeReacaoDoSensor),w
  4668  05DD  0270               	skipc
  4669  05DE  1C03               	goto	u3531
  4670  05DF  2DE1               	goto	u3530
  4671  05E0  2DE2               u3531:
  4672  05E1                     	goto	l336
  4673  05E1  2DE4               u3530:
  4674  05E2                     	goto	l3775
  4675  05E2  2DF7               	
  4676                           l3771:	
  4677  05E3                     	goto	l3775
  4678  05E3  2DF7               	
  4679                           l336:	
  4680  05E4                     	line	309
  4681                           ;main.c: 309: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4682                           		opt asmopt_push
  4683                           	opt asmopt_off
  4684                           	nop2	;2 cycle nop
  4685  05E4  2DE5               	nop2	;2 cycle nop
  4686  05E5  2DE6               	nop
  4687  05E6  0000               	opt asmopt_pop
  4688                           
  4689                           	line	308
  4690                           	
  4691                           l3773:	
  4692  05E7                     	movlw	01h
  4693  05E7  3001               	addwf	(_tempoDeReacaoDoSensor),f
  4694  05E8  07F0               	skipnc
  4695  05E9  1803               	incf	(_tempoDeReacaoDoSensor+1),f
  4696  05EA  0AF1               	movlw	0
  4697  05EB  3000               	addwf	(_tempoDeReacaoDoSensor+1),f
  4698  05EC  07F1               	movlw	0
  4699  05ED  3000               	subwf	(_tempoDeReacaoDoSensor+1),w
  4700  05EE  0271               	movlw	06Eh
  4701  05EF  306E               	skipnz
  4702  05F0  1903               	subwf	(_tempoDeReacaoDoSensor),w
  4703  05F1  0270               	skipc
  4704  05F2  1C03               	goto	u3541
  4705  05F3  2DF5               	goto	u3540
  4706  05F4  2DF6               u3541:
  4707  05F5                     	goto	l336
  4708  05F5  2DE4               u3540:
  4709  05F6                     	goto	l3775
  4710  05F6  2DF7               	
  4711                           l337:	
  4712  05F7                     	line	311
  4713                           	
  4714                           l3775:	
  4715  05F7                     ;main.c: 310: }
  4716                           ;main.c: 311: pulsosSemResposta = 1;
  4717                           	movlw	01h
  4718  05F7  3001               	bsf	status, 5	;RP0=1, select bank1
  4719  05F8  1683               	bcf	status, 6	;RP1=0, select bank1
  4720  05F9  1303               	movwf	(_pulsosSemResposta)^080h
  4721  05FA  00DC               	movlw	0
  4722  05FB  3000               	movwf	((_pulsosSemResposta)^080h)+1
  4723  05FC  00DD               	line	312
  4724                           	
  4725                           l3777:	
  4726  05FD                     ;main.c: 312: OPTION_REGbits.INTEDG = 0;
  4727                           	bcf	(129)^080h,6	;volatile
  4728  05FD  1301               	line	313
  4729                           	
  4730                           l3779:	
  4731  05FE                     ;main.c: 313: estadoDoSinal = 0;
  4732                           	clrf	(_estadoDoSinal)^080h
  4733  05FE  01DF               	line	314
  4734                           	
  4735                           l3781:	
  4736  05FF                     ;main.c: 314: RD1 = 0;
  4737                           	bcf	status, 5	;RP0=0, select bank0
  4738  05FF  1283               	bcf	status, 6	;RP1=0, select bank0
  4739  0600  1303               	bcf	(65/8),(65)&7	;volatile
  4740  0601  1088               	line	315
  4741                           	
  4742                           l3783:	
  4743  0602                     ;main.c: 315: for(tempoDeReacaoDoSensor = 0; tempoDeReacaoDoSensor < 26500; tempoDeReaca
                                 oDoSensor++){
  4744                           	clrf	(_tempoDeReacaoDoSensor)
  4745  0602  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  4746  0603  01F1               	movlw	067h
  4747  0604  3067               	subwf	(_tempoDeReacaoDoSensor+1),w
  4748  0605  0271               	movlw	084h
  4749  0606  3084               	skipnz
  4750  0607  1903               	subwf	(_tempoDeReacaoDoSensor),w
  4751  0608  0270               	skipc
  4752  0609  1C03               	goto	u3551
  4753  060A  2E0C               	goto	u3550
  4754  060B  2E0D               u3551:
  4755  060C                     	goto	l338
  4756  060C  2E0F               u3550:
  4757  060D                     	goto	l3789
  4758  060D  2E22               	
  4759                           l3785:	
  4760  060E                     	goto	l3789
  4761  060E  2E22               	
  4762                           l338:	
  4763  060F                     	line	316
  4764                           ;main.c: 316: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4765                           		opt asmopt_push
  4766                           	opt asmopt_off
  4767                           	nop2	;2 cycle nop
  4768  060F  2E10               	nop2	;2 cycle nop
  4769  0610  2E11               	nop
  4770  0611  0000               	opt asmopt_pop
  4771                           
  4772                           	line	315
  4773                           	
  4774                           l3787:	
  4775  0612                     	movlw	01h
  4776  0612  3001               	addwf	(_tempoDeReacaoDoSensor),f
  4777  0613  07F0               	skipnc
  4778  0614  1803               	incf	(_tempoDeReacaoDoSensor+1),f
  4779  0615  0AF1               	movlw	0
  4780  0616  3000               	addwf	(_tempoDeReacaoDoSensor+1),f
  4781  0617  07F1               	movlw	067h
  4782  0618  3067               	subwf	(_tempoDeReacaoDoSensor+1),w
  4783  0619  0271               	movlw	084h
  4784  061A  3084               	skipnz
  4785  061B  1903               	subwf	(_tempoDeReacaoDoSensor),w
  4786  061C  0270               	skipc
  4787  061D  1C03               	goto	u3561
  4788  061E  2E20               	goto	u3560
  4789  061F  2E21               u3561:
  4790  0620                     	goto	l338
  4791  0620  2E0F               u3560:
  4792  0621                     	goto	l3789
  4793  0621  2E22               	
  4794                           l339:	
  4795  0622                     	line	303
  4796                           	
  4797                           l3789:	
  4798  0622                     	movlw	01h
  4799  0622  3001               	addwf	(_numeroDePulsos),f
  4800  0623  07F2               	skipnc
  4801  0624  1803               	incf	(_numeroDePulsos+1),f
  4802  0625  0AF3               	movlw	0
  4803  0626  3000               	addwf	(_numeroDePulsos+1),f
  4804  0627  07F3               	movlw	0
  4805  0628  3000               	subwf	(_numeroDePulsos+1),w
  4806  0629  0273               	movlw	0Ah
  4807  062A  300A               	skipnz
  4808  062B  1903               	subwf	(_numeroDePulsos),w
  4809  062C  0272               	skipc
  4810  062D  1C03               	goto	u3571
  4811  062E  2E30               	goto	u3570
  4812  062F  2E31               u3571:
  4813  0630                     	goto	l3759
  4814  0630  2DCB               u3570:
  4815  0631                     	goto	l3791
  4816  0631  2E32               	
  4817                           l335:	
  4818  0632                     	line	322
  4819                           	
  4820                           l3791:	
  4821  0632                     ;main.c: 317: }
  4822                           ;main.c: 321: }
  4823                           ;main.c: 322: estadoDoSinal = 0;
  4824                           	bsf	status, 5	;RP0=1, select bank1
  4825  0632  1683               	bcf	status, 6	;RP1=0, select bank1
  4826  0633  1303               	clrf	(_estadoDoSinal)^080h
  4827  0634  01DF               	line	323
  4828                           	
  4829                           l3793:	
  4830  0635                     ;main.c: 323: RD1 = 0;
  4831                           	bcf	status, 5	;RP0=0, select bank0
  4832  0635  1283               	bcf	status, 6	;RP1=0, select bank0
  4833  0636  1303               	bcf	(65/8),(65)&7	;volatile
  4834  0637  1088               	line	324
  4835                           	
  4836                           l3795:	
  4837  0638                     ;main.c: 324: if(pulsosSemResposta > 0 || flagTempoDeReacaoDoSensor == 1 || flagErrroDeA
                                 mplitude == 1){
  4838                           	bsf	status, 5	;RP0=1, select bank1
  4839  0638  1683               	bcf	status, 6	;RP1=0, select bank1
  4840  0639  1303               	movf	((_pulsosSemResposta)^080h),w
  4841  063A  085C               iorwf	((_pulsosSemResposta+1)^080h),w
  4842  063B  045D               	btfss	status,2
  4843  063C  1D03               	goto	u3581
  4844  063D  2E3F               	goto	u3580
  4845  063E  2E40               u3581:
  4846  063F                     	goto	l342
  4847  063F  2E4A               u3580:
  4848  0640                     	
  4849                           l3797:	
  4850  0640                     		decf	((_flagTempoDeReacaoDoSensor)),w
  4851  0640  0374               	btfsc	status,2
  4852  0641  1903               	goto	u3591
  4853  0642  2E44               	goto	u3590
  4854  0643  2E45               u3591:
  4855  0644                     	goto	l342
  4856  0644  2E4A               u3590:
  4857  0645                     	
  4858                           l3799:	
  4859  0645                     		decf	((_flagErrroDeAmplitude)^080h),w
  4860  0645  0362               	btfss	status,2
  4861  0646  1D03               	goto	u3601
  4862  0647  2E49               	goto	u3600
  4863  0648  2E4A               u3601:
  4864  0649                     	goto	l340
  4865  0649  2E54               u3600:
  4866  064A                     	
  4867                           l342:	
  4868  064A                     	line	325
  4869                           ;main.c: 325: RD7 = 1;
  4870                           	bcf	status, 5	;RP0=0, select bank0
  4871  064A  1283               	bcf	status, 6	;RP1=0, select bank0
  4872  064B  1303               	bsf	(71/8),(71)&7	;volatile
  4873  064C  1788               	line	326
  4874                           ;main.c: 326: RD5 = 1;
  4875                           	bsf	(69/8),(69)&7	;volatile
  4876  064D  1688               	line	327
  4877                           ;main.c: 327: RD4 = 0;
  4878                           	bcf	(68/8),(68)&7	;volatile
  4879  064E  1208               	line	328
  4880                           ;main.c: 328: flagErroDeLeitura = 1;
  4881                           	bsf	status, 5	;RP0=1, select bank1
  4882  064F  1683               	bcf	status, 6	;RP1=0, select bank1
  4883  0650  1303               	clrf	(_flagErroDeLeitura)^080h
  4884  0651  01E7               	incf	(_flagErroDeLeitura)^080h,f
  4885  0652  0AE7               	line	329
  4886                           ;main.c: 329: }else{
  4887                           	goto	l344
  4888  0653  2E58               	
  4889                           l340:	
  4890  0654                     	line	330
  4891                           ;main.c: 330: RD7 = 0;
  4892                           	bcf	status, 5	;RP0=0, select bank0
  4893  0654  1283               	bcf	status, 6	;RP1=0, select bank0
  4894  0655  1303               	bcf	(71/8),(71)&7	;volatile
  4895  0656  1388               	goto	l344
  4896  0657  2E58               	line	334
  4897                           	
  4898                           l343:	
  4899  0658                     	line	335
  4900                           	
  4901                           l344:	
  4902  0658                     	return
  4903  0658  0008               	opt stack 0
  4904                           GLOBAL	__end_of_testaSaidaPulsadaEm9Volts
  4905                           	__end_of_testaSaidaPulsadaEm9Volts:
  4906  0659                     	signat	_testaSaidaPulsadaEm9Volts,89
  4907                           	global	_testaSaidaPulsadaEm20Volts
  4908                           
  4909 ;; *************** function _testaSaidaPulsadaEm20Volts *****************
  4910 ;; Defined at:
  4911 ;;		line 337 in file "src/main.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;		None
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;		None
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0, pclath, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4925 ;;      Params:         0       0       0       0       0
  4926 ;;      Locals:         0       0       0       0       0
  4927 ;;      Temps:          0       1       0       0       0
  4928 ;;      Totals:         0       1       0       0       0
  4929 ;;Total ram usage:        1 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    3
  4932 ;; This function calls:
  4933 ;;		_delay_ms
  4934 ;;		_setaSaidaEm20Volts
  4935 ;; This function is called by:
  4936 ;;		_executaTesteDosSensores
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4940                           	line	337
  4941                           global __ptext17
  4942                           __ptext17:	;psect for function _testaSaidaPulsadaEm20Volts
  4943  0659                     psect	text17
  4944                           	file	"src/main.c"
  4945                           	line	337
  4946                           	global	__size_of_testaSaidaPulsadaEm20Volts
  4947                           	__size_of_testaSaidaPulsadaEm20Volts	equ	__end_of_testaSaidaPulsadaEm20Volts-_testaSaid
                                 aPulsadaEm20Volts
  4948  00C1                     	
  4949                           _testaSaidaPulsadaEm20Volts:	
  4950  0659                     ;incstack = 0
  4951                           	opt	stack 3
  4952                           ; Regs used in _testaSaidaPulsadaEm20Volts: [wreg+status,2+status,0+pclath+cstack]
  4953                           	line	339
  4954                           	
  4955                           l3801:	
  4956  0659                     ;main.c: 339: RD1 = 0;
  4957                           	bcf	status, 5	;RP0=0, select bank0
  4958  0659  1283               	bcf	status, 6	;RP1=0, select bank0
  4959  065A  1303               	bcf	(65/8),(65)&7	;volatile
  4960  065B  1088               	line	340
  4961                           	
  4962                           l3803:	
  4963  065C                     ;main.c: 340: setaSaidaEm20Volts();
  4964                           	fcall	_setaSaidaEm20Volts
  4965  065C  120A  158A  2161  120A  118A  	line	341
  4966                           	
  4967                           l3805:	
  4968  0661                     ;main.c: 341: tensaoDeSaida = 20;
  4969                           	movlw	low(014h)
  4970  0661  3014               	bcf	status, 5	;RP0=0, select bank0
  4971  0662  1283               	bcf	status, 6	;RP1=0, select bank0
  4972  0663  1303               	movwf	(??_testaSaidaPulsadaEm20Volts+0)+0
  4973  0664  00A6               	movf	(??_testaSaidaPulsadaEm20Volts+0)+0,w
  4974  0665  0826               	bsf	status, 5	;RP0=1, select bank1
  4975  0666  1683               	bcf	status, 6	;RP1=0, select bank1
  4976  0667  1303               	movwf	(_tensaoDeSaida)^080h
  4977  0668  00E3               	line	342
  4978                           ;main.c: 342: delay_ms(10);
  4979                           	movlw	0Ah
  4980  0669  300A               	bcf	status, 5	;RP0=0, select bank0
  4981  066A  1283               	bcf	status, 6	;RP1=0, select bank0
  4982  066B  1303               	movwf	(delay_ms@valor)
  4983  066C  00A0               	movlw	0
  4984  066D  3000               	movwf	((delay_ms@valor))+1
  4985  066E  00A1               	fcall	_delay_ms
  4986  066F  120A  118A  27D9  120A  118A  	line	343
  4987                           	
  4988                           l3807:	
  4989  0674                     ;main.c: 343: pulsosSemResposta = 0;
  4990                           	bsf	status, 5	;RP0=1, select bank1
  4991  0674  1683               	bcf	status, 6	;RP1=0, select bank1
  4992  0675  1303               	clrf	(_pulsosSemResposta)^080h
  4993  0676  01DC               	clrf	(_pulsosSemResposta+1)^080h
  4994  0677  01DD               	line	344
  4995                           	
  4996                           l3809:	
  4997  0678                     ;main.c: 344: falhaPulsoDeEntrada = 0;
  4998                           	clrf	(_falhaPulsoDeEntrada)^080h
  4999  0678  01E5               	line	345
  5000                           	
  5001                           l3811:	
  5002  0679                     ;main.c: 345: respostaOk = 0;
  5003                           	clrf	(_respostaOk)^080h
  5004  0679  01E6               	line	346
  5005                           	
  5006                           l3813:	
  5007  067A                     ;main.c: 346: tempoDeReacaoDoSensor = 0;
  5008                           	clrf	(_tempoDeReacaoDoSensor)
  5009  067A  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  5010  067B  01F1               	line	347
  5011                           	
  5012                           l3815:	
  5013  067C                     ;main.c: 347: flagTempoDeReacaoDoSensor = 0;
  5014                           	clrf	(_flagTempoDeReacaoDoSensor)
  5015  067C  01F4               	line	348
  5016                           	
  5017                           l3817:	
  5018  067D                     ;main.c: 348: numeroDePulsos = 0;
  5019                           	clrf	(_numeroDePulsos)
  5020  067D  01F2               	clrf	(_numeroDePulsos+1)
  5021  067E  01F3               	line	349
  5022                           	
  5023                           l3819:	
  5024  067F                     ;main.c: 349: for(numeroDePulsos = 0; numeroDePulsos < 10 + 50; numeroDePulsos++){
  5025                           	clrf	(_numeroDePulsos)
  5026  067F  01F2               	clrf	(_numeroDePulsos+1)
  5027  0680  01F3               	
  5028                           l3821:	
  5029  0681                     	movlw	0
  5030  0681  3000               	subwf	(_numeroDePulsos+1),w
  5031  0682  0273               	movlw	03Ch
  5032  0683  303C               	skipnz
  5033  0684  1903               	subwf	(_numeroDePulsos),w
  5034  0685  0272               	skipc
  5035  0686  1C03               	goto	u3611
  5036  0687  2E89               	goto	u3610
  5037  0688  2E8A               u3611:
  5038  0689                     	goto	l3825
  5039  0689  2E8C               u3610:
  5040  068A                     	goto	l3857
  5041  068A  2EF3               	
  5042                           l3823:	
  5043  068B                     	goto	l3857
  5044  068B  2EF3               	
  5045                           l347:	
  5046  068C                     	line	350
  5047                           	
  5048                           l3825:	
  5049  068C                     ;main.c: 350: pulsosSemResposta = 1;
  5050                           	movlw	01h
  5051  068C  3001               	bsf	status, 5	;RP0=1, select bank1
  5052  068D  1683               	bcf	status, 6	;RP1=0, select bank1
  5053  068E  1303               	movwf	(_pulsosSemResposta)^080h
  5054  068F  00DC               	movlw	0
  5055  0690  3000               	movwf	((_pulsosSemResposta)^080h)+1
  5056  0691  00DD               	line	351
  5057                           	
  5058                           l3827:	
  5059  0692                     ;main.c: 351: OPTION_REGbits.INTEDG = 1;
  5060                           	bsf	(129)^080h,6	;volatile
  5061  0692  1701               	line	352
  5062                           	
  5063                           l3829:	
  5064  0693                     ;main.c: 352: estadoDoSinal = 1;
  5065                           	clrf	(_estadoDoSinal)^080h
  5066  0693  01DF               	incf	(_estadoDoSinal)^080h,f
  5067  0694  0ADF               	line	353
  5068                           	
  5069                           l3831:	
  5070  0695                     ;main.c: 353: RD1 = 1;
  5071                           	bcf	status, 5	;RP0=0, select bank0
  5072  0695  1283               	bcf	status, 6	;RP1=0, select bank0
  5073  0696  1303               	bsf	(65/8),(65)&7	;volatile
  5074  0697  1488               	line	354
  5075                           	
  5076                           l3833:	
  5077  0698                     ;main.c: 354: for(tempoDeReacaoDoSensor = 0; tempoDeReacaoDoSensor < 260; tempoDeReacaoD
                                 oSensor++){
  5078                           	clrf	(_tempoDeReacaoDoSensor)
  5079  0698  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  5080  0699  01F1               	
  5081                           l3835:	
  5082  069A                     	movlw	01h
  5083  069A  3001               	subwf	(_tempoDeReacaoDoSensor+1),w
  5084  069B  0271               	movlw	04h
  5085  069C  3004               	skipnz
  5086  069D  1903               	subwf	(_tempoDeReacaoDoSensor),w
  5087  069E  0270               	skipc
  5088  069F  1C03               	goto	u3621
  5089  06A0  2EA2               	goto	u3620
  5090  06A1  2EA3               u3621:
  5091  06A2                     	goto	l349
  5092  06A2  2EA5               u3620:
  5093  06A3                     	goto	l3841
  5094  06A3  2EB8               	
  5095                           l3837:	
  5096  06A4                     	goto	l3841
  5097  06A4  2EB8               	
  5098                           l349:	
  5099  06A5                     	line	355
  5100                           ;main.c: 355: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5101                           		opt asmopt_push
  5102                           	opt asmopt_off
  5103                           	nop2	;2 cycle nop
  5104  06A5  2EA6               	nop2	;2 cycle nop
  5105  06A6  2EA7               	nop
  5106  06A7  0000               	opt asmopt_pop
  5107                           
  5108                           	line	354
  5109                           	
  5110                           l3839:	
  5111  06A8                     	movlw	01h
  5112  06A8  3001               	addwf	(_tempoDeReacaoDoSensor),f
  5113  06A9  07F0               	skipnc
  5114  06AA  1803               	incf	(_tempoDeReacaoDoSensor+1),f
  5115  06AB  0AF1               	movlw	0
  5116  06AC  3000               	addwf	(_tempoDeReacaoDoSensor+1),f
  5117  06AD  07F1               	movlw	01h
  5118  06AE  3001               	subwf	(_tempoDeReacaoDoSensor+1),w
  5119  06AF  0271               	movlw	04h
  5120  06B0  3004               	skipnz
  5121  06B1  1903               	subwf	(_tempoDeReacaoDoSensor),w
  5122  06B2  0270               	skipc
  5123  06B3  1C03               	goto	u3631
  5124  06B4  2EB6               	goto	u3630
  5125  06B5  2EB7               u3631:
  5126  06B6                     	goto	l349
  5127  06B6  2EA5               u3630:
  5128  06B7                     	goto	l3841
  5129  06B7  2EB8               	
  5130                           l350:	
  5131  06B8                     	line	357
  5132                           	
  5133                           l3841:	
  5134  06B8                     ;main.c: 356: }
  5135                           ;main.c: 357: pulsosSemResposta = 1;
  5136                           	movlw	01h
  5137  06B8  3001               	bsf	status, 5	;RP0=1, select bank1
  5138  06B9  1683               	bcf	status, 6	;RP1=0, select bank1
  5139  06BA  1303               	movwf	(_pulsosSemResposta)^080h
  5140  06BB  00DC               	movlw	0
  5141  06BC  3000               	movwf	((_pulsosSemResposta)^080h)+1
  5142  06BD  00DD               	line	358
  5143                           	
  5144                           l3843:	
  5145  06BE                     ;main.c: 358: OPTION_REGbits.INTEDG = 0;
  5146                           	bcf	(129)^080h,6	;volatile
  5147  06BE  1301               	line	359
  5148                           	
  5149                           l3845:	
  5150  06BF                     ;main.c: 359: estadoDoSinal = 0;
  5151                           	clrf	(_estadoDoSinal)^080h
  5152  06BF  01DF               	line	360
  5153                           	
  5154                           l3847:	
  5155  06C0                     ;main.c: 360: RD1 = 0;
  5156                           	bcf	status, 5	;RP0=0, select bank0
  5157  06C0  1283               	bcf	status, 6	;RP1=0, select bank0
  5158  06C1  1303               	bcf	(65/8),(65)&7	;volatile
  5159  06C2  1088               	line	361
  5160                           	
  5161                           l3849:	
  5162  06C3                     ;main.c: 361: for(tempoDeReacaoDoSensor = 0; tempoDeReacaoDoSensor < 3300; tempoDeReacao
                                 DoSensor++){
  5163                           	clrf	(_tempoDeReacaoDoSensor)
  5164  06C3  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  5165  06C4  01F1               	movlw	0Ch
  5166  06C5  300C               	subwf	(_tempoDeReacaoDoSensor+1),w
  5167  06C6  0271               	movlw	0E4h
  5168  06C7  30E4               	skipnz
  5169  06C8  1903               	subwf	(_tempoDeReacaoDoSensor),w
  5170  06C9  0270               	skipc
  5171  06CA  1C03               	goto	u3641
  5172  06CB  2ECD               	goto	u3640
  5173  06CC  2ECE               u3641:
  5174  06CD                     	goto	l351
  5175  06CD  2ED0               u3640:
  5176  06CE                     	goto	l3855
  5177  06CE  2EE3               	
  5178                           l3851:	
  5179  06CF                     	goto	l3855
  5180  06CF  2EE3               	
  5181                           l351:	
  5182  06D0                     	line	362
  5183                           ;main.c: 362: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5184                           		opt asmopt_push
  5185                           	opt asmopt_off
  5186                           	nop2	;2 cycle nop
  5187  06D0  2ED1               	nop2	;2 cycle nop
  5188  06D1  2ED2               	nop
  5189  06D2  0000               	opt asmopt_pop
  5190                           
  5191                           	line	361
  5192                           	
  5193                           l3853:	
  5194  06D3                     	movlw	01h
  5195  06D3  3001               	addwf	(_tempoDeReacaoDoSensor),f
  5196  06D4  07F0               	skipnc
  5197  06D5  1803               	incf	(_tempoDeReacaoDoSensor+1),f
  5198  06D6  0AF1               	movlw	0
  5199  06D7  3000               	addwf	(_tempoDeReacaoDoSensor+1),f
  5200  06D8  07F1               	movlw	0Ch
  5201  06D9  300C               	subwf	(_tempoDeReacaoDoSensor+1),w
  5202  06DA  0271               	movlw	0E4h
  5203  06DB  30E4               	skipnz
  5204  06DC  1903               	subwf	(_tempoDeReacaoDoSensor),w
  5205  06DD  0270               	skipc
  5206  06DE  1C03               	goto	u3651
  5207  06DF  2EE1               	goto	u3650
  5208  06E0  2EE2               u3651:
  5209  06E1                     	goto	l351
  5210  06E1  2ED0               u3650:
  5211  06E2                     	goto	l3855
  5212  06E2  2EE3               	
  5213                           l352:	
  5214  06E3                     	line	349
  5215                           	
  5216                           l3855:	
  5217  06E3                     	movlw	01h
  5218  06E3  3001               	addwf	(_numeroDePulsos),f
  5219  06E4  07F2               	skipnc
  5220  06E5  1803               	incf	(_numeroDePulsos+1),f
  5221  06E6  0AF3               	movlw	0
  5222  06E7  3000               	addwf	(_numeroDePulsos+1),f
  5223  06E8  07F3               	movlw	0
  5224  06E9  3000               	subwf	(_numeroDePulsos+1),w
  5225  06EA  0273               	movlw	03Ch
  5226  06EB  303C               	skipnz
  5227  06EC  1903               	subwf	(_numeroDePulsos),w
  5228  06ED  0272               	skipc
  5229  06EE  1C03               	goto	u3661
  5230  06EF  2EF1               	goto	u3660
  5231  06F0  2EF2               u3661:
  5232  06F1                     	goto	l3825
  5233  06F1  2E8C               u3660:
  5234  06F2                     	goto	l3857
  5235  06F2  2EF3               	
  5236                           l348:	
  5237  06F3                     	line	368
  5238                           	
  5239                           l3857:	
  5240  06F3                     ;main.c: 363: }
  5241                           ;main.c: 367: }
  5242                           ;main.c: 368: estadoDoSinal = 0;
  5243                           	bsf	status, 5	;RP0=1, select bank1
  5244  06F3  1683               	bcf	status, 6	;RP1=0, select bank1
  5245  06F4  1303               	clrf	(_estadoDoSinal)^080h
  5246  06F5  01DF               	line	369
  5247                           	
  5248                           l3859:	
  5249  06F6                     ;main.c: 369: RD1 = 0;
  5250                           	bcf	status, 5	;RP0=0, select bank0
  5251  06F6  1283               	bcf	status, 6	;RP1=0, select bank0
  5252  06F7  1303               	bcf	(65/8),(65)&7	;volatile
  5253  06F8  1088               	line	370
  5254                           	
  5255                           l3861:	
  5256  06F9                     ;main.c: 370: if(pulsosSemResposta > 0 || flagTempoDeReacaoDoSensor == 1 || flagErrroDeA
                                 mplitude == 1){
  5257                           	bsf	status, 5	;RP0=1, select bank1
  5258  06F9  1683               	bcf	status, 6	;RP1=0, select bank1
  5259  06FA  1303               	movf	((_pulsosSemResposta)^080h),w
  5260  06FB  085C               iorwf	((_pulsosSemResposta+1)^080h),w
  5261  06FC  045D               	btfss	status,2
  5262  06FD  1D03               	goto	u3671
  5263  06FE  2F00               	goto	u3670
  5264  06FF  2F01               u3671:
  5265  0700                     	goto	l355
  5266  0700  2F0B               u3670:
  5267  0701                     	
  5268                           l3863:	
  5269  0701                     		decf	((_flagTempoDeReacaoDoSensor)),w
  5270  0701  0374               	btfsc	status,2
  5271  0702  1903               	goto	u3681
  5272  0703  2F05               	goto	u3680
  5273  0704  2F06               u3681:
  5274  0705                     	goto	l355
  5275  0705  2F0B               u3680:
  5276  0706                     	
  5277                           l3865:	
  5278  0706                     		decf	((_flagErrroDeAmplitude)^080h),w
  5279  0706  0362               	btfss	status,2
  5280  0707  1D03               	goto	u3691
  5281  0708  2F0A               	goto	u3690
  5282  0709  2F0B               u3691:
  5283  070A                     	goto	l353
  5284  070A  2F15               u3690:
  5285  070B                     	
  5286                           l355:	
  5287  070B                     	line	371
  5288                           ;main.c: 371: RD6 = 1;
  5289                           	bcf	status, 5	;RP0=0, select bank0
  5290  070B  1283               	bcf	status, 6	;RP1=0, select bank0
  5291  070C  1303               	bsf	(70/8),(70)&7	;volatile
  5292  070D  1708               	line	372
  5293                           ;main.c: 372: RD5 = 1;
  5294                           	bsf	(69/8),(69)&7	;volatile
  5295  070E  1688               	line	373
  5296                           ;main.c: 373: RD4 = 0;
  5297                           	bcf	(68/8),(68)&7	;volatile
  5298  070F  1208               	line	374
  5299                           ;main.c: 374: flagErroDeLeitura = 1;
  5300                           	bsf	status, 5	;RP0=1, select bank1
  5301  0710  1683               	bcf	status, 6	;RP1=0, select bank1
  5302  0711  1303               	clrf	(_flagErroDeLeitura)^080h
  5303  0712  01E7               	incf	(_flagErroDeLeitura)^080h,f
  5304  0713  0AE7               	line	375
  5305                           ;main.c: 375: }else{
  5306                           	goto	l357
  5307  0714  2F19               	
  5308                           l353:	
  5309  0715                     	line	376
  5310                           ;main.c: 376: RD6 = 0;
  5311                           	bcf	status, 5	;RP0=0, select bank0
  5312  0715  1283               	bcf	status, 6	;RP1=0, select bank0
  5313  0716  1303               	bcf	(70/8),(70)&7	;volatile
  5314  0717  1308               	goto	l357
  5315  0718  2F19               	line	380
  5316                           	
  5317                           l356:	
  5318  0719                     	line	382
  5319                           	
  5320                           l357:	
  5321  0719                     	return
  5322  0719  0008               	opt stack 0
  5323                           GLOBAL	__end_of_testaSaidaPulsadaEm20Volts
  5324                           	__end_of_testaSaidaPulsadaEm20Volts:
  5325  071A                     	signat	_testaSaidaPulsadaEm20Volts,89
  5326                           	global	_atualizaPainelDeLed
  5327                           
  5328 ;; *************** function _atualizaPainelDeLed *****************
  5329 ;; Defined at:
  5330 ;;		line 250 in file "src/main.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;		None
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;		None
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  1    wreg      void 
  5337 ;; Registers used:
  5338 ;;		wreg, status,2, status,0
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5344 ;;      Params:         0       0       0       0       0
  5345 ;;      Locals:         0       0       0       0       0
  5346 ;;      Temps:          0       0       0       0       0
  5347 ;;      Totals:         0       0       0       0       0
  5348 ;;Total ram usage:        0 bytes
  5349 ;; Hardware stack levels used:    1
  5350 ;; Hardware stack levels required when called:    2
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_executaTesteDosSensores
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5358                           	line	250
  5359                           global __ptext18
  5360                           __ptext18:	;psect for function _atualizaPainelDeLed
  5361  0A1E                     psect	text18
  5362                           	file	"src/main.c"
  5363                           	line	250
  5364                           	global	__size_of_atualizaPainelDeLed
  5365                           	__size_of_atualizaPainelDeLed	equ	__end_of_atualizaPainelDeLed-_atualizaPainelDeLed
  5366  0012                     	
  5367                           _atualizaPainelDeLed:	
  5368  0A1E                     ;incstack = 0
  5369                           	opt	stack 4
  5370                           ; Regs used in _atualizaPainelDeLed: [wreg+status,2+status,0]
  5371                           	line	251
  5372                           	
  5373                           l3867:	
  5374  0A1E                     ;main.c: 251: if(flagErroDeLeitura == 0){
  5375                           	bsf	status, 5	;RP0=1, select bank1
  5376  0A1E  1683               	bcf	status, 6	;RP1=0, select bank1
  5377  0A1F  1303               	movf	((_flagErroDeLeitura)^080h),w
  5378  0A20  0867               	btfss	status,2
  5379  0A21  1D03               	goto	u3701
  5380  0A22  2A24               	goto	u3700
  5381  0A23  2A25               u3701:
  5382  0A24                     	goto	l310
  5383  0A24  2A2A               u3700:
  5384  0A25                     	line	252
  5385                           	
  5386                           l3869:	
  5387  0A25                     ;main.c: 252: RD4 = 1;
  5388                           	bcf	status, 5	;RP0=0, select bank0
  5389  0A25  1283               	bcf	status, 6	;RP1=0, select bank0
  5390  0A26  1303               	bsf	(68/8),(68)&7	;volatile
  5391  0A27  1608               	line	253
  5392                           ;main.c: 253: RD5 = 0;
  5393                           	bcf	(69/8),(69)&7	;volatile
  5394  0A28  1288               	line	254
  5395                           ;main.c: 254: }else{
  5396                           	goto	l312
  5397  0A29  2A2F               	
  5398                           l310:	
  5399  0A2A                     	line	255
  5400                           ;main.c: 255: RD4 = 0;
  5401                           	bcf	status, 5	;RP0=0, select bank0
  5402  0A2A  1283               	bcf	status, 6	;RP1=0, select bank0
  5403  0A2B  1303               	bcf	(68/8),(68)&7	;volatile
  5404  0A2C  1208               	line	256
  5405                           ;main.c: 256: RD5 = 1;
  5406                           	bsf	(69/8),(69)&7	;volatile
  5407  0A2D  1688               	goto	l312
  5408  0A2E  2A2F               	line	257
  5409                           	
  5410                           l311:	
  5411  0A2F                     	line	258
  5412                           	
  5413                           l312:	
  5414  0A2F                     	return
  5415  0A2F  0008               	opt stack 0
  5416                           GLOBAL	__end_of_atualizaPainelDeLed
  5417                           	__end_of_atualizaPainelDeLed:
  5418  0A30                     	signat	_atualizaPainelDeLed,89
  5419                           	global	_entraEmModoAjuste
  5420                           
  5421 ;; *************** function _entraEmModoAjuste *****************
  5422 ;; Defined at:
  5423 ;;		line 1012 in file "src/main.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5437 ;;      Params:         0       0       0       0       0
  5438 ;;      Locals:         0       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0
  5440 ;;      Totals:         0       0       0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    6
  5444 ;; This function calls:
  5445 ;;		_checaBotaoAjustes
  5446 ;;		_delay_ms
  5447 ;;		_desligaModuloBoost
  5448 ;;		_ligaModuloBoost
  5449 ;;		_modoTeste20
  5450 ;;		_modoTeste9
  5451 ;;		_setaSaidaEm20Volts
  5452 ;;		_setaSaidaEm9Volts
  5453 ;; This function is called by:
  5454 ;;		_main
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5458                           	line	1012
  5459                           global __ptext19
  5460                           __ptext19:	;psect for function _entraEmModoAjuste
  5461  0C99                     psect	text19
  5462                           	file	"src/main.c"
  5463                           	line	1012
  5464                           	global	__size_of_entraEmModoAjuste
  5465                           	__size_of_entraEmModoAjuste	equ	__end_of_entraEmModoAjuste-_entraEmModoAjuste
  5466  004C                     	
  5467                           _entraEmModoAjuste:	
  5468  0C99                     ;incstack = 0
  5469                           	opt	stack 1
  5470                           ; Regs used in _entraEmModoAjuste: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]

  5471                           	line	1014
  5472                           	
  5473                           l4065:	
  5474  0C99                     ;main.c: 1014: ligaModuloBoost();
  5475                           	fcall	_ligaModuloBoost
  5476  0C99  120A  118A  2003  120A  158A  	line	1015
  5477                           ;main.c: 1015: setaSaidaEm9Volts();
  5478                           	fcall	_setaSaidaEm9Volts
  5479  0C9E  120A  158A  2166  120A  158A  	line	1016
  5480                           	
  5481                           l4067:	
  5482  0CA3                     ;main.c: 1016: RD7 = 1;
  5483                           	bcf	status, 5	;RP0=0, select bank0
  5484  0CA3  1283               	bcf	status, 6	;RP1=0, select bank0
  5485  0CA4  1303               	bsf	(71/8),(71)&7	;volatile
  5486  0CA5  1788               	line	1017
  5487                           ;main.c: 1017: while(checaBotaoAjustes() == 0){
  5488                           	goto	l4071
  5489  0CA6  2CAD               	
  5490                           l527:	
  5491  0CA7                     	line	1018
  5492                           	
  5493                           l4069:	
  5494  0CA7                     ;main.c: 1018: modoTeste9();
  5495                           	fcall	_modoTeste9
  5496  0CA7  120A  118A  271A  120A  158A  	goto	l4071
  5497  0CAC  2CAD               	line	1021
  5498                           	
  5499                           l526:	
  5500  0CAD                     	line	1017
  5501                           	
  5502                           l4071:	
  5503  0CAD                     	fcall	_checaBotaoAjustes
  5504  0CAD  120A  158A  22D6  120A  158A  	xorlw	0
  5505  0CB2  3A00               	skipnz
  5506  0CB3  1903               	goto	u3871
  5507  0CB4  2CB6               	goto	u3870
  5508  0CB5  2CB7               u3871:
  5509  0CB6                     	goto	l4069
  5510  0CB6  2CA7               u3870:
  5511  0CB7                     	goto	l4073
  5512  0CB7  2CB8               	
  5513                           l528:	
  5514  0CB8                     	line	1023
  5515                           	
  5516                           l4073:	
  5517  0CB8                     ;main.c: 1021: }
  5518                           ;main.c: 1023: setaSaidaEm20Volts();
  5519                           	fcall	_setaSaidaEm20Volts
  5520  0CB8  120A  158A  2161  120A  158A  	line	1024
  5521                           	
  5522                           l4075:	
  5523  0CBD                     ;main.c: 1024: RD7 = 0;
  5524                           	bcf	status, 5	;RP0=0, select bank0
  5525  0CBD  1283               	bcf	status, 6	;RP1=0, select bank0
  5526  0CBE  1303               	bcf	(71/8),(71)&7	;volatile
  5527  0CBF  1388               	line	1025
  5528                           	
  5529                           l4077:	
  5530  0CC0                     ;main.c: 1025: RD6 = 1;
  5531                           	bsf	(70/8),(70)&7	;volatile
  5532  0CC0  1708               	line	1026
  5533                           	
  5534                           l4079:	
  5535  0CC1                     ;main.c: 1026: delay_ms(1000);
  5536                           	movlw	0E8h
  5537  0CC1  30E8               	movwf	(delay_ms@valor)
  5538  0CC2  00A0               	movlw	03h
  5539  0CC3  3003               	movwf	((delay_ms@valor))+1
  5540  0CC4  00A1               	fcall	_delay_ms
  5541  0CC5  120A  118A  27D9  120A  158A  	line	1027
  5542                           ;main.c: 1027: while(checaBotaoAjustes() == 0){
  5543                           	goto	l4083
  5544  0CCA  2CD1               	
  5545                           l530:	
  5546  0CCB                     	line	1028
  5547                           	
  5548                           l4081:	
  5549  0CCB                     ;main.c: 1028: modoTeste20();
  5550                           	fcall	_modoTeste20
  5551  0CCB  120A  158A  2741  120A  158A  	goto	l4083
  5552  0CD0  2CD1               	line	1031
  5553                           	
  5554                           l529:	
  5555  0CD1                     	line	1027
  5556                           	
  5557                           l4083:	
  5558  0CD1                     	fcall	_checaBotaoAjustes
  5559  0CD1  120A  158A  22D6  120A  158A  	xorlw	0
  5560  0CD6  3A00               	skipnz
  5561  0CD7  1903               	goto	u3881
  5562  0CD8  2CDA               	goto	u3880
  5563  0CD9  2CDB               u3881:
  5564  0CDA                     	goto	l4081
  5565  0CDA  2CCB               u3880:
  5566  0CDB                     	
  5567                           l531:	
  5568  0CDB                     	line	1033
  5569                           ;main.c: 1031: }
  5570                           ;main.c: 1033: RD7 = 0;
  5571                           	bcf	status, 5	;RP0=0, select bank0
  5572  0CDB  1283               	bcf	status, 6	;RP1=0, select bank0
  5573  0CDC  1303               	bcf	(71/8),(71)&7	;volatile
  5574  0CDD  1388               	line	1034
  5575                           ;main.c: 1034: RD6 = 0;
  5576                           	bcf	(70/8),(70)&7	;volatile
  5577  0CDE  1308               	line	1035
  5578                           	
  5579                           l4085:	
  5580  0CDF                     ;main.c: 1035: desligaModuloBoost();
  5581                           	fcall	_desligaModuloBoost
  5582  0CDF  120A  158A  2158  120A  158A  	line	1036
  5583                           	
  5584                           l532:	
  5585  0CE4                     	return
  5586  0CE4  0008               	opt stack 0
  5587                           GLOBAL	__end_of_entraEmModoAjuste
  5588                           	__end_of_entraEmModoAjuste:
  5589  0CE5                     	signat	_entraEmModoAjuste,89
  5590                           	global	_modoTeste9
  5591                           
  5592 ;; *************** function _modoTeste9 *****************
  5593 ;; Defined at:
  5594 ;;		line 1038 in file "src/main.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      void 
  5601 ;; Registers used:
  5602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5608 ;;      Params:         0       0       0       0       0
  5609 ;;      Locals:         0       0       0       0       0
  5610 ;;      Temps:          0       0       0       0       0
  5611 ;;      Totals:         0       0       0       0       0
  5612 ;;Total ram usage:        0 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:    5
  5615 ;; This function calls:
  5616 ;;		_delay_ms
  5617 ;;		_exibeQuantidadeDeSensores
  5618 ;;		_obtemQuantidadeDeSensores
  5619 ;;		_setaSaidaEm9Volts
  5620 ;; This function is called by:
  5621 ;;		_entraEmModoAjuste
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  5625                           	line	1038
  5626                           global __ptext20
  5627                           __ptext20:	;psect for function _modoTeste9
  5628  071A                     psect	text20
  5629                           	file	"src/main.c"
  5630                           	line	1038
  5631                           	global	__size_of_modoTeste9
  5632                           	__size_of_modoTeste9	equ	__end_of_modoTeste9-_modoTeste9
  5633  00BF                     	
  5634                           _modoTeste9:	
  5635  071A                     ;incstack = 0
  5636                           	opt	stack 1
  5637                           ; Regs used in _modoTeste9: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5638                           	line	1040
  5639                           	
  5640                           l3875:	
  5641  071A                     ;main.c: 1040: RD1 = 0;
  5642                           	bcf	status, 5	;RP0=0, select bank0
  5643  071A  1283               	bcf	status, 6	;RP1=0, select bank0
  5644  071B  1303               	bcf	(65/8),(65)&7	;volatile
  5645  071C  1088               	line	1041
  5646                           	
  5647                           l3877:	
  5648  071D                     ;main.c: 1041: setaSaidaEm9Volts();
  5649                           	fcall	_setaSaidaEm9Volts
  5650  071D  120A  158A  2166  120A  118A  	line	1042
  5651                           	
  5652                           l3879:	
  5653  0722                     ;main.c: 1042: delay_ms(100);
  5654                           	movlw	064h
  5655  0722  3064               	bcf	status, 5	;RP0=0, select bank0
  5656  0723  1283               	bcf	status, 6	;RP1=0, select bank0
  5657  0724  1303               	movwf	(delay_ms@valor)
  5658  0725  00A0               	movlw	0
  5659  0726  3000               	movwf	((delay_ms@valor))+1
  5660  0727  00A1               	fcall	_delay_ms
  5661  0728  120A  118A  27D9  120A  118A  	line	1043
  5662                           	
  5663                           l3881:	
  5664  072D                     ;main.c: 1043: pulsosSemResposta = 0;
  5665                           	bsf	status, 5	;RP0=1, select bank1
  5666  072D  1683               	bcf	status, 6	;RP1=0, select bank1
  5667  072E  1303               	clrf	(_pulsosSemResposta)^080h
  5668  072F  01DC               	clrf	(_pulsosSemResposta+1)^080h
  5669  0730  01DD               	line	1044
  5670                           	
  5671                           l3883:	
  5672  0731                     ;main.c: 1044: falhaPulsoDeEntrada = 0;
  5673                           	clrf	(_falhaPulsoDeEntrada)^080h
  5674  0731  01E5               	line	1045
  5675                           	
  5676                           l3885:	
  5677  0732                     ;main.c: 1045: respostaOk = 0;
  5678                           	clrf	(_respostaOk)^080h
  5679  0732  01E6               	line	1046
  5680                           	
  5681                           l3887:	
  5682  0733                     ;main.c: 1046: tempoDeReacaoDoSensor = 0;
  5683                           	clrf	(_tempoDeReacaoDoSensor)
  5684  0733  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  5685  0734  01F1               	line	1047
  5686                           	
  5687                           l3889:	
  5688  0735                     ;main.c: 1047: flagTempoDeReacaoDoSensor = 0;
  5689                           	clrf	(_flagTempoDeReacaoDoSensor)
  5690  0735  01F4               	line	1048
  5691                           	
  5692                           l3891:	
  5693  0736                     ;main.c: 1048: numeroDePulsos = 0;
  5694                           	clrf	(_numeroDePulsos)
  5695  0736  01F2               	clrf	(_numeroDePulsos+1)
  5696  0737  01F3               	line	1049
  5697                           	
  5698                           l3893:	
  5699  0738                     ;main.c: 1049: for(numeroDePulsos = 0; numeroDePulsos < (10); numeroDePulsos++){
  5700                           	clrf	(_numeroDePulsos)
  5701  0738  01F2               	clrf	(_numeroDePulsos+1)
  5702  0739  01F3               	
  5703                           l3895:	
  5704  073A                     	movlw	0
  5705  073A  3000               	subwf	(_numeroDePulsos+1),w
  5706  073B  0273               	movlw	0Ah
  5707  073C  300A               	skipnz
  5708  073D  1903               	subwf	(_numeroDePulsos),w
  5709  073E  0272               	skipc
  5710  073F  1C03               	goto	u3711
  5711  0740  2F42               	goto	u3710
  5712  0741  2F43               u3711:
  5713  0742                     	goto	l3899
  5714  0742  2F45               u3710:
  5715  0743                     	goto	l3939
  5716  0743  2FBB               	
  5717                           l3897:	
  5718  0744                     	goto	l3939
  5719  0744  2FBB               	
  5720                           l535:	
  5721  0745                     	line	1050
  5722                           	
  5723                           l3899:	
  5724  0745                     ;main.c: 1050: pulsosSemResposta = 1;
  5725                           	movlw	01h
  5726  0745  3001               	bsf	status, 5	;RP0=1, select bank1
  5727  0746  1683               	bcf	status, 6	;RP1=0, select bank1
  5728  0747  1303               	movwf	(_pulsosSemResposta)^080h
  5729  0748  00DC               	movlw	0
  5730  0749  3000               	movwf	((_pulsosSemResposta)^080h)+1
  5731  074A  00DD               	line	1051
  5732                           	
  5733                           l3901:	
  5734  074B                     ;main.c: 1051: OPTION_REGbits.INTEDG = 1;
  5735                           	bsf	(129)^080h,6	;volatile
  5736  074B  1701               	line	1052
  5737                           	
  5738                           l3903:	
  5739  074C                     ;main.c: 1052: estadoDoSinal = 1;
  5740                           	clrf	(_estadoDoSinal)^080h
  5741  074C  01DF               	incf	(_estadoDoSinal)^080h,f
  5742  074D  0ADF               	line	1053
  5743                           	
  5744                           l3905:	
  5745  074E                     ;main.c: 1053: RD1 = 1;
  5746                           	bcf	status, 5	;RP0=0, select bank0
  5747  074E  1283               	bcf	status, 6	;RP1=0, select bank0
  5748  074F  1303               	bsf	(65/8),(65)&7	;volatile
  5749  0750  1488               	line	1054
  5750                           	
  5751                           l3907:	
  5752  0751                     ;main.c: 1054: for(tempoDeReacaoDoSensor = 0; tempoDeReacaoDoSensor < 250; tempoDeReacao
                                 DoSensor++){
  5753                           	clrf	(_tempoDeReacaoDoSensor)
  5754  0751  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  5755  0752  01F1               	
  5756                           l3909:	
  5757  0753                     	movlw	0
  5758  0753  3000               	subwf	(_tempoDeReacaoDoSensor+1),w
  5759  0754  0271               	movlw	0FAh
  5760  0755  30FA               	skipnz
  5761  0756  1903               	subwf	(_tempoDeReacaoDoSensor),w
  5762  0757  0270               	skipc
  5763  0758  1C03               	goto	u3721
  5764  0759  2F5B               	goto	u3720
  5765  075A  2F5C               u3721:
  5766  075B                     	goto	l537
  5767  075B  2F5E               u3720:
  5768  075C                     	goto	l3915
  5769  075C  2F71               	
  5770                           l3911:	
  5771  075D                     	goto	l3915
  5772  075D  2F71               	
  5773                           l537:	
  5774  075E                     	line	1055
  5775                           ;main.c: 1055: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5776                           		opt asmopt_push
  5777                           	opt asmopt_off
  5778                           	nop2	;2 cycle nop
  5779  075E  2F5F               	nop2	;2 cycle nop
  5780  075F  2F60               	nop
  5781  0760  0000               	opt asmopt_pop
  5782                           
  5783                           	line	1054
  5784                           	
  5785                           l3913:	
  5786  0761                     	movlw	01h
  5787  0761  3001               	addwf	(_tempoDeReacaoDoSensor),f
  5788  0762  07F0               	skipnc
  5789  0763  1803               	incf	(_tempoDeReacaoDoSensor+1),f
  5790  0764  0AF1               	movlw	0
  5791  0765  3000               	addwf	(_tempoDeReacaoDoSensor+1),f
  5792  0766  07F1               	movlw	0
  5793  0767  3000               	subwf	(_tempoDeReacaoDoSensor+1),w
  5794  0768  0271               	movlw	0FAh
  5795  0769  30FA               	skipnz
  5796  076A  1903               	subwf	(_tempoDeReacaoDoSensor),w
  5797  076B  0270               	skipc
  5798  076C  1C03               	goto	u3731
  5799  076D  2F6F               	goto	u3730
  5800  076E  2F70               u3731:
  5801  076F                     	goto	l537
  5802  076F  2F5E               u3730:
  5803  0770                     	goto	l3915
  5804  0770  2F71               	
  5805                           l538:	
  5806  0771                     	line	1057
  5807                           	
  5808                           l3915:	
  5809  0771                     ;main.c: 1056: }
  5810                           ;main.c: 1057: pulsosSemResposta = 1;
  5811                           	movlw	01h
  5812  0771  3001               	bsf	status, 5	;RP0=1, select bank1
  5813  0772  1683               	bcf	status, 6	;RP1=0, select bank1
  5814  0773  1303               	movwf	(_pulsosSemResposta)^080h
  5815  0774  00DC               	movlw	0
  5816  0775  3000               	movwf	((_pulsosSemResposta)^080h)+1
  5817  0776  00DD               	line	1058
  5818                           	
  5819                           l3917:	
  5820  0777                     ;main.c: 1058: OPTION_REGbits.INTEDG = 0;
  5821                           	bcf	(129)^080h,6	;volatile
  5822  0777  1301               	line	1059
  5823                           	
  5824                           l3919:	
  5825  0778                     ;main.c: 1059: estadoDoSinal = 0;
  5826                           	clrf	(_estadoDoSinal)^080h
  5827  0778  01DF               	line	1060
  5828                           	
  5829                           l3921:	
  5830  0779                     ;main.c: 1060: RD1 = 0;
  5831                           	bcf	status, 5	;RP0=0, select bank0
  5832  0779  1283               	bcf	status, 6	;RP1=0, select bank0
  5833  077A  1303               	bcf	(65/8),(65)&7	;volatile
  5834  077B  1088               	line	1061
  5835                           	
  5836                           l3923:	
  5837  077C                     ;main.c: 1061: for(tempoDeReacaoDoSensor = 0; tempoDeReacaoDoSensor < 7000; tempoDeReaca
                                 oDoSensor++){
  5838                           	clrf	(_tempoDeReacaoDoSensor)
  5839  077C  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  5840  077D  01F1               	movlw	01Bh
  5841  077E  301B               	subwf	(_tempoDeReacaoDoSensor+1),w
  5842  077F  0271               	movlw	058h
  5843  0780  3058               	skipnz
  5844  0781  1903               	subwf	(_tempoDeReacaoDoSensor),w
  5845  0782  0270               	skipc
  5846  0783  1C03               	goto	u3741
  5847  0784  2F86               	goto	u3740
  5848  0785  2F87               u3741:
  5849  0786                     	goto	l539
  5850  0786  2F89               u3740:
  5851  0787                     	goto	l3929
  5852  0787  2F9C               	
  5853                           l3925:	
  5854  0788                     	goto	l3929
  5855  0788  2F9C               	
  5856                           l539:	
  5857  0789                     	line	1062
  5858                           ;main.c: 1062: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5859                           		opt asmopt_push
  5860                           	opt asmopt_off
  5861                           	nop2	;2 cycle nop
  5862  0789  2F8A               	nop2	;2 cycle nop
  5863  078A  2F8B               	nop
  5864  078B  0000               	opt asmopt_pop
  5865                           
  5866                           	line	1061
  5867                           	
  5868                           l3927:	
  5869  078C                     	movlw	01h
  5870  078C  3001               	addwf	(_tempoDeReacaoDoSensor),f
  5871  078D  07F0               	skipnc
  5872  078E  1803               	incf	(_tempoDeReacaoDoSensor+1),f
  5873  078F  0AF1               	movlw	0
  5874  0790  3000               	addwf	(_tempoDeReacaoDoSensor+1),f
  5875  0791  07F1               	movlw	01Bh
  5876  0792  301B               	subwf	(_tempoDeReacaoDoSensor+1),w
  5877  0793  0271               	movlw	058h
  5878  0794  3058               	skipnz
  5879  0795  1903               	subwf	(_tempoDeReacaoDoSensor),w
  5880  0796  0270               	skipc
  5881  0797  1C03               	goto	u3751
  5882  0798  2F9A               	goto	u3750
  5883  0799  2F9B               u3751:
  5884  079A                     	goto	l539
  5885  079A  2F89               u3750:
  5886  079B                     	goto	l3929
  5887  079B  2F9C               	
  5888                           l540:	
  5889  079C                     	line	1064
  5890                           	
  5891                           l3929:	
  5892  079C                     ;main.c: 1063: }
  5893                           ;main.c: 1064: obtemQuantidadeDeSensores();
  5894                           	fcall	_obtemQuantidadeDeSensores
  5895  079C  120A  118A  2249  120A  118A  	line	1065
  5896                           	
  5897                           l3931:	
  5898  07A1                     ;main.c: 1065: exibeQuantidadeDeSensores(numeroDeSensores);
  5899                           	movf	(_numeroDeSensores),w
  5900  07A1  0875               	fcall	_exibeQuantidadeDeSensores
  5901  07A2  120A  158A  258F  120A  118A  	line	1066
  5902                           	
  5903                           l3933:	
  5904  07A7                     ;main.c: 1066: RD7 = !RD7;
  5905                           	movlw	1<<((71)&7)
  5906  07A7  3080               	bcf	status, 5	;RP0=0, select bank0
  5907  07A8  1283               	bcf	status, 6	;RP1=0, select bank0
  5908  07A9  1303               	xorwf	((71)/8),f
  5909  07AA  0688               	line	1049
  5910                           	
  5911                           l3935:	
  5912  07AB                     	movlw	01h
  5913  07AB  3001               	addwf	(_numeroDePulsos),f
  5914  07AC  07F2               	skipnc
  5915  07AD  1803               	incf	(_numeroDePulsos+1),f
  5916  07AE  0AF3               	movlw	0
  5917  07AF  3000               	addwf	(_numeroDePulsos+1),f
  5918  07B0  07F3               	
  5919                           l3937:	
  5920  07B1                     	movlw	0
  5921  07B1  3000               	subwf	(_numeroDePulsos+1),w
  5922  07B2  0273               	movlw	0Ah
  5923  07B3  300A               	skipnz
  5924  07B4  1903               	subwf	(_numeroDePulsos),w
  5925  07B5  0272               	skipc
  5926  07B6  1C03               	goto	u3761
  5927  07B7  2FB9               	goto	u3760
  5928  07B8  2FBA               u3761:
  5929  07B9                     	goto	l3899
  5930  07B9  2F45               u3760:
  5931  07BA                     	goto	l3939
  5932  07BA  2FBB               	
  5933                           l536:	
  5934  07BB                     	line	1068
  5935                           	
  5936                           l3939:	
  5937  07BB                     ;main.c: 1067: }
  5938                           ;main.c: 1068: if(pulsosSemResposta > 0 || flagTempoDeReacaoDoSensor == 1){
  5939                           	bsf	status, 5	;RP0=1, select bank1
  5940  07BB  1683               	bcf	status, 6	;RP1=0, select bank1
  5941  07BC  1303               	movf	((_pulsosSemResposta)^080h),w
  5942  07BD  085C               iorwf	((_pulsosSemResposta+1)^080h),w
  5943  07BE  045D               	btfss	status,2
  5944  07BF  1D03               	goto	u3771
  5945  07C0  2FC2               	goto	u3770
  5946  07C1  2FC3               u3771:
  5947  07C2                     	goto	l543
  5948  07C2  2FC8               u3770:
  5949  07C3                     	
  5950                           l3941:	
  5951  07C3                     		decf	((_flagTempoDeReacaoDoSensor)),w
  5952  07C3  0374               	btfss	status,2
  5953  07C4  1D03               	goto	u3781
  5954  07C5  2FC7               	goto	u3780
  5955  07C6  2FC8               u3781:
  5956  07C7                     	goto	l541
  5957  07C7  2FD2               u3780:
  5958  07C8                     	
  5959                           l543:	
  5960  07C8                     	line	1069
  5961                           ;main.c: 1069: RD7 = 1;
  5962                           	bcf	status, 5	;RP0=0, select bank0
  5963  07C8  1283               	bcf	status, 6	;RP1=0, select bank0
  5964  07C9  1303               	bsf	(71/8),(71)&7	;volatile
  5965  07CA  1788               	line	1070
  5966                           ;main.c: 1070: RD5 = 1;
  5967                           	bsf	(69/8),(69)&7	;volatile
  5968  07CB  1688               	line	1071
  5969                           ;main.c: 1071: RD4 = 0;
  5970                           	bcf	(68/8),(68)&7	;volatile
  5971  07CC  1208               	line	1072
  5972                           ;main.c: 1072: flagErroDeLeitura = 1;
  5973                           	bsf	status, 5	;RP0=1, select bank1
  5974  07CD  1683               	bcf	status, 6	;RP1=0, select bank1
  5975  07CE  1303               	clrf	(_flagErroDeLeitura)^080h
  5976  07CF  01E7               	incf	(_flagErroDeLeitura)^080h,f
  5977  07D0  0AE7               	line	1073
  5978                           ;main.c: 1073: }else{
  5979                           	goto	l545
  5980  07D1  2FD8               	
  5981                           l541:	
  5982  07D2                     	line	1074
  5983                           ;main.c: 1074: RD7 = 0;
  5984                           	bcf	status, 5	;RP0=0, select bank0
  5985  07D2  1283               	bcf	status, 6	;RP1=0, select bank0
  5986  07D3  1303               	bcf	(71/8),(71)&7	;volatile
  5987  07D4  1388               	line	1075
  5988                           ;main.c: 1075: RD5 = 0;
  5989                           	bcf	(69/8),(69)&7	;volatile
  5990  07D5  1288               	line	1076
  5991                           ;main.c: 1076: RD4 = 1;
  5992                           	bsf	(68/8),(68)&7	;volatile
  5993  07D6  1608               	goto	l545
  5994  07D7  2FD8               	line	1077
  5995                           	
  5996                           l544:	
  5997  07D8                     	line	1079
  5998                           	
  5999                           l545:	
  6000  07D8                     	return
  6001  07D8  0008               	opt stack 0
  6002                           GLOBAL	__end_of_modoTeste9
  6003                           	__end_of_modoTeste9:
  6004  07D9                     	signat	_modoTeste9,89
  6005                           	global	_setaSaidaEm9Volts
  6006                           
  6007 ;; *************** function _setaSaidaEm9Volts *****************
  6008 ;; Defined at:
  6009 ;;		line 269 in file "src/main.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		None
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6023 ;;      Params:         0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    2
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_main
  6034 ;;		_testaSaidaPulsadaEm9Volts
  6035 ;;		_entraEmModoAjuste
  6036 ;;		_modoTeste9
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6040                           	line	269
  6041                           global __ptext21
  6042                           __ptext21:	;psect for function _setaSaidaEm9Volts
  6043  0966                     psect	text21
  6044                           	file	"src/main.c"
  6045                           	line	269
  6046                           	global	__size_of_setaSaidaEm9Volts
  6047                           	__size_of_setaSaidaEm9Volts	equ	__end_of_setaSaidaEm9Volts-_setaSaidaEm9Volts
  6048  0005                     	
  6049                           _setaSaidaEm9Volts:	
  6050  0966                     ;incstack = 0
  6051                           	opt	stack 5
  6052                           ; Regs used in _setaSaidaEm9Volts: []
  6053                           	line	270
  6054                           	
  6055                           l3589:	
  6056  0966                     ;main.c: 270: RD2 = 0;
  6057                           	bcf	status, 5	;RP0=0, select bank0
  6058  0966  1283               	bcf	status, 6	;RP1=0, select bank0
  6059  0967  1303               	bcf	(66/8),(66)&7	;volatile
  6060  0968  1108               	line	271
  6061                           ;main.c: 271: RD0 = 1;
  6062                           	bsf	(64/8),(64)&7	;volatile
  6063  0969  1408               	line	272
  6064                           	
  6065                           l321:	
  6066  096A                     	return
  6067  096A  0008               	opt stack 0
  6068                           GLOBAL	__end_of_setaSaidaEm9Volts
  6069                           	__end_of_setaSaidaEm9Volts:
  6070  096B                     	signat	_setaSaidaEm9Volts,89
  6071                           	global	_modoTeste20
  6072                           
  6073 ;; *************** function _modoTeste20 *****************
  6074 ;; Defined at:
  6075 ;;		line 1081 in file "src/main.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6089 ;;      Params:         0       0       0       0       0
  6090 ;;      Locals:         0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0
  6092 ;;      Totals:         0       0       0       0       0
  6093 ;;Total ram usage:        0 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    5
  6096 ;; This function calls:
  6097 ;;		_delay_ms
  6098 ;;		_exibeQuantidadeDeSensores
  6099 ;;		_obtemQuantidadeDeSensores
  6100 ;;		_setaSaidaEm20Volts
  6101 ;; This function is called by:
  6102 ;;		_entraEmModoAjuste
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6106                           	line	1081
  6107                           global __ptext22
  6108                           __ptext22:	;psect for function _modoTeste20
  6109  0F41                     psect	text22
  6110                           	file	"src/main.c"
  6111                           	line	1081
  6112                           	global	__size_of_modoTeste20
  6113                           	__size_of_modoTeste20	equ	__end_of_modoTeste20-_modoTeste20
  6114  00BF                     	
  6115                           _modoTeste20:	
  6116  0F41                     ;incstack = 0
  6117                           	opt	stack 1
  6118                           ; Regs used in _modoTeste20: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6119                           	line	1083
  6120                           	
  6121                           l3943:	
  6122  0F41                     ;main.c: 1083: RD1 = 0;
  6123                           	bcf	status, 5	;RP0=0, select bank0
  6124  0F41  1283               	bcf	status, 6	;RP1=0, select bank0
  6125  0F42  1303               	bcf	(65/8),(65)&7	;volatile
  6126  0F43  1088               	line	1084
  6127                           	
  6128                           l3945:	
  6129  0F44                     ;main.c: 1084: setaSaidaEm20Volts();
  6130                           	fcall	_setaSaidaEm20Volts
  6131  0F44  120A  158A  2161  120A  158A  	line	1085
  6132                           	
  6133                           l3947:	
  6134  0F49                     ;main.c: 1085: delay_ms(100);
  6135                           	movlw	064h
  6136  0F49  3064               	bcf	status, 5	;RP0=0, select bank0
  6137  0F4A  1283               	bcf	status, 6	;RP1=0, select bank0
  6138  0F4B  1303               	movwf	(delay_ms@valor)
  6139  0F4C  00A0               	movlw	0
  6140  0F4D  3000               	movwf	((delay_ms@valor))+1
  6141  0F4E  00A1               	fcall	_delay_ms
  6142  0F4F  120A  118A  27D9  120A  158A  	line	1086
  6143                           	
  6144                           l3949:	
  6145  0F54                     ;main.c: 1086: pulsosSemResposta = 0;
  6146                           	bsf	status, 5	;RP0=1, select bank1
  6147  0F54  1683               	bcf	status, 6	;RP1=0, select bank1
  6148  0F55  1303               	clrf	(_pulsosSemResposta)^080h
  6149  0F56  01DC               	clrf	(_pulsosSemResposta+1)^080h
  6150  0F57  01DD               	line	1087
  6151                           	
  6152                           l3951:	
  6153  0F58                     ;main.c: 1087: falhaPulsoDeEntrada = 0;
  6154                           	clrf	(_falhaPulsoDeEntrada)^080h
  6155  0F58  01E5               	line	1088
  6156                           	
  6157                           l3953:	
  6158  0F59                     ;main.c: 1088: respostaOk = 0;
  6159                           	clrf	(_respostaOk)^080h
  6160  0F59  01E6               	line	1089
  6161                           	
  6162                           l3955:	
  6163  0F5A                     ;main.c: 1089: tempoDeReacaoDoSensor = 0;
  6164                           	clrf	(_tempoDeReacaoDoSensor)
  6165  0F5A  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  6166  0F5B  01F1               	line	1090
  6167                           	
  6168                           l3957:	
  6169  0F5C                     ;main.c: 1090: flagTempoDeReacaoDoSensor = 0;
  6170                           	clrf	(_flagTempoDeReacaoDoSensor)
  6171  0F5C  01F4               	line	1091
  6172                           	
  6173                           l3959:	
  6174  0F5D                     ;main.c: 1091: numeroDePulsos = 0;
  6175                           	clrf	(_numeroDePulsos)
  6176  0F5D  01F2               	clrf	(_numeroDePulsos+1)
  6177  0F5E  01F3               	line	1092
  6178                           	
  6179                           l3961:	
  6180  0F5F                     ;main.c: 1092: for(numeroDePulsos = 0; numeroDePulsos < 10 + 100; numeroDePulsos++){
  6181                           	clrf	(_numeroDePulsos)
  6182  0F5F  01F2               	clrf	(_numeroDePulsos+1)
  6183  0F60  01F3               	
  6184                           l3963:	
  6185  0F61                     	movlw	0
  6186  0F61  3000               	subwf	(_numeroDePulsos+1),w
  6187  0F62  0273               	movlw	06Eh
  6188  0F63  306E               	skipnz
  6189  0F64  1903               	subwf	(_numeroDePulsos),w
  6190  0F65  0272               	skipc
  6191  0F66  1C03               	goto	u3791
  6192  0F67  2F69               	goto	u3790
  6193  0F68  2F6A               u3791:
  6194  0F69                     	goto	l3967
  6195  0F69  2F6C               u3790:
  6196  0F6A                     	goto	l4007
  6197  0F6A  2FE2               	
  6198                           l3965:	
  6199  0F6B                     	goto	l4007
  6200  0F6B  2FE2               	
  6201                           l548:	
  6202  0F6C                     	line	1093
  6203                           	
  6204                           l3967:	
  6205  0F6C                     ;main.c: 1093: pulsosSemResposta = 1;
  6206                           	movlw	01h
  6207  0F6C  3001               	bsf	status, 5	;RP0=1, select bank1
  6208  0F6D  1683               	bcf	status, 6	;RP1=0, select bank1
  6209  0F6E  1303               	movwf	(_pulsosSemResposta)^080h
  6210  0F6F  00DC               	movlw	0
  6211  0F70  3000               	movwf	((_pulsosSemResposta)^080h)+1
  6212  0F71  00DD               	line	1094
  6213                           	
  6214                           l3969:	
  6215  0F72                     ;main.c: 1094: OPTION_REGbits.INTEDG = 1;
  6216                           	bsf	(129)^080h,6	;volatile
  6217  0F72  1701               	line	1095
  6218                           	
  6219                           l3971:	
  6220  0F73                     ;main.c: 1095: estadoDoSinal = 1;
  6221                           	clrf	(_estadoDoSinal)^080h
  6222  0F73  01DF               	incf	(_estadoDoSinal)^080h,f
  6223  0F74  0ADF               	line	1096
  6224                           	
  6225                           l3973:	
  6226  0F75                     ;main.c: 1096: RD1 = 1;
  6227                           	bcf	status, 5	;RP0=0, select bank0
  6228  0F75  1283               	bcf	status, 6	;RP1=0, select bank0
  6229  0F76  1303               	bsf	(65/8),(65)&7	;volatile
  6230  0F77  1488               	line	1097
  6231                           	
  6232                           l3975:	
  6233  0F78                     ;main.c: 1097: for(tempoDeReacaoDoSensor = 0; tempoDeReacaoDoSensor < 250; tempoDeReacao
                                 DoSensor++){
  6234                           	clrf	(_tempoDeReacaoDoSensor)
  6235  0F78  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  6236  0F79  01F1               	
  6237                           l3977:	
  6238  0F7A                     	movlw	0
  6239  0F7A  3000               	subwf	(_tempoDeReacaoDoSensor+1),w
  6240  0F7B  0271               	movlw	0FAh
  6241  0F7C  30FA               	skipnz
  6242  0F7D  1903               	subwf	(_tempoDeReacaoDoSensor),w
  6243  0F7E  0270               	skipc
  6244  0F7F  1C03               	goto	u3801
  6245  0F80  2F82               	goto	u3800
  6246  0F81  2F83               u3801:
  6247  0F82                     	goto	l550
  6248  0F82  2F85               u3800:
  6249  0F83                     	goto	l3983
  6250  0F83  2F98               	
  6251                           l3979:	
  6252  0F84                     	goto	l3983
  6253  0F84  2F98               	
  6254                           l550:	
  6255  0F85                     	line	1098
  6256                           ;main.c: 1098: _delay((unsigned long)((1)*(20000000/4000000.0)));
  6257                           		opt asmopt_push
  6258                           	opt asmopt_off
  6259                           	nop2	;2 cycle nop
  6260  0F85  2F86               	nop2	;2 cycle nop
  6261  0F86  2F87               	nop
  6262  0F87  0000               	opt asmopt_pop
  6263                           
  6264                           	line	1097
  6265                           	
  6266                           l3981:	
  6267  0F88                     	movlw	01h
  6268  0F88  3001               	addwf	(_tempoDeReacaoDoSensor),f
  6269  0F89  07F0               	skipnc
  6270  0F8A  1803               	incf	(_tempoDeReacaoDoSensor+1),f
  6271  0F8B  0AF1               	movlw	0
  6272  0F8C  3000               	addwf	(_tempoDeReacaoDoSensor+1),f
  6273  0F8D  07F1               	movlw	0
  6274  0F8E  3000               	subwf	(_tempoDeReacaoDoSensor+1),w
  6275  0F8F  0271               	movlw	0FAh
  6276  0F90  30FA               	skipnz
  6277  0F91  1903               	subwf	(_tempoDeReacaoDoSensor),w
  6278  0F92  0270               	skipc
  6279  0F93  1C03               	goto	u3811
  6280  0F94  2F96               	goto	u3810
  6281  0F95  2F97               u3811:
  6282  0F96                     	goto	l550
  6283  0F96  2F85               u3810:
  6284  0F97                     	goto	l3983
  6285  0F97  2F98               	
  6286                           l551:	
  6287  0F98                     	line	1100
  6288                           	
  6289                           l3983:	
  6290  0F98                     ;main.c: 1099: }
  6291                           ;main.c: 1100: pulsosSemResposta = 1;
  6292                           	movlw	01h
  6293  0F98  3001               	bsf	status, 5	;RP0=1, select bank1
  6294  0F99  1683               	bcf	status, 6	;RP1=0, select bank1
  6295  0F9A  1303               	movwf	(_pulsosSemResposta)^080h
  6296  0F9B  00DC               	movlw	0
  6297  0F9C  3000               	movwf	((_pulsosSemResposta)^080h)+1
  6298  0F9D  00DD               	line	1101
  6299                           	
  6300                           l3985:	
  6301  0F9E                     ;main.c: 1101: OPTION_REGbits.INTEDG = 0;
  6302                           	bcf	(129)^080h,6	;volatile
  6303  0F9E  1301               	line	1102
  6304                           	
  6305                           l3987:	
  6306  0F9F                     ;main.c: 1102: estadoDoSinal = 0;
  6307                           	clrf	(_estadoDoSinal)^080h
  6308  0F9F  01DF               	line	1103
  6309                           	
  6310                           l3989:	
  6311  0FA0                     ;main.c: 1103: RD1 = 0;
  6312                           	bcf	status, 5	;RP0=0, select bank0
  6313  0FA0  1283               	bcf	status, 6	;RP1=0, select bank0
  6314  0FA1  1303               	bcf	(65/8),(65)&7	;volatile
  6315  0FA2  1088               	line	1104
  6316                           	
  6317                           l3991:	
  6318  0FA3                     ;main.c: 1104: for(tempoDeReacaoDoSensor = 0; tempoDeReacaoDoSensor < 3000; tempoDeReaca
                                 oDoSensor++){
  6319                           	clrf	(_tempoDeReacaoDoSensor)
  6320  0FA3  01F0               	clrf	(_tempoDeReacaoDoSensor+1)
  6321  0FA4  01F1               	movlw	0Bh
  6322  0FA5  300B               	subwf	(_tempoDeReacaoDoSensor+1),w
  6323  0FA6  0271               	movlw	0B8h
  6324  0FA7  30B8               	skipnz
  6325  0FA8  1903               	subwf	(_tempoDeReacaoDoSensor),w
  6326  0FA9  0270               	skipc
  6327  0FAA  1C03               	goto	u3821
  6328  0FAB  2FAD               	goto	u3820
  6329  0FAC  2FAE               u3821:
  6330  0FAD                     	goto	l552
  6331  0FAD  2FB0               u3820:
  6332  0FAE                     	goto	l3997
  6333  0FAE  2FC3               	
  6334                           l3993:	
  6335  0FAF                     	goto	l3997
  6336  0FAF  2FC3               	
  6337                           l552:	
  6338  0FB0                     	line	1105
  6339                           ;main.c: 1105: _delay((unsigned long)((1)*(20000000/4000000.0)));
  6340                           		opt asmopt_push
  6341                           	opt asmopt_off
  6342                           	nop2	;2 cycle nop
  6343  0FB0  2FB1               	nop2	;2 cycle nop
  6344  0FB1  2FB2               	nop
  6345  0FB2  0000               	opt asmopt_pop
  6346                           
  6347                           	line	1104
  6348                           	
  6349                           l3995:	
  6350  0FB3                     	movlw	01h
  6351  0FB3  3001               	addwf	(_tempoDeReacaoDoSensor),f
  6352  0FB4  07F0               	skipnc
  6353  0FB5  1803               	incf	(_tempoDeReacaoDoSensor+1),f
  6354  0FB6  0AF1               	movlw	0
  6355  0FB7  3000               	addwf	(_tempoDeReacaoDoSensor+1),f
  6356  0FB8  07F1               	movlw	0Bh
  6357  0FB9  300B               	subwf	(_tempoDeReacaoDoSensor+1),w
  6358  0FBA  0271               	movlw	0B8h
  6359  0FBB  30B8               	skipnz
  6360  0FBC  1903               	subwf	(_tempoDeReacaoDoSensor),w
  6361  0FBD  0270               	skipc
  6362  0FBE  1C03               	goto	u3831
  6363  0FBF  2FC1               	goto	u3830
  6364  0FC0  2FC2               u3831:
  6365  0FC1                     	goto	l552
  6366  0FC1  2FB0               u3830:
  6367  0FC2                     	goto	l3997
  6368  0FC2  2FC3               	
  6369                           l553:	
  6370  0FC3                     	line	1107
  6371                           	
  6372                           l3997:	
  6373  0FC3                     ;main.c: 1106: }
  6374                           ;main.c: 1107: obtemQuantidadeDeSensores();
  6375                           	fcall	_obtemQuantidadeDeSensores
  6376  0FC3  120A  118A  2249  120A  158A  	line	1108
  6377                           	
  6378                           l3999:	
  6379  0FC8                     ;main.c: 1108: exibeQuantidadeDeSensores(numeroDeSensores);
  6380                           	movf	(_numeroDeSensores),w
  6381  0FC8  0875               	fcall	_exibeQuantidadeDeSensores
  6382  0FC9  120A  158A  258F  120A  158A  	line	1109
  6383                           	
  6384                           l4001:	
  6385  0FCE                     ;main.c: 1109: RD6 = !RD6;
  6386                           	movlw	1<<((70)&7)
  6387  0FCE  3040               	bcf	status, 5	;RP0=0, select bank0
  6388  0FCF  1283               	bcf	status, 6	;RP1=0, select bank0
  6389  0FD0  1303               	xorwf	((70)/8),f
  6390  0FD1  0688               	line	1092
  6391                           	
  6392                           l4003:	
  6393  0FD2                     	movlw	01h
  6394  0FD2  3001               	addwf	(_numeroDePulsos),f
  6395  0FD3  07F2               	skipnc
  6396  0FD4  1803               	incf	(_numeroDePulsos+1),f
  6397  0FD5  0AF3               	movlw	0
  6398  0FD6  3000               	addwf	(_numeroDePulsos+1),f
  6399  0FD7  07F3               	
  6400                           l4005:	
  6401  0FD8                     	movlw	0
  6402  0FD8  3000               	subwf	(_numeroDePulsos+1),w
  6403  0FD9  0273               	movlw	06Eh
  6404  0FDA  306E               	skipnz
  6405  0FDB  1903               	subwf	(_numeroDePulsos),w
  6406  0FDC  0272               	skipc
  6407  0FDD  1C03               	goto	u3841
  6408  0FDE  2FE0               	goto	u3840
  6409  0FDF  2FE1               u3841:
  6410  0FE0                     	goto	l3967
  6411  0FE0  2F6C               u3840:
  6412  0FE1                     	goto	l4007
  6413  0FE1  2FE2               	
  6414                           l549:	
  6415  0FE2                     	line	1111
  6416                           	
  6417                           l4007:	
  6418  0FE2                     ;main.c: 1110: }
  6419                           ;main.c: 1111: if(pulsosSemResposta > 0 || flagTempoDeReacaoDoSensor == 1){
  6420                           	bsf	status, 5	;RP0=1, select bank1
  6421  0FE2  1683               	bcf	status, 6	;RP1=0, select bank1
  6422  0FE3  1303               	movf	((_pulsosSemResposta)^080h),w
  6423  0FE4  085C               iorwf	((_pulsosSemResposta+1)^080h),w
  6424  0FE5  045D               	btfss	status,2
  6425  0FE6  1D03               	goto	u3851
  6426  0FE7  2FE9               	goto	u3850
  6427  0FE8  2FEA               u3851:
  6428  0FE9                     	goto	l556
  6429  0FE9  2FEF               u3850:
  6430  0FEA                     	
  6431                           l4009:	
  6432  0FEA                     		decf	((_flagTempoDeReacaoDoSensor)),w
  6433  0FEA  0374               	btfss	status,2
  6434  0FEB  1D03               	goto	u3861
  6435  0FEC  2FEE               	goto	u3860
  6436  0FED  2FEF               u3861:
  6437  0FEE                     	goto	l554
  6438  0FEE  2FF9               u3860:
  6439  0FEF                     	
  6440                           l556:	
  6441  0FEF                     	line	1112
  6442                           ;main.c: 1112: RD6 = 1;
  6443                           	bcf	status, 5	;RP0=0, select bank0
  6444  0FEF  1283               	bcf	status, 6	;RP1=0, select bank0
  6445  0FF0  1303               	bsf	(70/8),(70)&7	;volatile
  6446  0FF1  1708               	line	1113
  6447                           ;main.c: 1113: RD5 = 1;
  6448                           	bsf	(69/8),(69)&7	;volatile
  6449  0FF2  1688               	line	1114
  6450                           ;main.c: 1114: RD4 = 0;
  6451                           	bcf	(68/8),(68)&7	;volatile
  6452  0FF3  1208               	line	1115
  6453                           ;main.c: 1115: flagErroDeLeitura = 1;
  6454                           	bsf	status, 5	;RP0=1, select bank1
  6455  0FF4  1683               	bcf	status, 6	;RP1=0, select bank1
  6456  0FF5  1303               	clrf	(_flagErroDeLeitura)^080h
  6457  0FF6  01E7               	incf	(_flagErroDeLeitura)^080h,f
  6458  0FF7  0AE7               	line	1116
  6459                           ;main.c: 1116: }else{
  6460                           	goto	l558
  6461  0FF8  2FFF               	
  6462                           l554:	
  6463  0FF9                     	line	1117
  6464                           ;main.c: 1117: RD6 = 0;
  6465                           	bcf	status, 5	;RP0=0, select bank0
  6466  0FF9  1283               	bcf	status, 6	;RP1=0, select bank0
  6467  0FFA  1303               	bcf	(70/8),(70)&7	;volatile
  6468  0FFB  1308               	line	1118
  6469                           ;main.c: 1118: RD5 = 0;
  6470                           	bcf	(69/8),(69)&7	;volatile
  6471  0FFC  1288               	line	1119
  6472                           ;main.c: 1119: RD4 = 1;
  6473                           	bsf	(68/8),(68)&7	;volatile
  6474  0FFD  1608               	goto	l558
  6475  0FFE  2FFF               	line	1120
  6476                           	
  6477                           l557:	
  6478  0FFF                     	line	1121
  6479                           	
  6480                           l558:	
  6481  0FFF                     	return
  6482  0FFF  0008               	opt stack 0
  6483                           GLOBAL	__end_of_modoTeste20
  6484                           	__end_of_modoTeste20:
  6485  1000                     	signat	_modoTeste20,89
  6486                           	global	_setaSaidaEm20Volts
  6487                           
  6488 ;; *************** function _setaSaidaEm20Volts *****************
  6489 ;; Defined at:
  6490 ;;		line 274 in file "src/main.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;		None
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  1    wreg      void 
  6497 ;; Registers used:
  6498 ;;		None
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6504 ;;      Params:         0       0       0       0       0
  6505 ;;      Locals:         0       0       0       0       0
  6506 ;;      Temps:          0       0       0       0       0
  6507 ;;      Totals:         0       0       0       0       0
  6508 ;;Total ram usage:        0 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    2
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_testaSaidaPulsadaEm20Volts
  6515 ;;		_entraEmModoAjuste
  6516 ;;		_modoTeste20
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6520                           	line	274
  6521                           global __ptext23
  6522                           __ptext23:	;psect for function _setaSaidaEm20Volts
  6523  0961                     psect	text23
  6524                           	file	"src/main.c"
  6525                           	line	274
  6526                           	global	__size_of_setaSaidaEm20Volts
  6527                           	__size_of_setaSaidaEm20Volts	equ	__end_of_setaSaidaEm20Volts-_setaSaidaEm20Volts
  6528  0005                     	
  6529                           _setaSaidaEm20Volts:	
  6530  0961                     ;incstack = 0
  6531                           	opt	stack 3
  6532                           ; Regs used in _setaSaidaEm20Volts: []
  6533                           	line	275
  6534                           	
  6535                           l3713:	
  6536  0961                     ;main.c: 275: RD0 = 0;
  6537                           	bcf	status, 5	;RP0=0, select bank0
  6538  0961  1283               	bcf	status, 6	;RP1=0, select bank0
  6539  0962  1303               	bcf	(64/8),(64)&7	;volatile
  6540  0963  1008               	line	276
  6541                           ;main.c: 276: RD2 = 1;
  6542                           	bsf	(66/8),(66)&7	;volatile
  6543  0964  1508               	line	277
  6544                           	
  6545                           l324:	
  6546  0965                     	return
  6547  0965  0008               	opt stack 0
  6548                           GLOBAL	__end_of_setaSaidaEm20Volts
  6549                           	__end_of_setaSaidaEm20Volts:
  6550  0966                     	signat	_setaSaidaEm20Volts,89
  6551                           	global	_obtemQuantidadeDeSensores
  6552                           
  6553 ;; *************** function _obtemQuantidadeDeSensores *****************
  6554 ;; Defined at:
  6555 ;;		line 385 in file "src/main.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  mensagem       50    0[BANK1 ] unsigned char [50]
  6560 ;;  resultadoObt    2   50[BANK1 ] unsigned int 
  6561 ;;  numeroDePuls    2    0        unsigned int 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      void 
  6564 ;; Registers used:
  6565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6571 ;;      Params:         0       0       0       0       0
  6572 ;;      Locals:         0       0      52       0       0
  6573 ;;      Temps:          0       1       0       0       0
  6574 ;;      Totals:         0       1      52       0       0
  6575 ;;Total ram usage:       53 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    4
  6578 ;; This function calls:
  6579 ;;		_enviaStringPelaUart
  6580 ;;		_obtemConvercaoAD
  6581 ;;		_sprintf
  6582 ;;		_strlen
  6583 ;; This function is called by:
  6584 ;;		_executaTesteDosSensores
  6585 ;;		_modoTeste9
  6586 ;;		_modoTeste20
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  6590                           	line	385
  6591                           global __ptext24
  6592                           __ptext24:	;psect for function _obtemQuantidadeDeSensores
  6593  0249                     psect	text24
  6594                           	file	"src/main.c"
  6595                           	line	385
  6596                           	global	__size_of_obtemQuantidadeDeSensores
  6597                           	__size_of_obtemQuantidadeDeSensores	equ	__end_of_obtemQuantidadeDeSensores-_obtemQuanti
                                 dadeDeSensores
  6598  016E                     	
  6599                           _obtemQuantidadeDeSensores:	
  6600  0249                     ;incstack = 0
  6601                           	opt	stack 2
  6602                           ; Regs used in _obtemQuantidadeDeSensores: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
                                 cstack]
  6603                           	line	398
  6604                           	
  6605                           l3591:	
  6606  0249                     ;main.c: 386: unsigned int resultadoObtidoDoSensores;
  6607                           ;main.c: 387: unsigned char mensagem[50];
  6608                           ;main.c: 388: unsigned int numeroDePulsos;
  6609                           ;main.c: 398: resultadoObtidoDoSensores = 0;
  6610                           	bsf	status, 5	;RP0=1, select bank1
  6611  0249  1683               	bcf	status, 6	;RP1=0, select bank1
  6612  024A  1303               	clrf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h
  6613  024B  01D2               	clrf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h
  6614  024C  01D3               	line	399
  6615                           	
  6616                           l3593:	
  6617  024D                     ;main.c: 399: resultadoObtidoDoSensores = obtemConvercaoAD(0);
  6618                           	movlw	low(0)
  6619  024D  3000               	fcall	_obtemConvercaoAD
  6620  024E  120A  158A  244E  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  6621  0253  1283               	bcf	status, 6	;RP1=0, select bank0
  6622  0254  1303               	movf	(1+(?_obtemConvercaoAD)),w
  6623  0255  0825               	bsf	status, 5	;RP0=1, select bank1
  6624  0256  1683               	bcf	status, 6	;RP1=0, select bank1
  6625  0257  1303               	movwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h
  6626  0258  00D3               	bcf	status, 5	;RP0=0, select bank0
  6627  0259  1283               	bcf	status, 6	;RP1=0, select bank0
  6628  025A  1303               	movf	(0+(?_obtemConvercaoAD)),w
  6629  025B  0824               	bsf	status, 5	;RP0=1, select bank1
  6630  025C  1683               	bcf	status, 6	;RP1=0, select bank1
  6631  025D  1303               	movwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h
  6632  025E  00D2               	line	402
  6633                           	
  6634                           l3595:	
  6635  025F                     ;main.c: 402: sprintf(mensagem, "Quantidade de Sensores = %05d\r\n", resultadoObtidoDoSe
                                 nsores);
  6636                           	movlw	(low(obtemQuantidadeDeSensores@mensagem|((0x0)<<8))&0ffh)
  6637  025F  30A0               	bcf	status, 5	;RP0=0, select bank0
  6638  0260  1283               	bcf	status, 6	;RP1=0, select bank0
  6639  0261  1303               	movwf	(sprintf@sp)
  6640  0262  00AE               	movlw	(0x0)
  6641  0263  3000               	movwf	(sprintf@sp+1)
  6642  0264  00AF               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  6643  0265  300B               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  6644  0266  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  6645  0267  083E               	movwf	(sprintf@f)
  6646  0268  00B0               	bsf	status, 5	;RP0=1, select bank1
  6647  0269  1683               	bcf	status, 6	;RP1=0, select bank1
  6648  026A  1303               	movf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6649  026B  0853               	bcf	status, 5	;RP0=0, select bank0
  6650  026C  1283               	bcf	status, 6	;RP1=0, select bank0
  6651  026D  1303               	movwf	1+(?_sprintf)+03h
  6652  026E  00B2               	bsf	status, 5	;RP0=1, select bank1
  6653  026F  1683               	bcf	status, 6	;RP1=0, select bank1
  6654  0270  1303               	movf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6655  0271  0852               	bcf	status, 5	;RP0=0, select bank0
  6656  0272  1283               	bcf	status, 6	;RP1=0, select bank0
  6657  0273  1303               	movwf	0+(?_sprintf)+03h
  6658  0274  00B1               	fcall	_sprintf
  6659  0275  120A  118A  2028  120A  118A  	line	403
  6660                           	
  6661                           l3597:	
  6662  027A                     ;main.c: 403: enviaStringPelaUart(mensagem, strlen(mensagem));
  6663                           	movlw	(low(obtemQuantidadeDeSensores@mensagem|((0x0)<<8))&0ffh)
  6664  027A  30A0               	bcf	status, 5	;RP0=0, select bank0
  6665  027B  1283               	bcf	status, 6	;RP1=0, select bank0
  6666  027C  1303               	movwf	(enviaStringPelaUart@str)
  6667  027D  00A6               	movlw	(0x0)
  6668  027E  3000               	movwf	(enviaStringPelaUart@str+1)
  6669  027F  00A7               	movlw	(low(obtemQuantidadeDeSensores@mensagem|((0x0)<<8))&0ffh)
  6670  0280  30A0               	movwf	(strlen@s)
  6671  0281  00A0               	movlw	(0x0)
  6672  0282  3000               	movwf	(strlen@s+1)
  6673  0283  00A1               	fcall	_strlen
  6674  0284  120A  158A  233F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  6675  0289  1283               	bcf	status, 6	;RP1=0, select bank0
  6676  028A  1303               	movf	(1+(?_strlen)),w
  6677  028B  0821               	movwf	(enviaStringPelaUart@tamanho+1)
  6678  028C  00A9               	movf	(0+(?_strlen)),w
  6679  028D  0820               	movwf	(enviaStringPelaUart@tamanho)
  6680  028E  00A8               	fcall	_enviaStringPelaUart
  6681  028F  120A  158A  23CE  120A  118A  	line	405
  6682                           	
  6683                           l3599:	
  6684  0294                     ;main.c: 405: if(resultadoObtidoDoSensores >= 1023 - 13){
  6685                           	movlw	03h
  6686  0294  3003               	bsf	status, 5	;RP0=1, select bank1
  6687  0295  1683               	bcf	status, 6	;RP1=0, select bank1
  6688  0296  1303               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6689  0297  0253               	movlw	0F2h
  6690  0298  30F2               	skipnz
  6691  0299  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6692  029A  0252               	skipc
  6693  029B  1C03               	goto	u3291
  6694  029C  2A9E               	goto	u3290
  6695  029D  2A9F               u3291:
  6696  029E                     	goto	l3605
  6697  029E  2AA2               u3290:
  6698  029F                     	line	406
  6699                           	
  6700                           l3601:	
  6701  029F                     ;main.c: 406: numeroDeSensores = 0;
  6702                           	clrf	(_numeroDeSensores)
  6703  029F  01F5               	goto	l361
  6704  02A0  2BB6               	line	408
  6705                           	
  6706                           l3603:	
  6707  02A1                     ;main.c: 408: return;
  6708                           	goto	l361
  6709  02A1  2BB6               	line	409
  6710                           	
  6711                           l360:	
  6712  02A2                     	line	411
  6713                           	
  6714                           l3605:	
  6715  02A2                     ;main.c: 409: }
  6716                           ;main.c: 411: if((resultadoObtidoDoSensores >= 960 - 13) && (resultadoObtidoDoSensores <
                                 = 960 + 13)){
  6717                           	movlw	03h
  6718  02A2  3003               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6719  02A3  0253               	movlw	0B3h
  6720  02A4  30B3               	skipnz
  6721  02A5  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6722  02A6  0252               	skipc
  6723  02A7  1C03               	goto	u3301
  6724  02A8  2AAA               	goto	u3300
  6725  02A9  2AAB               u3301:
  6726  02AA                     	goto	l3611
  6727  02AA  2AB7               u3300:
  6728  02AB                     	
  6729                           l3607:	
  6730  02AB                     	movlw	03h
  6731  02AB  3003               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6732  02AC  0253               	movlw	0CEh
  6733  02AD  30CE               	skipnz
  6734  02AE  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6735  02AF  0252               	skipnc
  6736  02B0  1803               	goto	u3311
  6737  02B1  2AB3               	goto	u3310
  6738  02B2  2AB4               u3311:
  6739  02B3                     	goto	l3611
  6740  02B3  2AB7               u3310:
  6741  02B4                     	line	412
  6742                           	
  6743                           l3609:	
  6744  02B4                     ;main.c: 412: numeroDeSensores = 1;
  6745                           	clrf	(_numeroDeSensores)
  6746  02B4  01F5               	incf	(_numeroDeSensores),f
  6747  02B5  0AF5               	line	414
  6748                           ;main.c: 414: return;
  6749                           	goto	l361
  6750  02B6  2BB6               	line	415
  6751                           	
  6752                           l362:	
  6753  02B7                     	line	417
  6754                           	
  6755                           l3611:	
  6756  02B7                     ;main.c: 415: }
  6757                           ;main.c: 417: if((resultadoObtidoDoSensores >= 896 - 13) && (resultadoObtidoDoSensores <
                                 = 896 + 13)){
  6758                           	movlw	03h
  6759  02B7  3003               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6760  02B8  0253               	movlw	073h
  6761  02B9  3073               	skipnz
  6762  02BA  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6763  02BB  0252               	skipc
  6764  02BC  1C03               	goto	u3321
  6765  02BD  2ABF               	goto	u3320
  6766  02BE  2AC0               u3321:
  6767  02BF                     	goto	l3619
  6768  02BF  2AD1               u3320:
  6769  02C0                     	
  6770                           l3613:	
  6771  02C0                     	movlw	03h
  6772  02C0  3003               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6773  02C1  0253               	movlw	08Eh
  6774  02C2  308E               	skipnz
  6775  02C3  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6776  02C4  0252               	skipnc
  6777  02C5  1803               	goto	u3331
  6778  02C6  2AC8               	goto	u3330
  6779  02C7  2AC9               u3331:
  6780  02C8                     	goto	l3619
  6781  02C8  2AD1               u3330:
  6782  02C9                     	line	418
  6783                           	
  6784                           l3615:	
  6785  02C9                     ;main.c: 418: numeroDeSensores = 2;
  6786                           	movlw	low(02h)
  6787  02C9  3002               	bcf	status, 5	;RP0=0, select bank0
  6788  02CA  1283               	bcf	status, 6	;RP1=0, select bank0
  6789  02CB  1303               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  6790  02CC  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  6791  02CD  083E               	movwf	(_numeroDeSensores)
  6792  02CE  00F5               	goto	l361
  6793  02CF  2BB6               	line	420
  6794                           	
  6795                           l3617:	
  6796  02D0                     ;main.c: 420: return;
  6797                           	goto	l361
  6798  02D0  2BB6               	line	421
  6799                           	
  6800                           l363:	
  6801  02D1                     	line	423
  6802                           	
  6803                           l3619:	
  6804  02D1                     ;main.c: 421: }
  6805                           ;main.c: 423: if((resultadoObtidoDoSensores >= 783 - 13) && (resultadoObtidoDoSensores <
                                 = 783 + 13)){
  6806                           	movlw	03h
  6807  02D1  3003               	bsf	status, 5	;RP0=1, select bank1
  6808  02D2  1683               	bcf	status, 6	;RP1=0, select bank1
  6809  02D3  1303               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6810  02D4  0253               	movlw	02h
  6811  02D5  3002               	skipnz
  6812  02D6  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6813  02D7  0252               	skipc
  6814  02D8  1C03               	goto	u3341
  6815  02D9  2ADB               	goto	u3340
  6816  02DA  2ADC               u3341:
  6817  02DB                     	goto	l3627
  6818  02DB  2AED               u3340:
  6819  02DC                     	
  6820                           l3621:	
  6821  02DC                     	movlw	03h
  6822  02DC  3003               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6823  02DD  0253               	movlw	01Dh
  6824  02DE  301D               	skipnz
  6825  02DF  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6826  02E0  0252               	skipnc
  6827  02E1  1803               	goto	u3351
  6828  02E2  2AE4               	goto	u3350
  6829  02E3  2AE5               u3351:
  6830  02E4                     	goto	l3627
  6831  02E4  2AED               u3350:
  6832  02E5                     	line	424
  6833                           	
  6834                           l3623:	
  6835  02E5                     ;main.c: 424: numeroDeSensores = 3;
  6836                           	movlw	low(03h)
  6837  02E5  3003               	bcf	status, 5	;RP0=0, select bank0
  6838  02E6  1283               	bcf	status, 6	;RP1=0, select bank0
  6839  02E7  1303               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  6840  02E8  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  6841  02E9  083E               	movwf	(_numeroDeSensores)
  6842  02EA  00F5               	goto	l361
  6843  02EB  2BB6               	line	426
  6844                           	
  6845                           l3625:	
  6846  02EC                     ;main.c: 426: return;
  6847                           	goto	l361
  6848  02EC  2BB6               	line	427
  6849                           	
  6850                           l364:	
  6851  02ED                     	line	429
  6852                           	
  6853                           l3627:	
  6854  02ED                     ;main.c: 427: }
  6855                           ;main.c: 429: if((resultadoObtidoDoSensores >= 768 - 13) && (resultadoObtidoDoSensores <
                                 = 768 + 13)){
  6856                           	movlw	02h
  6857  02ED  3002               	bsf	status, 5	;RP0=1, select bank1
  6858  02EE  1683               	bcf	status, 6	;RP1=0, select bank1
  6859  02EF  1303               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6860  02F0  0253               	movlw	0F3h
  6861  02F1  30F3               	skipnz
  6862  02F2  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6863  02F3  0252               	skipc
  6864  02F4  1C03               	goto	u3361
  6865  02F5  2AF7               	goto	u3360
  6866  02F6  2AF8               u3361:
  6867  02F7                     	goto	l3635
  6868  02F7  2B09               u3360:
  6869  02F8                     	
  6870                           l3629:	
  6871  02F8                     	movlw	03h
  6872  02F8  3003               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6873  02F9  0253               	movlw	0Eh
  6874  02FA  300E               	skipnz
  6875  02FB  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6876  02FC  0252               	skipnc
  6877  02FD  1803               	goto	u3371
  6878  02FE  2B00               	goto	u3370
  6879  02FF  2B01               u3371:
  6880  0300                     	goto	l3635
  6881  0300  2B09               u3370:
  6882  0301                     	line	430
  6883                           	
  6884                           l3631:	
  6885  0301                     ;main.c: 430: numeroDeSensores = 4;
  6886                           	movlw	low(04h)
  6887  0301  3004               	bcf	status, 5	;RP0=0, select bank0
  6888  0302  1283               	bcf	status, 6	;RP1=0, select bank0
  6889  0303  1303               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  6890  0304  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  6891  0305  083E               	movwf	(_numeroDeSensores)
  6892  0306  00F5               	goto	l361
  6893  0307  2BB6               	line	432
  6894                           	
  6895                           l3633:	
  6896  0308                     ;main.c: 432: return;
  6897                           	goto	l361
  6898  0308  2BB6               	line	433
  6899                           	
  6900                           l365:	
  6901  0309                     	line	435
  6902                           	
  6903                           l3635:	
  6904  0309                     ;main.c: 433: }
  6905                           ;main.c: 435: if((resultadoObtidoDoSensores >= 704 - 13) && (resultadoObtidoDoSensores <
                                 = 704 + 13)){
  6906                           	movlw	02h
  6907  0309  3002               	bsf	status, 5	;RP0=1, select bank1
  6908  030A  1683               	bcf	status, 6	;RP1=0, select bank1
  6909  030B  1303               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6910  030C  0253               	movlw	0B3h
  6911  030D  30B3               	skipnz
  6912  030E  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6913  030F  0252               	skipc
  6914  0310  1C03               	goto	u3381
  6915  0311  2B13               	goto	u3380
  6916  0312  2B14               u3381:
  6917  0313                     	goto	l3643
  6918  0313  2B25               u3380:
  6919  0314                     	
  6920                           l3637:	
  6921  0314                     	movlw	02h
  6922  0314  3002               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6923  0315  0253               	movlw	0CEh
  6924  0316  30CE               	skipnz
  6925  0317  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6926  0318  0252               	skipnc
  6927  0319  1803               	goto	u3391
  6928  031A  2B1C               	goto	u3390
  6929  031B  2B1D               u3391:
  6930  031C                     	goto	l3643
  6931  031C  2B25               u3390:
  6932  031D                     	line	436
  6933                           	
  6934                           l3639:	
  6935  031D                     ;main.c: 436: numeroDeSensores = 5;
  6936                           	movlw	low(05h)
  6937  031D  3005               	bcf	status, 5	;RP0=0, select bank0
  6938  031E  1283               	bcf	status, 6	;RP1=0, select bank0
  6939  031F  1303               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  6940  0320  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  6941  0321  083E               	movwf	(_numeroDeSensores)
  6942  0322  00F5               	goto	l361
  6943  0323  2BB6               	line	438
  6944                           	
  6945                           l3641:	
  6946  0324                     ;main.c: 438: return;
  6947                           	goto	l361
  6948  0324  2BB6               	line	439
  6949                           	
  6950                           l366:	
  6951  0325                     	line	441
  6952                           	
  6953                           l3643:	
  6954  0325                     ;main.c: 439: }
  6955                           ;main.c: 441: if((resultadoObtidoDoSensores >= 639 - 13) && (resultadoObtidoDoSensores <
                                 = 639 + 13)){
  6956                           	movlw	02h
  6957  0325  3002               	bsf	status, 5	;RP0=1, select bank1
  6958  0326  1683               	bcf	status, 6	;RP1=0, select bank1
  6959  0327  1303               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6960  0328  0253               	movlw	072h
  6961  0329  3072               	skipnz
  6962  032A  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6963  032B  0252               	skipc
  6964  032C  1C03               	goto	u3401
  6965  032D  2B2F               	goto	u3400
  6966  032E  2B30               u3401:
  6967  032F                     	goto	l3651
  6968  032F  2B41               u3400:
  6969  0330                     	
  6970                           l3645:	
  6971  0330                     	movlw	02h
  6972  0330  3002               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  6973  0331  0253               	movlw	08Dh
  6974  0332  308D               	skipnz
  6975  0333  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  6976  0334  0252               	skipnc
  6977  0335  1803               	goto	u3411
  6978  0336  2B38               	goto	u3410
  6979  0337  2B39               u3411:
  6980  0338                     	goto	l3651
  6981  0338  2B41               u3410:
  6982  0339                     	line	442
  6983                           	
  6984                           l3647:	
  6985  0339                     ;main.c: 442: numeroDeSensores = 6;
  6986                           	movlw	low(06h)
  6987  0339  3006               	bcf	status, 5	;RP0=0, select bank0
  6988  033A  1283               	bcf	status, 6	;RP1=0, select bank0
  6989  033B  1303               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  6990  033C  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  6991  033D  083E               	movwf	(_numeroDeSensores)
  6992  033E  00F5               	goto	l361
  6993  033F  2BB6               	line	444
  6994                           	
  6995                           l3649:	
  6996  0340                     ;main.c: 444: return;
  6997                           	goto	l361
  6998  0340  2BB6               	line	445
  6999                           	
  7000                           l367:	
  7001  0341                     	line	447
  7002                           	
  7003                           l3651:	
  7004  0341                     ;main.c: 445: }
  7005                           ;main.c: 447: if((resultadoObtidoDoSensores >= 608 - 13) && (resultadoObtidoDoSensores <
                                 = 608 + 13)){
  7006                           	movlw	02h
  7007  0341  3002               	bsf	status, 5	;RP0=1, select bank1
  7008  0342  1683               	bcf	status, 6	;RP1=0, select bank1
  7009  0343  1303               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  7010  0344  0253               	movlw	053h
  7011  0345  3053               	skipnz
  7012  0346  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  7013  0347  0252               	skipc
  7014  0348  1C03               	goto	u3421
  7015  0349  2B4B               	goto	u3420
  7016  034A  2B4C               u3421:
  7017  034B                     	goto	l3659
  7018  034B  2B5D               u3420:
  7019  034C                     	
  7020                           l3653:	
  7021  034C                     	movlw	02h
  7022  034C  3002               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  7023  034D  0253               	movlw	06Eh
  7024  034E  306E               	skipnz
  7025  034F  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  7026  0350  0252               	skipnc
  7027  0351  1803               	goto	u3431
  7028  0352  2B54               	goto	u3430
  7029  0353  2B55               u3431:
  7030  0354                     	goto	l3659
  7031  0354  2B5D               u3430:
  7032  0355                     	line	448
  7033                           	
  7034                           l3655:	
  7035  0355                     ;main.c: 448: numeroDeSensores = 7;
  7036                           	movlw	low(07h)
  7037  0355  3007               	bcf	status, 5	;RP0=0, select bank0
  7038  0356  1283               	bcf	status, 6	;RP1=0, select bank0
  7039  0357  1303               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  7040  0358  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  7041  0359  083E               	movwf	(_numeroDeSensores)
  7042  035A  00F5               	goto	l361
  7043  035B  2BB6               	line	450
  7044                           	
  7045                           l3657:	
  7046  035C                     ;main.c: 450: return;
  7047                           	goto	l361
  7048  035C  2BB6               	line	451
  7049                           	
  7050                           l368:	
  7051  035D                     	line	453
  7052                           	
  7053                           l3659:	
  7054  035D                     ;main.c: 451: }
  7055                           ;main.c: 453: if((resultadoObtidoDoSensores >= 575 - 13) && (resultadoObtidoDoSensores <
                                 = 575 + 13)){
  7056                           	movlw	02h
  7057  035D  3002               	bsf	status, 5	;RP0=1, select bank1
  7058  035E  1683               	bcf	status, 6	;RP1=0, select bank1
  7059  035F  1303               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  7060  0360  0253               	movlw	032h
  7061  0361  3032               	skipnz
  7062  0362  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  7063  0363  0252               	skipc
  7064  0364  1C03               	goto	u3441
  7065  0365  2B67               	goto	u3440
  7066  0366  2B68               u3441:
  7067  0367                     	goto	l3667
  7068  0367  2B79               u3440:
  7069  0368                     	
  7070                           l3661:	
  7071  0368                     	movlw	02h
  7072  0368  3002               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  7073  0369  0253               	movlw	04Dh
  7074  036A  304D               	skipnz
  7075  036B  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  7076  036C  0252               	skipnc
  7077  036D  1803               	goto	u3451
  7078  036E  2B70               	goto	u3450
  7079  036F  2B71               u3451:
  7080  0370                     	goto	l3667
  7081  0370  2B79               u3450:
  7082  0371                     	line	454
  7083                           	
  7084                           l3663:	
  7085  0371                     ;main.c: 454: numeroDeSensores = 8;
  7086                           	movlw	low(08h)
  7087  0371  3008               	bcf	status, 5	;RP0=0, select bank0
  7088  0372  1283               	bcf	status, 6	;RP1=0, select bank0
  7089  0373  1303               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  7090  0374  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  7091  0375  083E               	movwf	(_numeroDeSensores)
  7092  0376  00F5               	goto	l361
  7093  0377  2BB6               	line	456
  7094                           	
  7095                           l3665:	
  7096  0378                     ;main.c: 456: return;
  7097                           	goto	l361
  7098  0378  2BB6               	line	457
  7099                           	
  7100                           l369:	
  7101  0379                     	line	459
  7102                           	
  7103                           l3667:	
  7104  0379                     ;main.c: 457: }
  7105                           ;main.c: 459: if((resultadoObtidoDoSensores >= 543 - 13) && (resultadoObtidoDoSensores <
                                 = 543 + 13)){
  7106                           	movlw	02h
  7107  0379  3002               	bsf	status, 5	;RP0=1, select bank1
  7108  037A  1683               	bcf	status, 6	;RP1=0, select bank1
  7109  037B  1303               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  7110  037C  0253               	movlw	012h
  7111  037D  3012               	skipnz
  7112  037E  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  7113  037F  0252               	skipc
  7114  0380  1C03               	goto	u3461
  7115  0381  2B83               	goto	u3460
  7116  0382  2B84               u3461:
  7117  0383                     	goto	l3675
  7118  0383  2B95               u3460:
  7119  0384                     	
  7120                           l3669:	
  7121  0384                     	movlw	02h
  7122  0384  3002               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  7123  0385  0253               	movlw	02Dh
  7124  0386  302D               	skipnz
  7125  0387  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  7126  0388  0252               	skipnc
  7127  0389  1803               	goto	u3471
  7128  038A  2B8C               	goto	u3470
  7129  038B  2B8D               u3471:
  7130  038C                     	goto	l3675
  7131  038C  2B95               u3470:
  7132  038D                     	line	460
  7133                           	
  7134                           l3671:	
  7135  038D                     ;main.c: 460: numeroDeSensores = 9;
  7136                           	movlw	low(09h)
  7137  038D  3009               	bcf	status, 5	;RP0=0, select bank0
  7138  038E  1283               	bcf	status, 6	;RP1=0, select bank0
  7139  038F  1303               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  7140  0390  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  7141  0391  083E               	movwf	(_numeroDeSensores)
  7142  0392  00F5               	goto	l361
  7143  0393  2BB6               	line	462
  7144                           	
  7145                           l3673:	
  7146  0394                     ;main.c: 462: return;
  7147                           	goto	l361
  7148  0394  2BB6               	line	463
  7149                           	
  7150                           l370:	
  7151  0395                     	line	465
  7152                           	
  7153                           l3675:	
  7154  0395                     ;main.c: 463: }
  7155                           ;main.c: 465: if((resultadoObtidoDoSensores >= 512 - 13) && (resultadoObtidoDoSensores <
                                 = 512 + 13)){
  7156                           	movlw	01h
  7157  0395  3001               	bsf	status, 5	;RP0=1, select bank1
  7158  0396  1683               	bcf	status, 6	;RP1=0, select bank1
  7159  0397  1303               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  7160  0398  0253               	movlw	0F3h
  7161  0399  30F3               	skipnz
  7162  039A  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  7163  039B  0252               	skipc
  7164  039C  1C03               	goto	u3481
  7165  039D  2B9F               	goto	u3480
  7166  039E  2BA0               u3481:
  7167  039F                     	goto	l3683
  7168  039F  2BB1               u3480:
  7169  03A0                     	
  7170                           l3677:	
  7171  03A0                     	movlw	02h
  7172  03A0  3002               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores+1)^080h,w
  7173  03A1  0253               	movlw	0Eh
  7174  03A2  300E               	skipnz
  7175  03A3  1903               	subwf	(obtemQuantidadeDeSensores@resultadoObtidoDoSensores)^080h,w
  7176  03A4  0252               	skipnc
  7177  03A5  1803               	goto	u3491
  7178  03A6  2BA8               	goto	u3490
  7179  03A7  2BA9               u3491:
  7180  03A8                     	goto	l3683
  7181  03A8  2BB1               u3490:
  7182  03A9                     	line	466
  7183                           	
  7184                           l3679:	
  7185  03A9                     ;main.c: 466: numeroDeSensores = 10;
  7186                           	movlw	low(0Ah)
  7187  03A9  300A               	bcf	status, 5	;RP0=0, select bank0
  7188  03AA  1283               	bcf	status, 6	;RP1=0, select bank0
  7189  03AB  1303               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  7190  03AC  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  7191  03AD  083E               	movwf	(_numeroDeSensores)
  7192  03AE  00F5               	goto	l361
  7193  03AF  2BB6               	line	468
  7194                           	
  7195                           l3681:	
  7196  03B0                     ;main.c: 468: return;
  7197                           	goto	l361
  7198  03B0  2BB6               	line	469
  7199                           	
  7200                           l371:	
  7201  03B1                     	line	471
  7202                           	
  7203                           l3683:	
  7204  03B1                     ;main.c: 469: }
  7205                           ;main.c: 471: numeroDeSensores = -1;
  7206                           	movlw	low(0FFh)
  7207  03B1  30FF               	bcf	status, 5	;RP0=0, select bank0
  7208  03B2  1283               	movwf	(??_obtemQuantidadeDeSensores+0)+0
  7209  03B3  00BE               	movf	(??_obtemQuantidadeDeSensores+0)+0,w
  7210  03B4  083E               	movwf	(_numeroDeSensores)
  7211  03B5  00F5               	line	473
  7212                           	
  7213                           l361:	
  7214  03B6                     	return
  7215  03B6  0008               	opt stack 0
  7216                           GLOBAL	__end_of_obtemQuantidadeDeSensores
  7217                           	__end_of_obtemQuantidadeDeSensores:
  7218  03B7                     	signat	_obtemQuantidadeDeSensores,89
  7219                           	global	_strlen
  7220                           
  7221 ;; *************** function _strlen *****************
  7222 ;; Defined at:
  7223 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  7226 ;;		 -> ObtemAmplitureDoSinal@mensagem(50), obtemTesteDoGoundBolt@mensagem(50), obtemNivelDeBateria@mensagem(50), obtemQ
       uantidadeDeSensores@mensagem(50), 
  7227 ;;		 -> main@mensagem(50), 
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  7230 ;;		 -> ObtemAmplitureDoSinal@mensagem(50), obtemTesteDoGoundBolt@mensagem(50), obtemNivelDeBateria@mensagem(50), obtemQ
       uantidadeDeSensores@mensagem(50), 
  7231 ;;		 -> main@mensagem(50), 
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  2    0[BANK0 ] unsigned int 
  7234 ;; Registers used:
  7235 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7241 ;;      Params:         0       2       0       0       0
  7242 ;;      Locals:         0       2       0       0       0
  7243 ;;      Temps:          0       2       0       0       0
  7244 ;;      Totals:         0       6       0       0       0
  7245 ;;Total ram usage:        6 bytes
  7246 ;; Hardware stack levels used:    1
  7247 ;; Hardware stack levels required when called:    2
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_main
  7252 ;;		_obtemQuantidadeDeSensores
  7253 ;;		_obtemNivelDeBateria
  7254 ;;		_obtemTesteDoGoundBolt
  7255 ;;		_ObtemAmplitureDoSinal
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           psect	text25,local,class=CODE,delta=2,merge=1,group=2
  7259                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  7260                           	line	4
  7261                           global __ptext25
  7262                           __ptext25:	;psect for function _strlen
  7263  0B3F                     psect	text25
  7264                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  7265                           	line	4
  7266                           	global	__size_of_strlen
  7267                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  7268  0028                     	
  7269                           _strlen:	
  7270  0B3F                     ;incstack = 0
  7271                           	opt	stack 5
  7272                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  7273                           	line	8
  7274                           	
  7275                           l3543:	
  7276  0B3F                     	bcf	status, 5	;RP0=0, select bank0
  7277  0B3F  1283               	bcf	status, 6	;RP1=0, select bank0
  7278  0B40  1303               		movf	(strlen@s),w
  7279  0B41  0820               	movwf	(strlen@cp)
  7280  0B42  00A4               movf	(strlen@s+1),w
  7281  0B43  0821               movwf	(strlen@cp+1)
  7282  0B44  00A5               
  7283                           	line	9
  7284                           	goto	l3545
  7285  0B45  2B4B               	
  7286                           l1124:	
  7287  0B46                     	line	10
  7288                           	movlw	01h
  7289  0B46  3001               	addwf	(strlen@cp),f
  7290  0B47  07A4               	skipnc
  7291  0B48  1803               	incf	(strlen@cp+1),f
  7292  0B49  0AA5               	goto	l3545
  7293  0B4A  2B4B               	line	11
  7294                           	
  7295                           l1123:	
  7296  0B4B                     	line	9
  7297                           	
  7298                           l3545:	
  7299  0B4B                     	movf	(strlen@cp),w
  7300  0B4B  0824               	movwf	fsr0
  7301  0B4C  0084               	bsf	status,7
  7302  0B4D  1783               	btfss	(strlen@cp+1),0
  7303  0B4E  1C25               	bcf	status,7
  7304  0B4F  1383               	movf	(indf),w
  7305  0B50  0800               	btfss	status,2
  7306  0B51  1D03               	goto	u3241
  7307  0B52  2B54               	goto	u3240
  7308  0B53  2B55               u3241:
  7309  0B54                     	goto	l1124
  7310  0B54  2B46               u3240:
  7311  0B55                     	goto	l3547
  7312  0B55  2B56               	
  7313                           l1125:	
  7314  0B56                     	line	12
  7315                           	
  7316                           l3547:	
  7317  0B56                     	comf	(strlen@s),w
  7318  0B56  0920               	movwf	(??_strlen+0)+0
  7319  0B57  00A2               	comf	(strlen@s+1),w
  7320  0B58  0921               	movwf	((??_strlen+0)+0+1)
  7321  0B59  00A3               	incf	(??_strlen+0)+0,f
  7322  0B5A  0AA2               	skipnz
  7323  0B5B  1903               	incf	((??_strlen+0)+0+1),f
  7324  0B5C  0AA3               	movf	(strlen@cp),w
  7325  0B5D  0824               	addwf	0+(??_strlen+0)+0,w
  7326  0B5E  0722               	movwf	(?_strlen)
  7327  0B5F  00A0               	movf	(strlen@cp+1),w
  7328  0B60  0825               	skipnc
  7329  0B61  1803               	incf	(strlen@cp+1),w
  7330  0B62  0A25               	addwf	1+(??_strlen+0)+0,w
  7331  0B63  0723               	movwf	1+(?_strlen)
  7332  0B64  00A1               	goto	l1126
  7333  0B65  2B66               	
  7334                           l3549:	
  7335  0B66                     	line	13
  7336                           	
  7337                           l1126:	
  7338  0B66                     	return
  7339  0B66  0008               	opt stack 0
  7340                           GLOBAL	__end_of_strlen
  7341                           	__end_of_strlen:
  7342  0B67                     	signat	_strlen,4218
  7343                           	global	_sprintf
  7344                           
  7345 ;; *************** function _sprintf *****************
  7346 ;; Defined at:
  7347 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  sp              2   14[BANK0 ] PTR unsigned char 
  7350 ;;		 -> ObtemAmplitureDoSinal@mensagem(50), obtemTesteDoGoundBolt@mensagem(50), obtemNivelDeBateria@mensagem(50), obtemQ
       uantidadeDeSensores@mensagem(50), 
  7351 ;;		 -> main@mensagem(50), 
  7352 ;;  f               1   16[BANK0 ] PTR const unsigned char 
  7353 ;;		 -> STR_5(32), STR_4(30), STR_3(30), STR_2(32), 
  7354 ;;		 -> STR_1(3), 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  tmpval          4    0        struct .
  7357 ;;  width           2   27[BANK0 ] int 
  7358 ;;  val             2   24[BANK0 ] unsigned int 
  7359 ;;  cp              2    0        PTR const unsigned char 
  7360 ;;  len             2    0        unsigned int 
  7361 ;;  c               1   29[BANK0 ] char 
  7362 ;;  flag            1   26[BANK0 ] unsigned char 
  7363 ;;  ap              1   23[BANK0 ] PTR void [1]
  7364 ;;		 -> ?_sprintf(2), 
  7365 ;;  prec            1   22[BANK0 ] char 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  2   14[BANK0 ] int 
  7368 ;; Registers used:
  7369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7375 ;;      Params:         0       5       0       0       0
  7376 ;;      Locals:         0       8       0       0       0
  7377 ;;      Temps:          0       3       0       0       0
  7378 ;;      Totals:         0      16       0       0       0
  7379 ;;Total ram usage:       16 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; Hardware stack levels required when called:    3
  7382 ;; This function calls:
  7383 ;;		___lwdiv
  7384 ;;		___lwmod
  7385 ;;		___wmul
  7386 ;;		_isdigit
  7387 ;; This function is called by:
  7388 ;;		_main
  7389 ;;		_obtemQuantidadeDeSensores
  7390 ;;		_obtemNivelDeBateria
  7391 ;;		_obtemTesteDoGoundBolt
  7392 ;;		_ObtemAmplitureDoSinal
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  7396                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7397                           	line	492
  7398                           global __ptext26
  7399                           __ptext26:	;psect for function _sprintf
  7400  0028                     psect	text26
  7401                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7402                           	line	492
  7403                           	global	__size_of_sprintf
  7404                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  7405  0221                     	
  7406                           _sprintf:	
  7407  0028                     ;incstack = 0
  7408                           	opt	stack 4
  7409                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7410                           	line	533
  7411                           	
  7412                           l3429:	
  7413  0028                     ;doprnt.c: 494: va_list ap;
  7414                           ;doprnt.c: 499: signed char c;
  7415                           ;doprnt.c: 501: int width;
  7416                           ;doprnt.c: 506: signed char prec;
  7417                           ;doprnt.c: 508: unsigned char flag;
  7418                           ;doprnt.c: 523: union {
  7419                           ;doprnt.c: 524: unsigned long vd;
  7420                           ;doprnt.c: 525: double integ;
  7421                           ;doprnt.c: 526: } tmpval;
  7422                           ;doprnt.c: 528: unsigned int val;
  7423                           ;doprnt.c: 529: unsigned len;
  7424                           ;doprnt.c: 530: const char * cp;
  7425                           ;doprnt.c: 533: *ap = __va_start();
  7426                           	movlw	(low(?_sprintf|((0x0)<<8)+03h))&0ffh
  7427  0028  3031               	bcf	status, 5	;RP0=0, select bank0
  7428  0029  1283               	bcf	status, 6	;RP1=0, select bank0
  7429  002A  1303               	movwf	(??_sprintf+0)+0
  7430  002B  00B3               	movf	(??_sprintf+0)+0,w
  7431  002C  0833               	movwf	(sprintf@ap)
  7432  002D  00B7               	line	536
  7433                           ;doprnt.c: 536: while(c = *f++) {
  7434                           	goto	l3537
  7435  002E  2A29               	
  7436                           l642:	
  7437  002F                     	line	538
  7438                           	
  7439                           l3431:	
  7440  002F                     ;doprnt.c: 538: if(c != '%')
  7441                           		movlw	37
  7442  002F  3025               	xorwf	((sprintf@c)),w
  7443  0030  063D               	btfsc	status,2
  7444  0031  1903               	goto	u3041
  7445  0032  2834               	goto	u3040
  7446  0033  2835               u3041:
  7447  0034                     	goto	l3437
  7448  0034  2843               u3040:
  7449  0035                     	line	541
  7450                           	
  7451                           l3433:	
  7452  0035                     ;doprnt.c: 540: {
  7453                           ;doprnt.c: 541: ((*sp++ = (c)));
  7454                           	movf	(sprintf@c),w
  7455  0035  083D               	movwf	(??_sprintf+0)+0
  7456  0036  00B3               	movf	(sprintf@sp),w
  7457  0037  082E               	movwf	fsr0
  7458  0038  0084               	bsf	status,7
  7459  0039  1783               	btfss	(sprintf@sp+1),0
  7460  003A  1C2F               	bcf	status,7
  7461  003B  1383               	movf	(??_sprintf+0)+0,w
  7462  003C  0833               	movwf	indf
  7463  003D  0080               	
  7464                           l3435:	
  7465  003E                     	movlw	01h
  7466  003E  3001               	addwf	(sprintf@sp),f
  7467  003F  07AE               	skipnc
  7468  0040  1803               	incf	(sprintf@sp+1),f
  7469  0041  0AAF               	line	542
  7470                           ;doprnt.c: 542: continue;
  7471                           	goto	l3537
  7472  0042  2A29               	line	543
  7473                           	
  7474                           l643:	
  7475  0043                     	line	546
  7476                           	
  7477                           l3437:	
  7478  0043                     ;doprnt.c: 543: }
  7479                           ;doprnt.c: 546: width = 0;
  7480                           	clrf	(sprintf@width)
  7481  0043  01BB               	clrf	(sprintf@width+1)
  7482  0044  01BC               	line	548
  7483                           ;doprnt.c: 548: flag = 0;
  7484                           	clrf	(sprintf@flag)
  7485  0045  01BA               	goto	l3443
  7486  0046  284F               	line	550
  7487                           ;doprnt.c: 550: for(;;) {
  7488                           	
  7489                           l644:	
  7490  0047                     	line	551
  7491                           ;doprnt.c: 551: switch(*f) {
  7492                           	goto	l3443
  7493  0047  284F               	line	579
  7494                           ;doprnt.c: 579: case '0':
  7495                           	
  7496                           l646:	
  7497  0048                     	line	580
  7498                           ;doprnt.c: 580: flag |= 0x04;
  7499                           	bsf	(sprintf@flag)+(2/8),(2)&7
  7500  0048  153A               	line	581
  7501                           	
  7502                           l3439:	
  7503  0049                     ;doprnt.c: 581: f++;
  7504                           	movlw	low(01h)
  7505  0049  3001               	movwf	(??_sprintf+0)+0
  7506  004A  00B3               	movf	(??_sprintf+0)+0,w
  7507  004B  0833               	addwf	(sprintf@f),f
  7508  004C  07B0               	line	582
  7509                           ;doprnt.c: 582: continue;
  7510                           	goto	l3443
  7511  004D  284F               	line	584
  7512                           	
  7513                           l3441:	
  7514  004E                     ;doprnt.c: 584: }
  7515                           	goto	l3445
  7516  004E  285C               	line	551
  7517                           	
  7518                           l645:	
  7519  004F                     	
  7520                           l3443:	
  7521  004F                     	movf	(sprintf@f),w
  7522  004F  0830               	movwf	fsr0
  7523  0050  0084               	fcall	stringdir
  7524  0051  120A  158A  2000  120A  118A  	; Switch size 1, requested type "space"
  7525                           ; Number of cases is 1, Range of values is 48 to 48
  7526                           ; switch strategies available:
  7527                           ; Name         Instructions Cycles
  7528                           ; simple_byte            4     3 (average)
  7529                           ; direct_byte           14    11 (fixed)
  7530                           ; jumptable            263     9 (fixed)
  7531                           ;	Chosen strategy is simple_byte
  7532                           
  7533                           	opt asmopt_push
  7534                           	opt asmopt_off
  7535                           	xorlw	48^0	; case 48
  7536  0056  3A30               	skipnz
  7537  0057  1903               	goto	l646
  7538  0058  2848               	goto	l3445
  7539  0059  285C               	opt asmopt_pop
  7540                           
  7541                           	line	584
  7542                           	
  7543                           l648:	
  7544  005A                     	line	585
  7545                           ;doprnt.c: 585: break;
  7546                           	goto	l3445
  7547  005A  285C               	line	586
  7548                           	
  7549                           l647:	
  7550  005B                     ;doprnt.c: 586: }
  7551                           	goto	l3443
  7552  005B  284F               	
  7553                           l649:	
  7554  005C                     	line	597
  7555                           	
  7556                           l3445:	
  7557  005C                     ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  7558                           	movf	(sprintf@f),w
  7559  005C  0830               	movwf	fsr0
  7560  005D  0084               	fcall	stringdir
  7561  005E  120A  158A  2000  120A  118A  	fcall	_isdigit
  7562  0063  120A  158A  2230  120A  118A  	btfss	status,0
  7563  0068  1C03               	goto	u3051
  7564  0069  286B               	goto	u3050
  7565  006A  286C               u3051:
  7566  006B                     	goto	l3459
  7567  006B  28B7               u3050:
  7568  006C                     	line	598
  7569                           	
  7570                           l3447:	
  7571  006C                     ;doprnt.c: 598: width = 0;
  7572                           	bcf	status, 5	;RP0=0, select bank0
  7573  006C  1283               	bcf	status, 6	;RP1=0, select bank0
  7574  006D  1303               	clrf	(sprintf@width)
  7575  006E  01BB               	clrf	(sprintf@width+1)
  7576  006F  01BC               	goto	l3449
  7577  0070  2871               	line	599
  7578                           ;doprnt.c: 599: do {
  7579                           	
  7580                           l651:	
  7581  0071                     	line	600
  7582                           	
  7583                           l3449:	
  7584  0071                     ;doprnt.c: 600: width *= 10;
  7585                           	movlw	0Ah
  7586  0071  300A               	bcf	status, 5	;RP0=0, select bank0
  7587  0072  1283               	bcf	status, 6	;RP1=0, select bank0
  7588  0073  1303               	movwf	(___wmul@multiplier)
  7589  0074  00A0               	movlw	0
  7590  0075  3000               	movwf	((___wmul@multiplier))+1
  7591  0076  00A1               	movf	(sprintf@width+1),w
  7592  0077  083C               	movwf	(___wmul@multiplicand+1)
  7593  0078  00A3               	movf	(sprintf@width),w
  7594  0079  083B               	movwf	(___wmul@multiplicand)
  7595  007A  00A2               	fcall	___wmul
  7596  007B  120A  158A  2367  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7597  0080  1283               	bcf	status, 6	;RP1=0, select bank0
  7598  0081  1303               	movf	(1+(?___wmul)),w
  7599  0082  0821               	movwf	(sprintf@width+1)
  7600  0083  00BC               	movf	(0+(?___wmul)),w
  7601  0084  0820               	movwf	(sprintf@width)
  7602  0085  00BB               	line	601
  7603                           	
  7604                           l3451:	
  7605  0086                     ;doprnt.c: 601: width += *f++ - '0';
  7606                           	movf	(sprintf@f),w
  7607  0086  0830               	movwf	fsr0
  7608  0087  0084               	fcall	stringdir
  7609  0088  120A  158A  2000  120A  118A  	addlw	low(-48)
  7610  008D  3ED0               	movwf	(??_sprintf+0)+0
  7611  008E  00B3               	movlw	high(-48)
  7612  008F  30FF               	skipnc
  7613  0090  1803               	movlw	(high(-48)+1)&0ffh
  7614  0091  3000               	movwf	((??_sprintf+0)+0)+1
  7615  0092  00B4               	movf	0+(??_sprintf+0)+0,w
  7616  0093  0833               	addwf	(sprintf@width),f
  7617  0094  07BB               	skipnc
  7618  0095  1803               	incf	(sprintf@width+1),f
  7619  0096  0ABC               	movf	1+(??_sprintf+0)+0,w
  7620  0097  0834               	addwf	(sprintf@width+1),f
  7621  0098  07BC               	
  7622                           l3453:	
  7623  0099                     	movlw	low(01h)
  7624  0099  3001               	movwf	(??_sprintf+0)+0
  7625  009A  00B3               	movf	(??_sprintf+0)+0,w
  7626  009B  0833               	addwf	(sprintf@f),f
  7627  009C  07B0               	line	602
  7628                           	
  7629                           l3455:	
  7630  009D                     ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  7631                           	movf	(sprintf@f),w
  7632  009D  0830               	movwf	fsr0
  7633  009E  0084               	fcall	stringdir
  7634  009F  120A  158A  2000  120A  118A  	fcall	_isdigit
  7635  00A4  120A  158A  2230  120A  118A  	btfsc	status,0
  7636  00A9  1803               	goto	u3061
  7637  00AA  28AC               	goto	u3060
  7638  00AB  28AD               u3061:
  7639  00AC                     	goto	l3449
  7640  00AC  2871               u3060:
  7641  00AD                     	goto	l3459
  7642  00AD  28B7               	
  7643                           l652:	
  7644  00AE                     	goto	l3459
  7645  00AE  28B7               	line	608
  7646                           	
  7647                           l650:	
  7648  00AF                     	line	635
  7649                           ;doprnt.c: 608: }
  7650                           ;doprnt.c: 635: switch(c = *f++) {
  7651                           	goto	l3459
  7652  00AF  28B7               	line	637
  7653                           ;doprnt.c: 637: case 0:
  7654                           	
  7655                           l654:	
  7656  00B0                     	line	638
  7657                           ;doprnt.c: 638: goto alldone;
  7658                           	goto	l3539
  7659  00B0  2A3F               	line	697
  7660                           ;doprnt.c: 697: case 'd':
  7661                           	
  7662                           l656:	
  7663  00B1                     	goto	l658
  7664  00B1  28D1               	line	698
  7665                           	
  7666                           l657:	
  7667  00B2                     	line	699
  7668                           ;doprnt.c: 698: case 'i':
  7669                           ;doprnt.c: 699: break;
  7670                           	goto	l658
  7671  00B2  28D1               	line	802
  7672                           ;doprnt.c: 802: default:
  7673                           	
  7674                           l659:	
  7675  00B3                     	line	813
  7676                           ;doprnt.c: 813: continue;
  7677                           	goto	l3537
  7678  00B3  2A29               	line	817
  7679                           ;doprnt.c: 817: case 'u':
  7680                           	
  7681                           l660:	
  7682  00B4                     	line	818
  7683                           ;doprnt.c: 818: flag |= 0x40;
  7684                           	bsf	(sprintf@flag)+(6/8),(6)&7
  7685  00B4  173A               	line	819
  7686                           ;doprnt.c: 819: break;
  7687                           	goto	l658
  7688  00B5  28D1               	line	822
  7689                           	
  7690                           l3457:	
  7691  00B6                     ;doprnt.c: 822: }
  7692                           	goto	l658
  7693  00B6  28D1               	line	635
  7694                           	
  7695                           l653:	
  7696  00B7                     	
  7697                           l3459:	
  7698  00B7                     	movlw	01h
  7699  00B7  3001               	bcf	status, 5	;RP0=0, select bank0
  7700  00B8  1283               	bcf	status, 6	;RP1=0, select bank0
  7701  00B9  1303               	addwf	(sprintf@f),f
  7702  00BA  07B0               	movlw	-01h
  7703  00BB  30FF               	addwf	(sprintf@f),w
  7704  00BC  0730               	movwf	fsr0
  7705  00BD  0084               	fcall	stringdir
  7706  00BE  120A  158A  2000  120A  118A  	movwf	(sprintf@c)
  7707  00C3  00BD               	; Switch size 1, requested type "space"
  7708                           ; Number of cases is 4, Range of values is 0 to 117
  7709                           ; switch strategies available:
  7710                           ; Name         Instructions Cycles
  7711                           ; simple_byte           13     7 (average)
  7712                           ; jumptable            260     6 (fixed)
  7713                           ;	Chosen strategy is simple_byte
  7714                           
  7715                           	opt asmopt_push
  7716                           	opt asmopt_off
  7717                           	xorlw	0^0	; case 0
  7718  00C4  3A00               	skipnz
  7719  00C5  1903               	goto	l3539
  7720  00C6  2A3F               	xorlw	100^0	; case 100
  7721  00C7  3A64               	skipnz
  7722  00C8  1903               	goto	l658
  7723  00C9  28D1               	xorlw	105^100	; case 105
  7724  00CA  3A0D               	skipnz
  7725  00CB  1903               	goto	l658
  7726  00CC  28D1               	xorlw	117^105	; case 117
  7727  00CD  3A1C               	skipnz
  7728  00CE  1903               	goto	l660
  7729  00CF  28B4               	goto	l3537
  7730  00D0  2A29               	opt asmopt_pop
  7731                           
  7732                           	line	822
  7733                           	
  7734                           l658:	
  7735  00D1                     	line	1251
  7736                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  7737                           	bcf	status, 5	;RP0=0, select bank0
  7738  00D1  1283               	bcf	status, 6	;RP1=0, select bank0
  7739  00D2  1303               	btfsc	(sprintf@flag),(6)&7
  7740  00D3  1B3A               	goto	u3071
  7741  00D4  28D6               	goto	u3070
  7742  00D5  28D7               u3071:
  7743  00D6                     	goto	l3471
  7744  00D6  28F2               u3070:
  7745  00D7                     	line	1259
  7746                           	
  7747                           l3461:	
  7748  00D7                     ;doprnt.c: 1253: {
  7749                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7750                           	movf	(sprintf@ap),w
  7751  00D7  0837               	movwf	fsr0
  7752  00D8  0084               	bcf	status, 7	;select IRP bank0
  7753  00D9  1383               	movf	indf,w
  7754  00DA  0800               	movwf	(sprintf@val)
  7755  00DB  00B8               	incf	fsr0,f
  7756  00DC  0A84               	movf	indf,w
  7757  00DD  0800               	movwf	(sprintf@val+1)
  7758  00DE  00B9               	
  7759                           l3463:	
  7760  00DF                     	movlw	low(02h)
  7761  00DF  3002               	movwf	(??_sprintf+0)+0
  7762  00E0  00B3               	movf	(??_sprintf+0)+0,w
  7763  00E1  0833               	addwf	(sprintf@ap),f
  7764  00E2  07B7               	line	1261
  7765                           	
  7766                           l3465:	
  7767  00E3                     ;doprnt.c: 1261: if((int)val < 0) {
  7768                           	btfss	(sprintf@val+1),7
  7769  00E3  1FB9               	goto	u3081
  7770  00E4  28E6               	goto	u3080
  7771  00E5  28E7               u3081:
  7772  00E6                     	goto	l3475
  7773  00E6  28FF               u3080:
  7774  00E7                     	line	1262
  7775                           	
  7776                           l3467:	
  7777  00E7                     ;doprnt.c: 1262: flag |= 0x03;
  7778                           	movlw	low(03h)
  7779  00E7  3003               	movwf	(??_sprintf+0)+0
  7780  00E8  00B3               	movf	(??_sprintf+0)+0,w
  7781  00E9  0833               	iorwf	(sprintf@flag),f
  7782  00EA  04BA               	line	1263
  7783                           	
  7784                           l3469:	
  7785  00EB                     ;doprnt.c: 1263: val = -val;
  7786                           	comf	(sprintf@val),f
  7787  00EB  09B8               	comf	(sprintf@val+1),f
  7788  00EC  09B9               	incf	(sprintf@val),f
  7789  00ED  0AB8               	skipnz
  7790  00EE  1903               	incf	(sprintf@val+1),f
  7791  00EF  0AB9               	goto	l3475
  7792  00F0  28FF               	line	1264
  7793                           	
  7794                           l662:	
  7795  00F1                     	line	1266
  7796                           ;doprnt.c: 1264: }
  7797                           ;doprnt.c: 1266: }
  7798                           	goto	l3475
  7799  00F1  28FF               	line	1268
  7800                           	
  7801                           l661:	
  7802  00F2                     	line	1286
  7803                           	
  7804                           l3471:	
  7805  00F2                     ;doprnt.c: 1268: else
  7806                           ;doprnt.c: 1273: {
  7807                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7808                           	movf	(sprintf@ap),w
  7809  00F2  0837               	movwf	fsr0
  7810  00F3  0084               	bcf	status, 7	;select IRP bank0
  7811  00F4  1383               	movf	indf,w
  7812  00F5  0800               	movwf	(sprintf@val)
  7813  00F6  00B8               	incf	fsr0,f
  7814  00F7  0A84               	movf	indf,w
  7815  00F8  0800               	movwf	(sprintf@val+1)
  7816  00F9  00B9               	
  7817                           l3473:	
  7818  00FA                     	movlw	low(02h)
  7819  00FA  3002               	movwf	(??_sprintf+0)+0
  7820  00FB  00B3               	movf	(??_sprintf+0)+0,w
  7821  00FC  0833               	addwf	(sprintf@ap),f
  7822  00FD  07B7               	goto	l3475
  7823  00FE  28FF               	line	1287
  7824                           	
  7825                           l663:	
  7826  00FF                     	line	1305
  7827                           	
  7828                           l3475:	
  7829  00FF                     ;doprnt.c: 1287: }
  7830                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7831                           	clrf	(sprintf@c)
  7832  00FF  01BD               	incf	(sprintf@c),f
  7833  0100  0ABD               	
  7834                           l3477:	
  7835  0101                     		movlw	5
  7836  0101  3005               	xorwf	((sprintf@c)),w
  7837  0102  063D               	btfss	status,2
  7838  0103  1D03               	goto	u3091
  7839  0104  2906               	goto	u3090
  7840  0105  2907               u3091:
  7841  0106                     	goto	l3481
  7842  0106  2909               u3090:
  7843  0107                     	goto	l3487
  7844  0107  2931               	
  7845                           l3479:	
  7846  0108                     	goto	l3487
  7847  0108  2931               	line	1306
  7848                           	
  7849                           l664:	
  7850  0109                     	
  7851                           l3481:	
  7852  0109                     ;doprnt.c: 1306: if(val < dpowers[c])
  7853                           	movf	(sprintf@c),w
  7854  0109  083D               	movwf	(??_sprintf+0)+0
  7855  010A  00B3               	addwf	(??_sprintf+0)+0,w
  7856  010B  0733               	addlw	low((((_dpowers)-__stringbase)|8000h))
  7857  010C  3E01               	movwf	fsr0
  7858  010D  0084               	fcall	stringdir
  7859  010E  120A  158A  2000  120A  118A  	movwf	(??_sprintf+1)+0
  7860  0113  00B4               	fcall	stringdir
  7861  0114  120A  158A  2000  120A  118A  	movwf	(??_sprintf+1)+0+1
  7862  0119  00B5               	movf	1+(??_sprintf+1)+0,w
  7863  011A  0835               	subwf	(sprintf@val+1),w
  7864  011B  0239               	skipz
  7865  011C  1D03               	goto	u3105
  7866  011D  2920               	movf	0+(??_sprintf+1)+0,w
  7867  011E  0834               	subwf	(sprintf@val),w
  7868  011F  0238               u3105:
  7869  0120                     	skipnc
  7870  0120  1803               	goto	u3101
  7871  0121  2923               	goto	u3100
  7872  0122  2924               u3101:
  7873  0123                     	goto	l3485
  7874  0123  2926               u3100:
  7875  0124                     	goto	l3487
  7876  0124  2931               	line	1307
  7877                           	
  7878                           l3483:	
  7879  0125                     ;doprnt.c: 1307: break;
  7880                           	goto	l3487
  7881  0125  2931               	
  7882                           l666:	
  7883  0126                     	line	1305
  7884                           	
  7885                           l3485:	
  7886  0126                     	movlw	low(01h)
  7887  0126  3001               	movwf	(??_sprintf+0)+0
  7888  0127  00B3               	movf	(??_sprintf+0)+0,w
  7889  0128  0833               	addwf	(sprintf@c),f
  7890  0129  07BD               		movlw	5
  7891  012A  3005               	xorwf	((sprintf@c)),w
  7892  012B  063D               	btfss	status,2
  7893  012C  1D03               	goto	u3111
  7894  012D  292F               	goto	u3110
  7895  012E  2930               u3111:
  7896  012F                     	goto	l3481
  7897  012F  2909               u3110:
  7898  0130                     	goto	l3487
  7899  0130  2931               	
  7900                           l665:	
  7901  0131                     	line	1345
  7902                           	
  7903                           l3487:	
  7904  0131                     ;doprnt.c: 1345: if(width && flag & 0x03)
  7905                           	movf	((sprintf@width)),w
  7906  0131  083B               iorwf	((sprintf@width+1)),w
  7907  0132  043C               	btfsc	status,2
  7908  0133  1903               	goto	u3121
  7909  0134  2936               	goto	u3120
  7910  0135  2937               u3121:
  7911  0136                     	goto	l667
  7912  0136  2943               u3120:
  7913  0137                     	
  7914                           l3489:	
  7915  0137                     	movf	(sprintf@flag),w
  7916  0137  083A               	andlw	03h
  7917  0138  3903               	btfsc	status,2
  7918  0139  1903               	goto	u3131
  7919  013A  293C               	goto	u3130
  7920  013B  293D               u3131:
  7921  013C                     	goto	l667
  7922  013C  2943               u3130:
  7923  013D                     	line	1346
  7924                           	
  7925                           l3491:	
  7926  013D                     ;doprnt.c: 1346: width--;
  7927                           	movlw	0FFh
  7928  013D  30FF               	addwf	(sprintf@width),f
  7929  013E  07BB               	skipnc
  7930  013F  1803               	incf	(sprintf@width+1),f
  7931  0140  0ABC               	movlw	0FFh
  7932  0141  30FF               	addwf	(sprintf@width+1),f
  7933  0142  07BC               	
  7934                           l667:	
  7935  0143                     	line	1381
  7936                           ;doprnt.c: 1381: if(width > c)
  7937                           	movf	(sprintf@c),w
  7938  0143  083D               	movwf	(??_sprintf+0)+0
  7939  0144  00B3               	clrf	(??_sprintf+0)+0+1
  7940  0145  01B4               	btfsc	(??_sprintf+0)+0,7
  7941  0146  1BB3               	decf	(??_sprintf+0)+0+1,f
  7942  0147  03B4               	movf	1+(??_sprintf+0)+0,w
  7943  0148  0834               	xorlw	80h
  7944  0149  3A80               	movwf	(??_sprintf+2)+0
  7945  014A  00B5               	movf	(sprintf@width+1),w
  7946  014B  083C               	xorlw	80h
  7947  014C  3A80               	subwf	(??_sprintf+2)+0,w
  7948  014D  0235               	skipz
  7949  014E  1D03               	goto	u3145
  7950  014F  2952               	movf	(sprintf@width),w
  7951  0150  083B               	subwf	0+(??_sprintf+0)+0,w
  7952  0151  0233               u3145:
  7953  0152                     
  7954                           	skipnc
  7955  0152  1803               	goto	u3141
  7956  0153  2955               	goto	u3140
  7957  0154  2956               u3141:
  7958  0155                     	goto	l3495
  7959  0155  2964               u3140:
  7960  0156                     	line	1382
  7961                           	
  7962                           l3493:	
  7963  0156                     ;doprnt.c: 1382: width -= c;
  7964                           	bcf	status, 5	;RP0=0, select bank0
  7965  0156  1283               	bcf	status, 6	;RP1=0, select bank0
  7966  0157  1303               	movf	(sprintf@c),w
  7967  0158  083D               	movwf	(??_sprintf+0)+0
  7968  0159  00B3               	clrf	(??_sprintf+0)+0+1
  7969  015A  01B4               	btfsc	(??_sprintf+0)+0,7
  7970  015B  1BB3               	decf	(??_sprintf+0)+0+1,f
  7971  015C  03B4               	movf	0+(??_sprintf+0)+0,w
  7972  015D  0833               	subwf	(sprintf@width),f
  7973  015E  02BB               	movf	1+(??_sprintf+0)+0,w
  7974  015F  0834               	skipc
  7975  0160  1C03               	decf	(sprintf@width+1),f
  7976  0161  03BC               	subwf	(sprintf@width+1),f
  7977  0162  02BC               	goto	l3497
  7978  0163  2969               	line	1383
  7979                           	
  7980                           l668:	
  7981  0164                     	line	1384
  7982                           	
  7983                           l3495:	
  7984  0164                     ;doprnt.c: 1383: else
  7985                           ;doprnt.c: 1384: width = 0;
  7986                           	bcf	status, 5	;RP0=0, select bank0
  7987  0164  1283               	bcf	status, 6	;RP1=0, select bank0
  7988  0165  1303               	clrf	(sprintf@width)
  7989  0166  01BB               	clrf	(sprintf@width+1)
  7990  0167  01BC               	goto	l3497
  7991  0168  2969               	
  7992                           l669:	
  7993  0169                     	line	1387
  7994                           	
  7995                           l3497:	
  7996  0169                     ;doprnt.c: 1387: if(flag & 0x04) {
  7997                           	btfss	(sprintf@flag),(2)&7
  7998  0169  1D3A               	goto	u3151
  7999  016A  296C               	goto	u3150
  8000  016B  296D               u3151:
  8001  016C                     	goto	l3513
  8002  016C  29A4               u3150:
  8003  016D                     	line	1392
  8004                           	
  8005                           l3499:	
  8006  016D                     ;doprnt.c: 1392: if(flag & 0x03)
  8007                           	movf	(sprintf@flag),w
  8008  016D  083A               	andlw	03h
  8009  016E  3903               	btfsc	status,2
  8010  016F  1903               	goto	u3161
  8011  0170  2972               	goto	u3160
  8012  0171  2973               u3161:
  8013  0172                     	goto	l3505
  8014  0172  2981               u3160:
  8015  0173                     	line	1393
  8016                           	
  8017                           l3501:	
  8018  0173                     ;doprnt.c: 1393: ((*sp++ = ('-')));
  8019                           	movlw	low(02Dh)
  8020  0173  302D               	movwf	(??_sprintf+0)+0
  8021  0174  00B3               	movf	(sprintf@sp),w
  8022  0175  082E               	movwf	fsr0
  8023  0176  0084               	bsf	status,7
  8024  0177  1783               	btfss	(sprintf@sp+1),0
  8025  0178  1C2F               	bcf	status,7
  8026  0179  1383               	movf	(??_sprintf+0)+0,w
  8027  017A  0833               	movwf	indf
  8028  017B  0080               	
  8029                           l3503:	
  8030  017C                     	movlw	01h
  8031  017C  3001               	addwf	(sprintf@sp),f
  8032  017D  07AE               	skipnc
  8033  017E  1803               	incf	(sprintf@sp+1),f
  8034  017F  0AAF               	goto	l3505
  8035  0180  2981               	
  8036                           l671:	
  8037  0181                     	line	1415
  8038                           	
  8039                           l3505:	
  8040  0181                     ;doprnt.c: 1415: if(width)
  8041                           	movf	((sprintf@width)),w
  8042  0181  083B               iorwf	((sprintf@width+1)),w
  8043  0182  043C               	btfsc	status,2
  8044  0183  1903               	goto	u3171
  8045  0184  2986               	goto	u3170
  8046  0185  2987               u3171:
  8047  0186                     	goto	l3527
  8048  0186  29DB               u3170:
  8049  0187                     	goto	l3507
  8050  0187  2988               	line	1416
  8051                           ;doprnt.c: 1416: do
  8052                           	
  8053                           l673:	
  8054  0188                     	line	1417
  8055                           	
  8056                           l3507:	
  8057  0188                     ;doprnt.c: 1417: ((*sp++ = ('0')));
  8058                           	movlw	low(030h)
  8059  0188  3030               	movwf	(??_sprintf+0)+0
  8060  0189  00B3               	movf	(sprintf@sp),w
  8061  018A  082E               	movwf	fsr0
  8062  018B  0084               	bsf	status,7
  8063  018C  1783               	btfss	(sprintf@sp+1),0
  8064  018D  1C2F               	bcf	status,7
  8065  018E  1383               	movf	(??_sprintf+0)+0,w
  8066  018F  0833               	movwf	indf
  8067  0190  0080               	
  8068                           l3509:	
  8069  0191                     	movlw	01h
  8070  0191  3001               	addwf	(sprintf@sp),f
  8071  0192  07AE               	skipnc
  8072  0193  1803               	incf	(sprintf@sp+1),f
  8073  0194  0AAF               	line	1418
  8074                           	
  8075                           l3511:	
  8076  0195                     ;doprnt.c: 1418: while(--width);
  8077                           	movlw	0FFh
  8078  0195  30FF               	addwf	(sprintf@width),f
  8079  0196  07BB               	skipnc
  8080  0197  1803               	incf	(sprintf@width+1),f
  8081  0198  0ABC               	movlw	0FFh
  8082  0199  30FF               	addwf	(sprintf@width+1),f
  8083  019A  07BC               	movf	(((sprintf@width))),w
  8084  019B  083B               iorwf	(((sprintf@width+1))),w
  8085  019C  043C               	btfss	status,2
  8086  019D  1D03               	goto	u3181
  8087  019E  29A0               	goto	u3180
  8088  019F  29A1               u3181:
  8089  01A0                     	goto	l3507
  8090  01A0  2988               u3180:
  8091  01A1                     	goto	l3527
  8092  01A1  29DB               	
  8093                           l674:	
  8094  01A2                     	goto	l3527
  8095  01A2  29DB               	
  8096                           l672:	
  8097  01A3                     	line	1420
  8098                           ;doprnt.c: 1420: } else
  8099                           	goto	l3527
  8100  01A3  29DB               	
  8101                           l670:	
  8102  01A4                     	line	1428
  8103                           	
  8104                           l3513:	
  8105  01A4                     ;doprnt.c: 1422: {
  8106                           ;doprnt.c: 1424: if(width
  8107                           ;doprnt.c: 1428: )
  8108                           	movf	((sprintf@width)),w
  8109  01A4  083B               iorwf	((sprintf@width+1)),w
  8110  01A5  043C               	btfsc	status,2
  8111  01A6  1903               	goto	u3191
  8112  01A7  29A9               	goto	u3190
  8113  01A8  29AA               u3191:
  8114  01A9                     	goto	l3521
  8115  01A9  29C6               u3190:
  8116  01AA                     	goto	l3515
  8117  01AA  29AB               	line	1429
  8118                           ;doprnt.c: 1429: do
  8119                           	
  8120                           l677:	
  8121  01AB                     	line	1430
  8122                           	
  8123                           l3515:	
  8124  01AB                     ;doprnt.c: 1430: ((*sp++ = (' ')));
  8125                           	movlw	low(020h)
  8126  01AB  3020               	movwf	(??_sprintf+0)+0
  8127  01AC  00B3               	movf	(sprintf@sp),w
  8128  01AD  082E               	movwf	fsr0
  8129  01AE  0084               	bsf	status,7
  8130  01AF  1783               	btfss	(sprintf@sp+1),0
  8131  01B0  1C2F               	bcf	status,7
  8132  01B1  1383               	movf	(??_sprintf+0)+0,w
  8133  01B2  0833               	movwf	indf
  8134  01B3  0080               	
  8135                           l3517:	
  8136  01B4                     	movlw	01h
  8137  01B4  3001               	addwf	(sprintf@sp),f
  8138  01B5  07AE               	skipnc
  8139  01B6  1803               	incf	(sprintf@sp+1),f
  8140  01B7  0AAF               	line	1431
  8141                           	
  8142                           l3519:	
  8143  01B8                     ;doprnt.c: 1431: while(--width);
  8144                           	movlw	0FFh
  8145  01B8  30FF               	addwf	(sprintf@width),f
  8146  01B9  07BB               	skipnc
  8147  01BA  1803               	incf	(sprintf@width+1),f
  8148  01BB  0ABC               	movlw	0FFh
  8149  01BC  30FF               	addwf	(sprintf@width+1),f
  8150  01BD  07BC               	movf	(((sprintf@width))),w
  8151  01BE  083B               iorwf	(((sprintf@width+1))),w
  8152  01BF  043C               	btfss	status,2
  8153  01C0  1D03               	goto	u3201
  8154  01C1  29C3               	goto	u3200
  8155  01C2  29C4               u3201:
  8156  01C3                     	goto	l3515
  8157  01C3  29AB               u3200:
  8158  01C4                     	goto	l3521
  8159  01C4  29C6               	
  8160                           l678:	
  8161  01C5                     	goto	l3521
  8162  01C5  29C6               	
  8163                           l676:	
  8164  01C6                     	line	1438
  8165                           	
  8166                           l3521:	
  8167  01C6                     ;doprnt.c: 1438: if(flag & 0x03)
  8168                           	movf	(sprintf@flag),w
  8169  01C6  083A               	andlw	03h
  8170  01C7  3903               	btfsc	status,2
  8171  01C8  1903               	goto	u3211
  8172  01C9  29CB               	goto	u3210
  8173  01CA  29CC               u3211:
  8174  01CB                     	goto	l3527
  8175  01CB  29DB               u3210:
  8176  01CC                     	line	1439
  8177                           	
  8178                           l3523:	
  8179  01CC                     ;doprnt.c: 1439: ((*sp++ = ('-')));
  8180                           	movlw	low(02Dh)
  8181  01CC  302D               	movwf	(??_sprintf+0)+0
  8182  01CD  00B3               	movf	(sprintf@sp),w
  8183  01CE  082E               	movwf	fsr0
  8184  01CF  0084               	bsf	status,7
  8185  01D0  1783               	btfss	(sprintf@sp+1),0
  8186  01D1  1C2F               	bcf	status,7
  8187  01D2  1383               	movf	(??_sprintf+0)+0,w
  8188  01D3  0833               	movwf	indf
  8189  01D4  0080               	
  8190                           l3525:	
  8191  01D5                     	movlw	01h
  8192  01D5  3001               	addwf	(sprintf@sp),f
  8193  01D6  07AE               	skipnc
  8194  01D7  1803               	incf	(sprintf@sp+1),f
  8195  01D8  0AAF               	goto	l3527
  8196  01D9  29DB               	
  8197                           l679:	
  8198  01DA                     	goto	l3527
  8199  01DA  29DB               	line	1469
  8200                           	
  8201                           l675:	
  8202  01DB                     	line	1472
  8203                           	
  8204                           l3527:	
  8205  01DB                     ;doprnt.c: 1469: }
  8206                           ;doprnt.c: 1472: prec = c;
  8207                           	movf	(sprintf@c),w
  8208  01DB  083D               	movwf	(??_sprintf+0)+0
  8209  01DC  00B3               	movf	(??_sprintf+0)+0,w
  8210  01DD  0833               	movwf	(sprintf@prec)
  8211  01DE  00B6               	line	1474
  8212                           ;doprnt.c: 1474: while(prec--) {
  8213                           	goto	l3535
  8214  01DF  2A1E               	
  8215                           l681:	
  8216  01E0                     	line	1489
  8217                           	
  8218                           l3529:	
  8219  01E0                     ;doprnt.c: 1478: {
  8220                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8221                           	movlw	0Ah
  8222  01E0  300A               	movwf	(___lwmod@divisor)
  8223  01E1  00A8               	movlw	0
  8224  01E2  3000               	movwf	((___lwmod@divisor))+1
  8225  01E3  00A9               	movf	(sprintf@prec),w
  8226  01E4  0836               	movwf	(??_sprintf+0)+0
  8227  01E5  00B3               	addwf	(??_sprintf+0)+0,w
  8228  01E6  0733               	addlw	low((((_dpowers)-__stringbase)|8000h))
  8229  01E7  3E01               	movwf	fsr0
  8230  01E8  0084               	fcall	stringdir
  8231  01E9  120A  158A  2000  120A  118A  	movwf	(___lwdiv@divisor)
  8232  01EE  00A0               	fcall	stringdir
  8233  01EF  120A  158A  2000  120A  118A  	movwf	(___lwdiv@divisor+1)
  8234  01F4  00A1               	movf	(sprintf@val+1),w
  8235  01F5  0839               	movwf	(___lwdiv@dividend+1)
  8236  01F6  00A3               	movf	(sprintf@val),w
  8237  01F7  0838               	movwf	(___lwdiv@dividend)
  8238  01F8  00A2               	fcall	___lwdiv
  8239  01F9  120A  158A  24E5  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  8240  01FE  1283               	bcf	status, 6	;RP1=0, select bank0
  8241  01FF  1303               	movf	(1+(?___lwdiv)),w
  8242  0200  0821               	movwf	(___lwmod@dividend+1)
  8243  0201  00AB               	movf	(0+(?___lwdiv)),w
  8244  0202  0820               	movwf	(___lwmod@dividend)
  8245  0203  00AA               	fcall	___lwmod
  8246  0204  120A  158A  240B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  8247  0209  1283               	bcf	status, 6	;RP1=0, select bank0
  8248  020A  1303               	movf	(0+(?___lwmod)),w
  8249  020B  0828               	addlw	030h
  8250  020C  3E30               	movwf	(??_sprintf+1)+0
  8251  020D  00B4               	movf	(??_sprintf+1)+0,w
  8252  020E  0834               	movwf	(sprintf@c)
  8253  020F  00BD               	line	1524
  8254                           	
  8255                           l3531:	
  8256  0210                     ;doprnt.c: 1523: }
  8257                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8258                           	movf	(sprintf@c),w
  8259  0210  083D               	movwf	(??_sprintf+0)+0
  8260  0211  00B3               	movf	(sprintf@sp),w
  8261  0212  082E               	movwf	fsr0
  8262  0213  0084               	bsf	status,7
  8263  0214  1783               	btfss	(sprintf@sp+1),0
  8264  0215  1C2F               	bcf	status,7
  8265  0216  1383               	movf	(??_sprintf+0)+0,w
  8266  0217  0833               	movwf	indf
  8267  0218  0080               	
  8268                           l3533:	
  8269  0219                     	movlw	01h
  8270  0219  3001               	addwf	(sprintf@sp),f
  8271  021A  07AE               	skipnc
  8272  021B  1803               	incf	(sprintf@sp+1),f
  8273  021C  0AAF               	goto	l3535
  8274  021D  2A1E               	line	1525
  8275                           	
  8276                           l680:	
  8277  021E                     	line	1474
  8278                           	
  8279                           l3535:	
  8280  021E                     	movlw	low(-1)
  8281  021E  30FF               	movwf	(??_sprintf+0)+0
  8282  021F  00B3               	movf	(??_sprintf+0)+0,w
  8283  0220  0833               	addwf	(sprintf@prec),f
  8284  0221  07B6               		incf	(((sprintf@prec))),w
  8285  0222  0A36               	btfss	status,2
  8286  0223  1D03               	goto	u3221
  8287  0224  2A26               	goto	u3220
  8288  0225  2A27               u3221:
  8289  0226                     	goto	l3529
  8290  0226  29E0               u3220:
  8291  0227                     	goto	l3537
  8292  0227  2A29               	
  8293                           l682:	
  8294  0228                     	goto	l3537
  8295  0228  2A29               	line	1533
  8296                           	
  8297                           l641:	
  8298  0229                     	line	536
  8299                           	
  8300                           l3537:	
  8301  0229                     	movlw	01h
  8302  0229  3001               	bcf	status, 5	;RP0=0, select bank0
  8303  022A  1283               	bcf	status, 6	;RP1=0, select bank0
  8304  022B  1303               	addwf	(sprintf@f),f
  8305  022C  07B0               	movlw	-01h
  8306  022D  30FF               	addwf	(sprintf@f),w
  8307  022E  0730               	movwf	fsr0
  8308  022F  0084               	fcall	stringdir
  8309  0230  120A  158A  2000  120A  118A  	movwf	(??_sprintf+0)+0
  8310  0235  00B3               	movf	(??_sprintf+0)+0,w
  8311  0236  0833               	movwf	(sprintf@c)
  8312  0237  00BD               	movf	(((sprintf@c))),w
  8313  0238  083D               	btfss	status,2
  8314  0239  1D03               	goto	u3231
  8315  023A  2A3C               	goto	u3230
  8316  023B  2A3D               u3231:
  8317  023C                     	goto	l3431
  8318  023C  282F               u3230:
  8319  023D                     	goto	l3539
  8320  023D  2A3F               	
  8321                           l683:	
  8322  023E                     	goto	l3539
  8323  023E  2A3F               	line	1535
  8324                           ;doprnt.c: 1525: }
  8325                           ;doprnt.c: 1533: }
  8326                           ;doprnt.c: 1535: alldone:
  8327                           	
  8328                           l655:	
  8329  023F                     	line	1538
  8330                           	
  8331                           l3539:	
  8332  023F                     ;doprnt.c: 1538: *sp = 0;
  8333                           	bcf	status, 5	;RP0=0, select bank0
  8334  023F  1283               	bcf	status, 6	;RP1=0, select bank0
  8335  0240  1303               	movf	(sprintf@sp),w
  8336  0241  082E               	movwf	fsr0
  8337  0242  0084               	bsf	status,7
  8338  0243  1783               	btfss	(sprintf@sp+1),0
  8339  0244  1C2F               	bcf	status,7
  8340  0245  1383               	clrf	indf
  8341  0246  0180               	goto	l684
  8342  0247  2A48               	line	1540
  8343                           	
  8344                           l3541:	
  8345  0248                     	line	1541
  8346                           ;doprnt.c: 1540: return 0;
  8347                           ;	Return value of _sprintf is never used
  8348                           	
  8349                           l684:	
  8350  0248                     	return
  8351  0248  0008               	opt stack 0
  8352                           GLOBAL	__end_of_sprintf
  8353                           	__end_of_sprintf:
  8354  0249                     	signat	_sprintf,4698
  8355                           	global	_isdigit
  8356                           
  8357 ;; *************** function _isdigit *****************
  8358 ;; Defined at:
  8359 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  c               1    wreg     unsigned char 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  c               1    1[BANK0 ] unsigned char 
  8364 ;; Return value:  Size  Location     Type
  8365 ;;		None               void
  8366 ;; Registers used:
  8367 ;;		wreg, status,2, status,0
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8373 ;;      Params:         0       0       0       0       0
  8374 ;;      Locals:         0       2       0       0       0
  8375 ;;      Temps:          0       0       0       0       0
  8376 ;;      Totals:         0       2       0       0       0
  8377 ;;Total ram usage:        2 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; Hardware stack levels required when called:    2
  8380 ;; This function calls:
  8381 ;;		Nothing
  8382 ;; This function is called by:
  8383 ;;		_sprintf
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           psect	text27,local,class=CODE,delta=2,merge=1,group=2
  8387                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  8388                           	line	8
  8389                           global __ptext27
  8390                           __ptext27:	;psect for function _isdigit
  8391  0A30                     psect	text27
  8392                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  8393                           	line	8
  8394                           	global	__size_of_isdigit
  8395                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
  8396  0016                     	
  8397                           _isdigit:	
  8398  0A30                     ;incstack = 0
  8399                           	opt	stack 4
  8400                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8401                           ;isdigit@c stored from wreg
  8402                           	bcf	status, 5	;RP0=0, select bank0
  8403  0A30  1283               	bcf	status, 6	;RP1=0, select bank0
  8404  0A31  1303               	movwf	(isdigit@c)
  8405  0A32  00A1               	line	14
  8406                           	
  8407                           l3333:	
  8408  0A33                     	clrf	(_isdigit$1225)
  8409  0A33  01A0               	
  8410                           l3335:	
  8411  0A34                     	movlw	low(03Ah)
  8412  0A34  303A               	subwf	(isdigit@c),w
  8413  0A35  0221               	skipnc
  8414  0A36  1803               	goto	u2841
  8415  0A37  2A39               	goto	u2840
  8416  0A38  2A3A               u2841:
  8417  0A39                     	goto	l3341
  8418  0A39  2A43               u2840:
  8419  0A3A                     	
  8420                           l3337:	
  8421  0A3A                     	movlw	low(030h)
  8422  0A3A  3030               	subwf	(isdigit@c),w
  8423  0A3B  0221               	skipc
  8424  0A3C  1C03               	goto	u2851
  8425  0A3D  2A3F               	goto	u2850
  8426  0A3E  2A40               u2851:
  8427  0A3F                     	goto	l3341
  8428  0A3F  2A43               u2850:
  8429  0A40                     	
  8430                           l3339:	
  8431  0A40                     	clrf	(_isdigit$1225)
  8432  0A40  01A0               	incf	(_isdigit$1225),f
  8433  0A41  0AA0               	goto	l3341
  8434  0A42  2A43               	
  8435                           l921:	
  8436  0A43                     	
  8437                           l3341:	
  8438  0A43                     	rrf	(_isdigit$1225),w
  8439  0A43  0C20               	
  8440                           	goto	l922
  8441  0A44  2A45               	
  8442                           l3343:	
  8443  0A45                     	line	15
  8444                           	
  8445                           l922:	
  8446  0A45                     	return
  8447  0A45  0008               	opt stack 0
  8448                           GLOBAL	__end_of_isdigit
  8449                           	__end_of_isdigit:
  8450  0A46                     	signat	_isdigit,4216
  8451                           	global	___wmul
  8452                           
  8453 ;; *************** function ___wmul *****************
  8454 ;; Defined at:
  8455 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8458 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;  product         2    4[BANK0 ] unsigned int 
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  2    0[BANK0 ] unsigned int 
  8463 ;; Registers used:
  8464 ;;		wreg, status,2, status,0
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8470 ;;      Params:         0       4       0       0       0
  8471 ;;      Locals:         0       2       0       0       0
  8472 ;;      Temps:          0       0       0       0       0
  8473 ;;      Totals:         0       6       0       0       0
  8474 ;;Total ram usage:        6 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; Hardware stack levels required when called:    2
  8477 ;; This function calls:
  8478 ;;		Nothing
  8479 ;; This function is called by:
  8480 ;;		_sprintf
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           psect	text28,local,class=CODE,delta=2,merge=1,group=2
  8484                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8485                           	line	15
  8486                           global __ptext28
  8487                           __ptext28:	;psect for function ___wmul
  8488  0B67                     psect	text28
  8489                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8490                           	line	15
  8491                           	global	__size_of___wmul
  8492                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  8493  002A                     	
  8494                           ___wmul:	
  8495  0B67                     ;incstack = 0
  8496                           	opt	stack 4
  8497                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8498                           	line	43
  8499                           	
  8500                           l3345:	
  8501  0B67                     	bcf	status, 5	;RP0=0, select bank0
  8502  0B67  1283               	bcf	status, 6	;RP1=0, select bank0
  8503  0B68  1303               	clrf	(___wmul@product)
  8504  0B69  01A4               	clrf	(___wmul@product+1)
  8505  0B6A  01A5               	goto	l3347
  8506  0B6B  2B6C               	line	44
  8507                           	
  8508                           l767:	
  8509  0B6C                     	line	45
  8510                           	
  8511                           l3347:	
  8512  0B6C                     	btfss	(___wmul@multiplier),(0)&7
  8513  0B6C  1C20               	goto	u2861
  8514  0B6D  2B6F               	goto	u2860
  8515  0B6E  2B70               u2861:
  8516  0B6F                     	goto	l768
  8517  0B6F  2B76               u2860:
  8518  0B70                     	line	46
  8519                           	
  8520                           l3349:	
  8521  0B70                     	movf	(___wmul@multiplicand),w
  8522  0B70  0822               	addwf	(___wmul@product),f
  8523  0B71  07A4               	skipnc
  8524  0B72  1803               	incf	(___wmul@product+1),f
  8525  0B73  0AA5               	movf	(___wmul@multiplicand+1),w
  8526  0B74  0823               	addwf	(___wmul@product+1),f
  8527  0B75  07A5               	
  8528                           l768:	
  8529  0B76                     	line	47
  8530                           	movlw	01h
  8531  0B76  3001               	
  8532                           u2875:
  8533  0B77                     	clrc
  8534  0B77  1003               	rlf	(___wmul@multiplicand),f
  8535  0B78  0DA2               	rlf	(___wmul@multiplicand+1),f
  8536  0B79  0DA3               	addlw	-1
  8537  0B7A  3EFF               	skipz
  8538  0B7B  1D03               	goto	u2875
  8539  0B7C  2B77               	line	48
  8540                           	
  8541                           l3351:	
  8542  0B7D                     	movlw	01h
  8543  0B7D  3001               	
  8544                           u2885:
  8545  0B7E                     	clrc
  8546  0B7E  1003               	rrf	(___wmul@multiplier+1),f
  8547  0B7F  0CA1               	rrf	(___wmul@multiplier),f
  8548  0B80  0CA0               	addlw	-1
  8549  0B81  3EFF               	skipz
  8550  0B82  1D03               	goto	u2885
  8551  0B83  2B7E               	line	49
  8552                           	
  8553                           l3353:	
  8554  0B84                     	movf	((___wmul@multiplier)),w
  8555  0B84  0820               iorwf	((___wmul@multiplier+1)),w
  8556  0B85  0421               	btfss	status,2
  8557  0B86  1D03               	goto	u2891
  8558  0B87  2B89               	goto	u2890
  8559  0B88  2B8A               u2891:
  8560  0B89                     	goto	l3347
  8561  0B89  2B6C               u2890:
  8562  0B8A                     	goto	l3355
  8563  0B8A  2B8B               	
  8564                           l769:	
  8565  0B8B                     	line	52
  8566                           	
  8567                           l3355:	
  8568  0B8B                     	movf	(___wmul@product+1),w
  8569  0B8B  0825               	movwf	(?___wmul+1)
  8570  0B8C  00A1               	movf	(___wmul@product),w
  8571  0B8D  0824               	movwf	(?___wmul)
  8572  0B8E  00A0               	goto	l770
  8573  0B8F  2B90               	
  8574                           l3357:	
  8575  0B90                     	line	53
  8576                           	
  8577                           l770:	
  8578  0B90                     	return
  8579  0B90  0008               	opt stack 0
  8580                           GLOBAL	__end_of___wmul
  8581                           	__end_of___wmul:
  8582  0B91                     	signat	___wmul,8314
  8583                           	global	___lwmod
  8584                           
  8585 ;; *************** function ___lwmod *****************
  8586 ;; Defined at:
  8587 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;  divisor         2    8[BANK0 ] unsigned int 
  8590 ;;  dividend        2   10[BANK0 ] unsigned int 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;  counter         1   13[BANK0 ] unsigned char 
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  2    8[BANK0 ] unsigned int 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2, status,0
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8602 ;;      Params:         0       4       0       0       0
  8603 ;;      Locals:         0       1       0       0       0
  8604 ;;      Temps:          0       1       0       0       0
  8605 ;;      Totals:         0       6       0       0       0
  8606 ;;Total ram usage:        6 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; Hardware stack levels required when called:    2
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		_sprintf
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           psect	text29,local,class=CODE,delta=2,merge=1,group=2
  8616                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  8617                           	line	6
  8618                           global __ptext29
  8619                           __ptext29:	;psect for function ___lwmod
  8620  0C0B                     psect	text29
  8621                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  8622                           	line	6
  8623                           	global	__size_of___lwmod
  8624                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  8625  0043                     	
  8626                           ___lwmod:	
  8627  0C0B                     ;incstack = 0
  8628                           	opt	stack 4
  8629                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8630                           	line	13
  8631                           	
  8632                           l3385:	
  8633  0C0B                     	bcf	status, 5	;RP0=0, select bank0
  8634  0C0B  1283               	bcf	status, 6	;RP1=0, select bank0
  8635  0C0C  1303               	movf	((___lwmod@divisor)),w
  8636  0C0D  0828               iorwf	((___lwmod@divisor+1)),w
  8637  0C0E  0429               	btfsc	status,2
  8638  0C0F  1903               	goto	u2971
  8639  0C10  2C12               	goto	u2970
  8640  0C11  2C13               u2971:
  8641  0C12                     	goto	l3403
  8642  0C12  2C48               u2970:
  8643  0C13                     	line	14
  8644                           	
  8645                           l3387:	
  8646  0C13                     	clrf	(___lwmod@counter)
  8647  0C13  01AD               	incf	(___lwmod@counter),f
  8648  0C14  0AAD               	line	15
  8649                           	goto	l3393
  8650  0C15  2C22               	
  8651                           l993:	
  8652  0C16                     	line	16
  8653                           	
  8654                           l3389:	
  8655  0C16                     	movlw	01h
  8656  0C16  3001               	
  8657                           u2985:
  8658  0C17                     	clrc
  8659  0C17  1003               	rlf	(___lwmod@divisor),f
  8660  0C18  0DA8               	rlf	(___lwmod@divisor+1),f
  8661  0C19  0DA9               	addlw	-1
  8662  0C1A  3EFF               	skipz
  8663  0C1B  1D03               	goto	u2985
  8664  0C1C  2C17               	line	17
  8665                           	
  8666                           l3391:	
  8667  0C1D                     	movlw	low(01h)
  8668  0C1D  3001               	movwf	(??___lwmod+0)+0
  8669  0C1E  00AC               	movf	(??___lwmod+0)+0,w
  8670  0C1F  082C               	addwf	(___lwmod@counter),f
  8671  0C20  07AD               	goto	l3393
  8672  0C21  2C22               	line	18
  8673                           	
  8674                           l992:	
  8675  0C22                     	line	15
  8676                           	
  8677                           l3393:	
  8678  0C22                     	btfss	(___lwmod@divisor+1),(15)&7
  8679  0C22  1FA9               	goto	u2991
  8680  0C23  2C25               	goto	u2990
  8681  0C24  2C26               u2991:
  8682  0C25                     	goto	l3389
  8683  0C25  2C16               u2990:
  8684  0C26                     	goto	l3395
  8685  0C26  2C28               	
  8686                           l994:	
  8687  0C27                     	goto	l3395
  8688  0C27  2C28               	line	19
  8689                           	
  8690                           l995:	
  8691  0C28                     	line	20
  8692                           	
  8693                           l3395:	
  8694  0C28                     	movf	(___lwmod@divisor+1),w
  8695  0C28  0829               	subwf	(___lwmod@dividend+1),w
  8696  0C29  022B               	skipz
  8697  0C2A  1D03               	goto	u3005
  8698  0C2B  2C2E               	movf	(___lwmod@divisor),w
  8699  0C2C  0828               	subwf	(___lwmod@dividend),w
  8700  0C2D  022A               u3005:
  8701  0C2E                     	skipc
  8702  0C2E  1C03               	goto	u3001
  8703  0C2F  2C31               	goto	u3000
  8704  0C30  2C32               u3001:
  8705  0C31                     	goto	l3399
  8706  0C31  2C39               u3000:
  8707  0C32                     	line	21
  8708                           	
  8709                           l3397:	
  8710  0C32                     	movf	(___lwmod@divisor),w
  8711  0C32  0828               	subwf	(___lwmod@dividend),f
  8712  0C33  02AA               	movf	(___lwmod@divisor+1),w
  8713  0C34  0829               	skipc
  8714  0C35  1C03               	decf	(___lwmod@dividend+1),f
  8715  0C36  03AB               	subwf	(___lwmod@dividend+1),f
  8716  0C37  02AB               	goto	l3399
  8717  0C38  2C39               	
  8718                           l996:	
  8719  0C39                     	line	22
  8720                           	
  8721                           l3399:	
  8722  0C39                     	movlw	01h
  8723  0C39  3001               	
  8724                           u3015:
  8725  0C3A                     	clrc
  8726  0C3A  1003               	rrf	(___lwmod@divisor+1),f
  8727  0C3B  0CA9               	rrf	(___lwmod@divisor),f
  8728  0C3C  0CA8               	addlw	-1
  8729  0C3D  3EFF               	skipz
  8730  0C3E  1D03               	goto	u3015
  8731  0C3F  2C3A               	line	23
  8732                           	
  8733                           l3401:	
  8734  0C40                     	movlw	01h
  8735  0C40  3001               	subwf	(___lwmod@counter),f
  8736  0C41  02AD               	btfss	status,2
  8737  0C42  1D03               	goto	u3021
  8738  0C43  2C45               	goto	u3020
  8739  0C44  2C46               u3021:
  8740  0C45                     	goto	l3395
  8741  0C45  2C28               u3020:
  8742  0C46                     	goto	l3403
  8743  0C46  2C48               	
  8744                           l997:	
  8745  0C47                     	goto	l3403
  8746  0C47  2C48               	line	24
  8747                           	
  8748                           l991:	
  8749  0C48                     	line	25
  8750                           	
  8751                           l3403:	
  8752  0C48                     	movf	(___lwmod@dividend+1),w
  8753  0C48  082B               	movwf	(?___lwmod+1)
  8754  0C49  00A9               	movf	(___lwmod@dividend),w
  8755  0C4A  082A               	movwf	(?___lwmod)
  8756  0C4B  00A8               	goto	l998
  8757  0C4C  2C4D               	
  8758                           l3405:	
  8759  0C4D                     	line	26
  8760                           	
  8761                           l998:	
  8762  0C4D                     	return
  8763  0C4D  0008               	opt stack 0
  8764                           GLOBAL	__end_of___lwmod
  8765                           	__end_of___lwmod:
  8766  0C4E                     	signat	___lwmod,8314
  8767                           	global	___lwdiv
  8768                           
  8769 ;; *************** function ___lwdiv *****************
  8770 ;; Defined at:
  8771 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;  divisor         2    0[BANK0 ] unsigned int 
  8774 ;;  dividend        2    2[BANK0 ] unsigned int 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  quotient        2    6[BANK0 ] unsigned int 
  8777 ;;  counter         1    5[BANK0 ] unsigned char 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  2    0[BANK0 ] unsigned int 
  8780 ;; Registers used:
  8781 ;;		wreg, status,2, status,0
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8787 ;;      Params:         0       4       0       0       0
  8788 ;;      Locals:         0       3       0       0       0
  8789 ;;      Temps:          0       1       0       0       0
  8790 ;;      Totals:         0       8       0       0       0
  8791 ;;Total ram usage:        8 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    2
  8794 ;; This function calls:
  8795 ;;		Nothing
  8796 ;; This function is called by:
  8797 ;;		_sprintf
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           psect	text30,local,class=CODE,delta=2,merge=1,group=2
  8801                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  8802                           	line	6
  8803                           global __ptext30
  8804                           __ptext30:	;psect for function ___lwdiv
  8805  0CE5                     psect	text30
  8806                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  8807                           	line	6
  8808                           	global	__size_of___lwdiv
  8809                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  8810  004D                     	
  8811                           ___lwdiv:	
  8812  0CE5                     ;incstack = 0
  8813                           	opt	stack 4
  8814                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8815                           	line	14
  8816                           	
  8817                           l3359:	
  8818  0CE5                     	bcf	status, 5	;RP0=0, select bank0
  8819  0CE5  1283               	bcf	status, 6	;RP1=0, select bank0
  8820  0CE6  1303               	clrf	(___lwdiv@quotient)
  8821  0CE7  01A6               	clrf	(___lwdiv@quotient+1)
  8822  0CE8  01A7               	line	15
  8823                           	
  8824                           l3361:	
  8825  0CE9                     	movf	((___lwdiv@divisor)),w
  8826  0CE9  0820               iorwf	((___lwdiv@divisor+1)),w
  8827  0CEA  0421               	btfsc	status,2
  8828  0CEB  1903               	goto	u2901
  8829  0CEC  2CEE               	goto	u2900
  8830  0CED  2CEF               u2901:
  8831  0CEE                     	goto	l3381
  8832  0CEE  2D2C               u2900:
  8833  0CEF                     	line	16
  8834                           	
  8835                           l3363:	
  8836  0CEF                     	clrf	(___lwdiv@counter)
  8837  0CEF  01A5               	incf	(___lwdiv@counter),f
  8838  0CF0  0AA5               	line	17
  8839                           	goto	l3369
  8840  0CF1  2CFE               	
  8841                           l983:	
  8842  0CF2                     	line	18
  8843                           	
  8844                           l3365:	
  8845  0CF2                     	movlw	01h
  8846  0CF2  3001               	
  8847                           u2915:
  8848  0CF3                     	clrc
  8849  0CF3  1003               	rlf	(___lwdiv@divisor),f
  8850  0CF4  0DA0               	rlf	(___lwdiv@divisor+1),f
  8851  0CF5  0DA1               	addlw	-1
  8852  0CF6  3EFF               	skipz
  8853  0CF7  1D03               	goto	u2915
  8854  0CF8  2CF3               	line	19
  8855                           	
  8856                           l3367:	
  8857  0CF9                     	movlw	low(01h)
  8858  0CF9  3001               	movwf	(??___lwdiv+0)+0
  8859  0CFA  00A4               	movf	(??___lwdiv+0)+0,w
  8860  0CFB  0824               	addwf	(___lwdiv@counter),f
  8861  0CFC  07A5               	goto	l3369
  8862  0CFD  2CFE               	line	20
  8863                           	
  8864                           l982:	
  8865  0CFE                     	line	17
  8866                           	
  8867                           l3369:	
  8868  0CFE                     	btfss	(___lwdiv@divisor+1),(15)&7
  8869  0CFE  1FA1               	goto	u2921
  8870  0CFF  2D01               	goto	u2920
  8871  0D00  2D02               u2921:
  8872  0D01                     	goto	l3365
  8873  0D01  2CF2               u2920:
  8874  0D02                     	goto	l3371
  8875  0D02  2D04               	
  8876                           l984:	
  8877  0D03                     	goto	l3371
  8878  0D03  2D04               	line	21
  8879                           	
  8880                           l985:	
  8881  0D04                     	line	22
  8882                           	
  8883                           l3371:	
  8884  0D04                     	movlw	01h
  8885  0D04  3001               	
  8886                           u2935:
  8887  0D05                     	clrc
  8888  0D05  1003               	rlf	(___lwdiv@quotient),f
  8889  0D06  0DA6               	rlf	(___lwdiv@quotient+1),f
  8890  0D07  0DA7               	addlw	-1
  8891  0D08  3EFF               	skipz
  8892  0D09  1D03               	goto	u2935
  8893  0D0A  2D05               	line	23
  8894                           	movf	(___lwdiv@divisor+1),w
  8895  0D0B  0821               	subwf	(___lwdiv@dividend+1),w
  8896  0D0C  0223               	skipz
  8897  0D0D  1D03               	goto	u2945
  8898  0D0E  2D11               	movf	(___lwdiv@divisor),w
  8899  0D0F  0820               	subwf	(___lwdiv@dividend),w
  8900  0D10  0222               u2945:
  8901  0D11                     	skipc
  8902  0D11  1C03               	goto	u2941
  8903  0D12  2D14               	goto	u2940
  8904  0D13  2D15               u2941:
  8905  0D14                     	goto	l3377
  8906  0D14  2D1D               u2940:
  8907  0D15                     	line	24
  8908                           	
  8909                           l3373:	
  8910  0D15                     	movf	(___lwdiv@divisor),w
  8911  0D15  0820               	subwf	(___lwdiv@dividend),f
  8912  0D16  02A2               	movf	(___lwdiv@divisor+1),w
  8913  0D17  0821               	skipc
  8914  0D18  1C03               	decf	(___lwdiv@dividend+1),f
  8915  0D19  03A3               	subwf	(___lwdiv@dividend+1),f
  8916  0D1A  02A3               	line	25
  8917                           	
  8918                           l3375:	
  8919  0D1B                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  8920  0D1B  1426               	goto	l3377
  8921  0D1C  2D1D               	line	26
  8922                           	
  8923                           l986:	
  8924  0D1D                     	line	27
  8925                           	
  8926                           l3377:	
  8927  0D1D                     	movlw	01h
  8928  0D1D  3001               	
  8929                           u2955:
  8930  0D1E                     	clrc
  8931  0D1E  1003               	rrf	(___lwdiv@divisor+1),f
  8932  0D1F  0CA1               	rrf	(___lwdiv@divisor),f
  8933  0D20  0CA0               	addlw	-1
  8934  0D21  3EFF               	skipz
  8935  0D22  1D03               	goto	u2955
  8936  0D23  2D1E               	line	28
  8937                           	
  8938                           l3379:	
  8939  0D24                     	movlw	01h
  8940  0D24  3001               	subwf	(___lwdiv@counter),f
  8941  0D25  02A5               	btfss	status,2
  8942  0D26  1D03               	goto	u2961
  8943  0D27  2D29               	goto	u2960
  8944  0D28  2D2A               u2961:
  8945  0D29                     	goto	l3371
  8946  0D29  2D04               u2960:
  8947  0D2A                     	goto	l3381
  8948  0D2A  2D2C               	
  8949                           l987:	
  8950  0D2B                     	goto	l3381
  8951  0D2B  2D2C               	line	29
  8952                           	
  8953                           l981:	
  8954  0D2C                     	line	30
  8955                           	
  8956                           l3381:	
  8957  0D2C                     	movf	(___lwdiv@quotient+1),w
  8958  0D2C  0827               	movwf	(?___lwdiv+1)
  8959  0D2D  00A1               	movf	(___lwdiv@quotient),w
  8960  0D2E  0826               	movwf	(?___lwdiv)
  8961  0D2F  00A0               	goto	l988
  8962  0D30  2D31               	
  8963                           l3383:	
  8964  0D31                     	line	31
  8965                           	
  8966                           l988:	
  8967  0D31                     	return
  8968  0D31  0008               	opt stack 0
  8969                           GLOBAL	__end_of___lwdiv
  8970                           	__end_of___lwdiv:
  8971  0D32                     	signat	___lwdiv,8314
  8972                           	global	_obtemConvercaoAD
  8973                           
  8974 ;; *************** function _obtemConvercaoAD *****************
  8975 ;; Defined at:
  8976 ;;		line 160 in file "src/hardware.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  canal           1    wreg     unsigned char 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  canal           1   12[BANK0 ] unsigned char 
  8981 ;;  valor           2   13[BANK0 ] unsigned int 
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  2    4[BANK0 ] unsigned int 
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0, pclath, cstack
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8991 ;;      Params:         0       2       0       0       0
  8992 ;;      Locals:         0       3       0       0       0
  8993 ;;      Temps:          0       6       0       0       0
  8994 ;;      Totals:         0      11       0       0       0
  8995 ;;Total ram usage:       11 bytes
  8996 ;; Hardware stack levels used:    1
  8997 ;; Hardware stack levels required when called:    3
  8998 ;; This function calls:
  8999 ;;		_delay_us
  9000 ;; This function is called by:
  9001 ;;		_obtemQuantidadeDeSensores
  9002 ;;		_obtemNivelDeBateria
  9003 ;;		_obtemTesteDoGoundBolt
  9004 ;;		_ObtemAmplitureDoSinal
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  9008                           	file	"src/hardware.c"
  9009                           	line	160
  9010                           global __ptext31
  9011                           __ptext31:	;psect for function _obtemConvercaoAD
  9012  0C4E                     psect	text31
  9013                           	file	"src/hardware.c"
  9014                           	line	160
  9015                           	global	__size_of_obtemConvercaoAD
  9016                           	__size_of_obtemConvercaoAD	equ	__end_of_obtemConvercaoAD-_obtemConvercaoAD
  9017  004B                     	
  9018                           _obtemConvercaoAD:	
  9019  0C4E                     ;incstack = 0
  9020                           	opt	stack 3
  9021                           ; Regs used in _obtemConvercaoAD: [wreg+status,2+status,0+pclath+cstack]
  9022                           ;obtemConvercaoAD@canal stored from wreg
  9023                           	bcf	status, 5	;RP0=0, select bank0
  9024  0C4E  1283               	bcf	status, 6	;RP1=0, select bank0
  9025  0C4F  1303               	movwf	(obtemConvercaoAD@canal)
  9026  0C50  00AC               	line	164
  9027                           	
  9028                           l3407:	
  9029  0C51                     ;hardware.c: 161: unsigned int valor;
  9030                           ;hardware.c: 164: INTCONbits.GIE = 0;
  9031                           	bcf	(11),7	;volatile
  9032  0C51  138B               	line	165
  9033                           	
  9034                           l3409:	
  9035  0C52                     ;hardware.c: 165: valor = 0;
  9036                           	clrf	(obtemConvercaoAD@valor)
  9037  0C52  01AD               	clrf	(obtemConvercaoAD@valor+1)
  9038  0C53  01AE               	line	166
  9039                           	
  9040                           l3411:	
  9041  0C54                     ;hardware.c: 166: ADCON1bits.ADFM = 1;
  9042                           	bsf	status, 5	;RP0=1, select bank1
  9043  0C54  1683               	bcf	status, 6	;RP1=0, select bank1
  9044  0C55  1303               	bsf	(159)^080h,7	;volatile
  9045  0C56  179F               	line	167
  9046                           	
  9047                           l3413:	
  9048  0C57                     ;hardware.c: 167: ADCON0bits.CHS = canal;
  9049                           	bcf	status, 5	;RP0=0, select bank0
  9050  0C57  1283               	bcf	status, 6	;RP1=0, select bank0
  9051  0C58  1303               	movf	(obtemConvercaoAD@canal),w
  9052  0C59  082C               	movwf	(??_obtemConvercaoAD+0)+0
  9053  0C5A  00A6               	rlf	(??_obtemConvercaoAD+0)+0,f
  9054  0C5B  0DA6               	rlf	(??_obtemConvercaoAD+0)+0,f
  9055  0C5C  0DA6               	rlf	(??_obtemConvercaoAD+0)+0,f
  9056  0C5D  0DA6               	movf	(31),w	;volatile
  9057  0C5E  081F               	xorwf	(??_obtemConvercaoAD+0)+0,w
  9058  0C5F  0626               	andlw	not (((1<<3)-1)<<3)
  9059  0C60  39C7               	xorwf	(??_obtemConvercaoAD+0)+0,w
  9060  0C61  0626               	movwf	(31)	;volatile
  9061  0C62  009F               	line	168
  9062                           	
  9063                           l3415:	
  9064  0C63                     ;hardware.c: 168: ADCON0bits.ADON = 1;
  9065                           	bsf	(31),0	;volatile
  9066  0C63  141F               	line	169
  9067                           	
  9068                           l3417:	
  9069  0C64                     ;hardware.c: 169: delay_us(10);
  9070                           	movlw	0Ah
  9071  0C64  300A               	movwf	(delay_us@valor)
  9072  0C65  00A0               	movlw	0
  9073  0C66  3000               	movwf	((delay_us@valor))+1
  9074  0C67  00A1               	fcall	_delay_us
  9075  0C68  120A  158A  2278  120A  158A  	line	170
  9076                           	
  9077                           l3419:	
  9078  0C6D                     ;hardware.c: 170: ADCON0bits.GO_DONE = 1;
  9079                           	bcf	status, 5	;RP0=0, select bank0
  9080  0C6D  1283               	bcf	status, 6	;RP1=0, select bank0
  9081  0C6E  1303               	bsf	(31),2	;volatile
  9082  0C6F  151F               	line	171
  9083                           ;hardware.c: 171: while(ADCON0bits.GO_DONE);
  9084                           	goto	l72
  9085  0C70  2C71               	
  9086                           l73:	
  9087  0C71                     	
  9088                           l72:	
  9089  0C71                     	btfsc	(31),2	;volatile
  9090  0C71  191F               	goto	u3031
  9091  0C72  2C74               	goto	u3030
  9092  0C73  2C75               u3031:
  9093  0C74                     	goto	l72
  9094  0C74  2C71               u3030:
  9095  0C75                     	goto	l3421
  9096  0C75  2C76               	
  9097                           l74:	
  9098  0C76                     	line	173
  9099                           	
  9100                           l3421:	
  9101  0C76                     ;hardware.c: 173: valor = ADRESH;
  9102                           	movf	(30),w	;volatile
  9103  0C76  081E               	movwf	(??_obtemConvercaoAD+0)+0
  9104  0C77  00A6               	clrf	(??_obtemConvercaoAD+0)+0+1
  9105  0C78  01A7               	movf	0+(??_obtemConvercaoAD+0)+0,w
  9106  0C79  0826               	movwf	(obtemConvercaoAD@valor)
  9107  0C7A  00AD               	movf	1+(??_obtemConvercaoAD+0)+0,w
  9108  0C7B  0827               	movwf	(obtemConvercaoAD@valor+1)
  9109  0C7C  00AE               	line	174
  9110                           ;hardware.c: 174: valor = (valor << 8) | ADRESL ;
  9111                           	bsf	status, 5	;RP0=1, select bank1
  9112  0C7D  1683               	bcf	status, 6	;RP1=0, select bank1
  9113  0C7E  1303               	movf	(158)^080h,w	;volatile
  9114  0C7F  081E               	bcf	status, 5	;RP0=0, select bank0
  9115  0C80  1283               	bcf	status, 6	;RP1=0, select bank0
  9116  0C81  1303               	movwf	(??_obtemConvercaoAD+0)+0
  9117  0C82  00A6               	clrf	(??_obtemConvercaoAD+0)+0+1
  9118  0C83  01A7               	movf	(obtemConvercaoAD@valor),w
  9119  0C84  082D               	movwf	(??_obtemConvercaoAD+2)+0+1
  9120  0C85  00A9               	clrf	(??_obtemConvercaoAD+2)+0
  9121  0C86  01A8               	movf	0+(??_obtemConvercaoAD+0)+0,w
  9122  0C87  0826               	iorwf	0+(??_obtemConvercaoAD+2)+0,w
  9123  0C88  0428               	movwf	(??_obtemConvercaoAD+4)+0
  9124  0C89  00AA               	movf	1+(??_obtemConvercaoAD+0)+0,w
  9125  0C8A  0827               	iorwf	1+(??_obtemConvercaoAD+2)+0,w
  9126  0C8B  0429               	movwf	1+(??_obtemConvercaoAD+4)+0
  9127  0C8C  00AB               	movf	0+(??_obtemConvercaoAD+4)+0,w
  9128  0C8D  082A               	movwf	(obtemConvercaoAD@valor)
  9129  0C8E  00AD               	movf	1+(??_obtemConvercaoAD+4)+0,w
  9130  0C8F  082B               	movwf	(obtemConvercaoAD@valor+1)
  9131  0C90  00AE               	line	176
  9132                           	
  9133                           l3423:	
  9134  0C91                     ;hardware.c: 176: ADCON0bits.ADON = 0;
  9135                           	bcf	(31),0	;volatile
  9136  0C91  101F               	line	177
  9137                           	
  9138                           l3425:	
  9139  0C92                     ;hardware.c: 177: INTCONbits.GIE = 1;
  9140                           	bsf	(11),7	;volatile
  9141  0C92  178B               	line	178
  9142                           ;hardware.c: 178: return valor;
  9143                           	movf	(obtemConvercaoAD@valor+1),w
  9144  0C93  082E               	movwf	(?_obtemConvercaoAD+1)
  9145  0C94  00A5               	movf	(obtemConvercaoAD@valor),w
  9146  0C95  082D               	movwf	(?_obtemConvercaoAD)
  9147  0C96  00A4               	goto	l75
  9148  0C97  2C98               	
  9149                           l3427:	
  9150  0C98                     	line	179
  9151                           	
  9152                           l75:	
  9153  0C98                     	return
  9154  0C98  0008               	opt stack 0
  9155                           GLOBAL	__end_of_obtemConvercaoAD
  9156                           	__end_of_obtemConvercaoAD:
  9157  0C99                     	signat	_obtemConvercaoAD,4218
  9158                           	global	_delay_us
  9159                           
  9160 ;; *************** function _delay_us *****************
  9161 ;; Defined at:
  9162 ;;		line 191 in file "src/hardware.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;  valor           2    0[BANK0 ] unsigned int 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  contador        2    2[BANK0 ] unsigned int 
  9167 ;; Return value:  Size  Location     Type
  9168 ;;                  1    wreg      void 
  9169 ;; Registers used:
  9170 ;;		wreg, status,2, status,0
  9171 ;; Tracked objects:
  9172 ;;		On entry : 0/0
  9173 ;;		On exit  : 0/0
  9174 ;;		Unchanged: 0/0
  9175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9176 ;;      Params:         0       2       0       0       0
  9177 ;;      Locals:         0       2       0       0       0
  9178 ;;      Temps:          0       0       0       0       0
  9179 ;;      Totals:         0       4       0       0       0
  9180 ;;Total ram usage:        4 bytes
  9181 ;; Hardware stack levels used:    1
  9182 ;; Hardware stack levels required when called:    2
  9183 ;; This function calls:
  9184 ;;		Nothing
  9185 ;; This function is called by:
  9186 ;;		_obtemConvercaoAD
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  9190                           	line	191
  9191                           global __ptext32
  9192                           __ptext32:	;psect for function _delay_us
  9193  0A78                     psect	text32
  9194                           	file	"src/hardware.c"
  9195                           	line	191
  9196                           	global	__size_of_delay_us
  9197                           	__size_of_delay_us	equ	__end_of_delay_us-_delay_us
  9198  001F                     	
  9199                           _delay_us:	
  9200  0A78                     ;incstack = 0
  9201                           	opt	stack 3
  9202                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  9203                           	line	193
  9204                           	
  9205                           l3327:	
  9206  0A78                     ;hardware.c: 192: unsigned int contador;
  9207                           ;hardware.c: 193: for(contador = 0; contador < valor; contador = contador + 1){
  9208                           	bcf	status, 5	;RP0=0, select bank0
  9209  0A78  1283               	bcf	status, 6	;RP1=0, select bank0
  9210  0A79  1303               	clrf	(delay_us@contador)
  9211  0A7A  01A2               	clrf	(delay_us@contador+1)
  9212  0A7B  01A3               	goto	l3331
  9213  0A7C  2A8B               	
  9214                           l85:	
  9215  0A7D                     	line	195
  9216                           ;hardware.c: 195: _delay((unsigned long)((1)*(20000000/4000000.0)));
  9217                           		opt asmopt_push
  9218                           	opt asmopt_off
  9219                           	nop2	;2 cycle nop
  9220  0A7D  2A7E               	nop2	;2 cycle nop
  9221  0A7E  2A7F               	nop
  9222  0A7F  0000               	opt asmopt_pop
  9223                           
  9224                           	line	193
  9225                           	
  9226                           l3329:	
  9227  0A80                     	bcf	status, 5	;RP0=0, select bank0
  9228  0A80  1283               	bcf	status, 6	;RP1=0, select bank0
  9229  0A81  1303               	movf	(delay_us@contador),w
  9230  0A82  0822               	addlw	low(01h)
  9231  0A83  3E01               	movwf	(delay_us@contador)
  9232  0A84  00A2               	movf	(delay_us@contador+1),w
  9233  0A85  0823               	skipnc
  9234  0A86  1803               	addlw	1
  9235  0A87  3E01               	addlw	high(01h)
  9236  0A88  3E00               	movwf	1+(delay_us@contador)
  9237  0A89  00A3               	goto	l3331
  9238  0A8A  2A8B               	
  9239                           l84:	
  9240  0A8B                     	
  9241                           l3331:	
  9242  0A8B                     	movf	(delay_us@valor+1),w
  9243  0A8B  0821               	subwf	(delay_us@contador+1),w
  9244  0A8C  0223               	skipz
  9245  0A8D  1D03               	goto	u2835
  9246  0A8E  2A91               	movf	(delay_us@valor),w
  9247  0A8F  0820               	subwf	(delay_us@contador),w
  9248  0A90  0222               u2835:
  9249  0A91                     	skipc
  9250  0A91  1C03               	goto	u2831
  9251  0A92  2A94               	goto	u2830
  9252  0A93  2A95               u2831:
  9253  0A94                     	goto	l85
  9254  0A94  2A7D               u2830:
  9255  0A95                     	goto	l87
  9256  0A95  2A96               	
  9257                           l86:	
  9258  0A96                     	line	197
  9259                           	
  9260                           l87:	
  9261  0A96                     	return
  9262  0A96  0008               	opt stack 0
  9263                           GLOBAL	__end_of_delay_us
  9264                           	__end_of_delay_us:
  9265  0A97                     	signat	_delay_us,4217
  9266                           	global	_enviaStringPelaUart
  9267                           
  9268 ;; *************** function _enviaStringPelaUart *****************
  9269 ;; Defined at:
  9270 ;;		line 97 in file "src/serial_usart.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  str             2    6[BANK0 ] PTR unsigned char 
  9273 ;;		 -> ObtemAmplitureDoSinal@mensagem(50), obtemTesteDoGoundBolt@mensagem(50), obtemNivelDeBateria@mensagem(50), obtemQ
       uantidadeDeSensores@mensagem(50), 
  9274 ;;		 -> main@mensagem(50), 
  9275 ;;  tamanho         2    8[BANK0 ] int 
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;  vetor           2   13[BANK0 ] int 
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      void 
  9280 ;; Registers used:
  9281 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9287 ;;      Params:         0       4       0       0       0
  9288 ;;      Locals:         0       2       0       0       0
  9289 ;;      Temps:          0       3       0       0       0
  9290 ;;      Totals:         0       9       0       0       0
  9291 ;;Total ram usage:        9 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    2
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_main
  9298 ;;		_obtemQuantidadeDeSensores
  9299 ;;		_obtemNivelDeBateria
  9300 ;;		_obtemTesteDoGoundBolt
  9301 ;;		_ObtemAmplitureDoSinal
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  9305                           	file	"src/serial_usart.c"
  9306                           	line	97
  9307                           global __ptext33
  9308                           __ptext33:	;psect for function _enviaStringPelaUart
  9309  0BCE                     psect	text33
  9310                           	file	"src/serial_usart.c"
  9311                           	line	97
  9312                           	global	__size_of_enviaStringPelaUart
  9313                           	__size_of_enviaStringPelaUart	equ	__end_of_enviaStringPelaUart-_enviaStringPelaUart
  9314  003D                     	
  9315                           _enviaStringPelaUart:	
  9316  0BCE                     ;incstack = 0
  9317                           	opt	stack 4
  9318                           ; Regs used in _enviaStringPelaUart: [wreg-fsr0h+status,2+status,0]
  9319                           	line	100
  9320                           	
  9321                           l3551:	
  9322  0BCE                     ;serial_usart.c: 98: int vetor;
  9323                           ;serial_usart.c: 100: for(vetor = 0; vetor < tamanho; vetor = vetor + 1){
  9324                           	bcf	status, 5	;RP0=0, select bank0
  9325  0BCE  1283               	bcf	status, 6	;RP1=0, select bank0
  9326  0BCF  1303               	clrf	(enviaStringPelaUart@vetor)
  9327  0BD0  01AD               	clrf	(enviaStringPelaUart@vetor+1)
  9328  0BD1  01AE               	goto	l3557
  9329  0BD2  2BFB               	
  9330                           l625:	
  9331  0BD3                     	line	101
  9332                           ;serial_usart.c: 101: while(TXSTAbits.TRMT == 0);
  9333                           	goto	l626
  9334  0BD3  2BD4               	
  9335                           l627:	
  9336  0BD4                     	
  9337                           l626:	
  9338  0BD4                     	bsf	status, 5	;RP0=1, select bank1
  9339  0BD4  1683               	bcf	status, 6	;RP1=0, select bank1
  9340  0BD5  1303               	btfss	(152)^080h,1	;volatile
  9341  0BD6  1C98               	goto	u3251
  9342  0BD7  2BD9               	goto	u3250
  9343  0BD8  2BDA               u3251:
  9344  0BD9                     	goto	l626
  9345  0BD9  2BD4               u3250:
  9346  0BDA                     	
  9347                           l628:	
  9348  0BDA                     	line	102
  9349                           ;serial_usart.c: 102: TXSTAbits.TRMT = 0;
  9350                           	bcf	(152)^080h,1	;volatile
  9351  0BDA  1098               	line	103
  9352                           	
  9353                           l3553:	
  9354  0BDB                     ;serial_usart.c: 103: TXREG = str[vetor];
  9355                           	bcf	status, 5	;RP0=0, select bank0
  9356  0BDB  1283               	bcf	status, 6	;RP1=0, select bank0
  9357  0BDC  1303               	movf	(enviaStringPelaUart@vetor),w
  9358  0BDD  082D               	addwf	(enviaStringPelaUart@str),w
  9359  0BDE  0726               	movwf	(??_enviaStringPelaUart+1)+0
  9360  0BDF  00AB               	movf	(enviaStringPelaUart@str+1),w
  9361  0BE0  0827               	movwf	(??_enviaStringPelaUart+0)+0
  9362  0BE1  00AA               	skipnc
  9363  0BE2  1803               	incf	(??_enviaStringPelaUart+0)+0,f
  9364  0BE3  0AAA               	btfss	(enviaStringPelaUart@vetor),7
  9365  0BE4  1FAD               	goto	u3260
  9366  0BE5  2BE7               	decf	(??_enviaStringPelaUart+0)+0,f
  9367  0BE6  03AA               u3260:
  9368  0BE7                     	bcf	status, 5	;RP0=0, select bank0
  9369  0BE7  1283               	bcf	status, 6	;RP1=0, select bank0
  9370  0BE8  1303               	movf	(??_enviaStringPelaUart+0)+0,w
  9371  0BE9  082A               	movwf	0+((??_enviaStringPelaUart+1)+0)+1
  9372  0BEA  00AC               	movf	0+(??_enviaStringPelaUart+1)+0,w
  9373  0BEB  082B               	movwf	fsr0
  9374  0BEC  0084               	bsf	status,7
  9375  0BED  1783               	btfss	1+(??_enviaStringPelaUart+1)+0,0
  9376  0BEE  1C2C               	bcf	status,7
  9377  0BEF  1383               	movf	indf,w
  9378  0BF0  0800               	movwf	(25)	;volatile
  9379  0BF1  0099               	line	100
  9380                           	
  9381                           l3555:	
  9382  0BF2                     	movf	(enviaStringPelaUart@vetor),w
  9383  0BF2  082D               	addlw	low(01h)
  9384  0BF3  3E01               	movwf	(enviaStringPelaUart@vetor)
  9385  0BF4  00AD               	movf	(enviaStringPelaUart@vetor+1),w
  9386  0BF5  082E               	skipnc
  9387  0BF6  1803               	addlw	1
  9388  0BF7  3E01               	addlw	high(01h)
  9389  0BF8  3E00               	movwf	1+(enviaStringPelaUart@vetor)
  9390  0BF9  00AE               	goto	l3557
  9391  0BFA  2BFB               	
  9392                           l624:	
  9393  0BFB                     	
  9394                           l3557:	
  9395  0BFB                     	movf	(enviaStringPelaUart@vetor+1),w
  9396  0BFB  082E               	xorlw	80h
  9397  0BFC  3A80               	movwf	(??_enviaStringPelaUart+0)+0
  9398  0BFD  00AA               	movf	(enviaStringPelaUart@tamanho+1),w
  9399  0BFE  0829               	xorlw	80h
  9400  0BFF  3A80               	subwf	(??_enviaStringPelaUart+0)+0,w
  9401  0C00  022A               	skipz
  9402  0C01  1D03               	goto	u3275
  9403  0C02  2C05               	movf	(enviaStringPelaUart@tamanho),w
  9404  0C03  0828               	subwf	(enviaStringPelaUart@vetor),w
  9405  0C04  022D               u3275:
  9406  0C05                     
  9407                           	skipc
  9408  0C05  1C03               	goto	u3271
  9409  0C06  2C08               	goto	u3270
  9410  0C07  2C09               u3271:
  9411  0C08                     	goto	l626
  9412  0C08  2BD4               u3270:
  9413  0C09                     	goto	l630
  9414  0C09  2C0A               	
  9415                           l629:	
  9416  0C0A                     	line	106
  9417                           	
  9418                           l630:	
  9419  0C0A                     	return
  9420  0C0A  0008               	opt stack 0
  9421                           GLOBAL	__end_of_enviaStringPelaUart
  9422                           	__end_of_enviaStringPelaUart:
  9423  0C0B                     	signat	_enviaStringPelaUart,8313
  9424                           	global	_exibeQuantidadeDeSensores
  9425                           
  9426 ;; *************** function _exibeQuantidadeDeSensores *****************
  9427 ;; Defined at:
  9428 ;;		line 633 in file "src/main.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  quantidade      1    wreg     unsigned char 
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  quantidade      1    0[BANK0 ] unsigned char 
  9433 ;;  mensagem       50    0        unsigned char [50]
  9434 ;; Return value:  Size  Location     Type
  9435 ;;                  1    wreg      void 
  9436 ;; Registers used:
  9437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9443 ;;      Params:         0       0       0       0       0
  9444 ;;      Locals:         0       1       0       0       0
  9445 ;;      Temps:          0       0       0       0       0
  9446 ;;      Totals:         0       1       0       0       0
  9447 ;;Total ram usage:        1 bytes
  9448 ;; Hardware stack levels used:    1
  9449 ;; Hardware stack levels required when called:    3
  9450 ;; This function calls:
  9451 ;;		_exibeNumero0
  9452 ;;		_exibeNumero1
  9453 ;;		_exibeNumero2
  9454 ;;		_exibeNumero3
  9455 ;;		_exibeNumero4
  9456 ;;		_exibeNumero5
  9457 ;;		_exibeNumero6
  9458 ;;		_exibeNumero7
  9459 ;;		_exibeNumero8
  9460 ;;		_exibeNumero9
  9461 ;;		_exibeNumeroA
  9462 ;; This function is called by:
  9463 ;;		_executaTesteDosSensores
  9464 ;;		_modoTeste9
  9465 ;;		_modoTeste20
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
  9469                           	file	"src/main.c"
  9470                           	line	633
  9471                           global __ptext34
  9472                           __ptext34:	;psect for function _exibeQuantidadeDeSensores
  9473  0D8F                     psect	text34
  9474                           	file	"src/main.c"
  9475                           	line	633
  9476                           	global	__size_of_exibeQuantidadeDeSensores
  9477                           	__size_of_exibeQuantidadeDeSensores	equ	__end_of_exibeQuantidadeDeSensores-_exibeQuanti
                                 dadeDeSensores
  9478  006E                     	
  9479                           _exibeQuantidadeDeSensores:	
  9480  0D8F                     ;incstack = 0
  9481                           	opt	stack 3
  9482                           ; Regs used in _exibeQuantidadeDeSensores: [wreg-fsr0h+status,2+status,0+pclath+cstack]

  9483                           ;exibeQuantidadeDeSensores@quantidade stored from wreg
  9484                           	bcf	status, 5	;RP0=0, select bank0
  9485  0D8F  1283               	bcf	status, 6	;RP1=0, select bank0
  9486  0D90  1303               	movwf	(exibeQuantidadeDeSensores@quantidade)
  9487  0D91  00A0               	line	638
  9488                           	
  9489                           l3685:	
  9490  0D92                     ;main.c: 634: char mensagem[50];
  9491                           ;main.c: 638: switch(quantidade){
  9492                           	goto	l3711
  9493  0D92  2DD7               	line	639
  9494                           ;main.c: 639: case 0:
  9495                           	
  9496                           l410:	
  9497  0D93                     	line	640
  9498                           	
  9499                           l3687:	
  9500  0D93                     ;main.c: 640: exibeNumero0();
  9501                           	fcall	_exibeNumero0
  9502  0D93  120A  158A  217A  120A  158A  	line	641
  9503                           ;main.c: 641: break;
  9504                           	goto	l423
  9505  0D98  2DFC               	line	642
  9506                           ;main.c: 642: case 1:
  9507                           	
  9508                           l412:	
  9509  0D99                     	line	643
  9510                           	
  9511                           l3689:	
  9512  0D99                     ;main.c: 643: exibeNumero1();
  9513                           	fcall	_exibeNumero1
  9514  0D99  120A  158A  2184  120A  158A  	line	644
  9515                           ;main.c: 644: break;
  9516                           	goto	l423
  9517  0D9E  2DFC               	line	645
  9518                           ;main.c: 645: case 2:
  9519                           	
  9520                           l413:	
  9521  0D9F                     	line	646
  9522                           	
  9523                           l3691:	
  9524  0D9F                     ;main.c: 646: exibeNumero2();
  9525                           	fcall	_exibeNumero2
  9526  0D9F  120A  158A  218E  120A  158A  	line	647
  9527                           ;main.c: 647: break;
  9528                           	goto	l423
  9529  0DA4  2DFC               	line	648
  9530                           ;main.c: 648: case 3:
  9531                           	
  9532                           l414:	
  9533  0DA5                     	line	649
  9534                           	
  9535                           l3693:	
  9536  0DA5                     ;main.c: 649: exibeNumero3();
  9537                           	fcall	_exibeNumero3
  9538  0DA5  120A  158A  2198  120A  158A  	line	650
  9539                           ;main.c: 650: break;
  9540                           	goto	l423
  9541  0DAA  2DFC               	line	651
  9542                           ;main.c: 651: case 4:
  9543                           	
  9544                           l415:	
  9545  0DAB                     	line	652
  9546                           	
  9547                           l3695:	
  9548  0DAB                     ;main.c: 652: exibeNumero4();
  9549                           	fcall	_exibeNumero4
  9550  0DAB  120A  158A  21A2  120A  158A  	line	653
  9551                           ;main.c: 653: break;
  9552                           	goto	l423
  9553  0DB0  2DFC               	line	654
  9554                           ;main.c: 654: case 5:
  9555                           	
  9556                           l416:	
  9557  0DB1                     	line	655
  9558                           	
  9559                           l3697:	
  9560  0DB1                     ;main.c: 655: exibeNumero5();
  9561                           	fcall	_exibeNumero5
  9562  0DB1  120A  158A  21AC  120A  158A  	line	656
  9563                           ;main.c: 656: break;
  9564                           	goto	l423
  9565  0DB6  2DFC               	line	657
  9566                           ;main.c: 657: case 6:
  9567                           	
  9568                           l417:	
  9569  0DB7                     	line	658
  9570                           	
  9571                           l3699:	
  9572  0DB7                     ;main.c: 658: exibeNumero6();
  9573                           	fcall	_exibeNumero6
  9574  0DB7  120A  158A  21B6  120A  158A  	line	659
  9575                           ;main.c: 659: break;
  9576                           	goto	l423
  9577  0DBC  2DFC               	line	660
  9578                           ;main.c: 660: case 7:
  9579                           	
  9580                           l418:	
  9581  0DBD                     	line	661
  9582                           	
  9583                           l3701:	
  9584  0DBD                     ;main.c: 661: exibeNumero7();
  9585                           	fcall	_exibeNumero7
  9586  0DBD  120A  158A  21C0  120A  158A  	line	662
  9587                           ;main.c: 662: break;
  9588                           	goto	l423
  9589  0DC2  2DFC               	line	663
  9590                           ;main.c: 663: case 8:
  9591                           	
  9592                           l419:	
  9593  0DC3                     	line	664
  9594                           	
  9595                           l3703:	
  9596  0DC3                     ;main.c: 664: exibeNumero8();
  9597                           	fcall	_exibeNumero8
  9598  0DC3  120A  158A  21CA  120A  158A  	line	665
  9599                           ;main.c: 665: break;
  9600                           	goto	l423
  9601  0DC8  2DFC               	line	666
  9602                           ;main.c: 666: case 9:
  9603                           	
  9604                           l420:	
  9605  0DC9                     	line	667
  9606                           	
  9607                           l3705:	
  9608  0DC9                     ;main.c: 667: exibeNumero9();
  9609                           	fcall	_exibeNumero9
  9610  0DC9  120A  158A  21D4  120A  158A  	line	668
  9611                           ;main.c: 668: break;
  9612                           	goto	l423
  9613  0DCE  2DFC               	line	669
  9614                           ;main.c: 669: case 10:
  9615                           	
  9616                           l421:	
  9617  0DCF                     	line	670
  9618                           	
  9619                           l3707:	
  9620  0DCF                     ;main.c: 670: exibeNumeroA();
  9621                           	fcall	_exibeNumeroA
  9622  0DCF  120A  158A  21DE  120A  158A  	line	671
  9623                           ;main.c: 671: break;
  9624                           	goto	l423
  9625  0DD4  2DFC               	line	672
  9626                           ;main.c: 672: default:
  9627                           	
  9628                           l422:	
  9629  0DD5                     	line	674
  9630                           ;main.c: 674: break;
  9631                           	goto	l423
  9632  0DD5  2DFC               	line	675
  9633                           	
  9634                           l3709:	
  9635  0DD6                     ;main.c: 675: }
  9636                           	goto	l423
  9637  0DD6  2DFC               	line	638
  9638                           	
  9639                           l409:	
  9640  0DD7                     	
  9641                           l3711:	
  9642  0DD7                     	bcf	status, 5	;RP0=0, select bank0
  9643  0DD7  1283               	bcf	status, 6	;RP1=0, select bank0
  9644  0DD8  1303               	movf	(exibeQuantidadeDeSensores@quantidade),w
  9645  0DD9  0820               	; Switch size 1, requested type "space"
  9646                           ; Number of cases is 11, Range of values is 0 to 10
  9647                           ; switch strategies available:
  9648                           ; Name         Instructions Cycles
  9649                           ; simple_byte           34    18 (average)
  9650                           ; direct_byte           41     8 (fixed)
  9651                           ; jumptable            260     6 (fixed)
  9652                           ;	Chosen strategy is simple_byte
  9653                           
  9654                           	opt asmopt_push
  9655                           	opt asmopt_off
  9656                           	xorlw	0^0	; case 0
  9657  0DDA  3A00               	skipnz
  9658  0DDB  1903               	goto	l3687
  9659  0DDC  2D93               	xorlw	1^0	; case 1
  9660  0DDD  3A01               	skipnz
  9661  0DDE  1903               	goto	l3689
  9662  0DDF  2D99               	xorlw	2^1	; case 2
  9663  0DE0  3A03               	skipnz
  9664  0DE1  1903               	goto	l3691
  9665  0DE2  2D9F               	xorlw	3^2	; case 3
  9666  0DE3  3A01               	skipnz
  9667  0DE4  1903               	goto	l3693
  9668  0DE5  2DA5               	xorlw	4^3	; case 4
  9669  0DE6  3A07               	skipnz
  9670  0DE7  1903               	goto	l3695
  9671  0DE8  2DAB               	xorlw	5^4	; case 5
  9672  0DE9  3A01               	skipnz
  9673  0DEA  1903               	goto	l3697
  9674  0DEB  2DB1               	xorlw	6^5	; case 6
  9675  0DEC  3A03               	skipnz
  9676  0DED  1903               	goto	l3699
  9677  0DEE  2DB7               	xorlw	7^6	; case 7
  9678  0DEF  3A01               	skipnz
  9679  0DF0  1903               	goto	l3701
  9680  0DF1  2DBD               	xorlw	8^7	; case 8
  9681  0DF2  3A0F               	skipnz
  9682  0DF3  1903               	goto	l3703
  9683  0DF4  2DC3               	xorlw	9^8	; case 9
  9684  0DF5  3A01               	skipnz
  9685  0DF6  1903               	goto	l3705
  9686  0DF7  2DC9               	xorlw	10^9	; case 10
  9687  0DF8  3A03               	skipnz
  9688  0DF9  1903               	goto	l3707
  9689  0DFA  2DCF               	goto	l423
  9690  0DFB  2DFC               	opt asmopt_pop
  9691                           
  9692                           	line	675
  9693                           	
  9694                           l411:	
  9695  0DFC                     	line	676
  9696                           	
  9697                           l423:	
  9698  0DFC                     	return
  9699  0DFC  0008               	opt stack 0
  9700                           GLOBAL	__end_of_exibeQuantidadeDeSensores
  9701                           	__end_of_exibeQuantidadeDeSensores:
  9702  0DFD                     	signat	_exibeQuantidadeDeSensores,4217
  9703                           	global	_exibeNumeroA
  9704                           
  9705 ;; *************** function _exibeNumeroA *****************
  9706 ;; Defined at:
  9707 ;;		line 794 in file "src/main.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;		None
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;		None
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      void 
  9714 ;; Registers used:
  9715 ;;		None
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9721 ;;      Params:         0       0       0       0       0
  9722 ;;      Locals:         0       0       0       0       0
  9723 ;;      Temps:          0       0       0       0       0
  9724 ;;      Totals:         0       0       0       0       0
  9725 ;;Total ram usage:        0 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    2
  9728 ;; This function calls:
  9729 ;;		Nothing
  9730 ;; This function is called by:
  9731 ;;		_exibeQuantidadeDeSensores
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
  9735                           	line	794
  9736                           global __ptext35
  9737                           __ptext35:	;psect for function _exibeNumeroA
  9738  09DE                     psect	text35
  9739                           	file	"src/main.c"
  9740                           	line	794
  9741                           	global	__size_of_exibeNumeroA
  9742                           	__size_of_exibeNumeroA	equ	__end_of_exibeNumeroA-_exibeNumeroA
  9743  000A                     	
  9744                           _exibeNumeroA:	
  9745  09DE                     ;incstack = 0
  9746                           	opt	stack 3
  9747                           ; Regs used in _exibeNumeroA: []
  9748                           	line	795
  9749                           	
  9750                           l3579:	
  9751  09DE                     ;main.c: 795: RB1 = 0;
  9752                           	bcf	status, 5	;RP0=0, select bank0
  9753  09DE  1283               	bcf	status, 6	;RP1=0, select bank0
  9754  09DF  1303               	bcf	(49/8),(49)&7	;volatile
  9755  09E0  1086               	line	796
  9756                           ;main.c: 796: RB2 = 0;
  9757                           	bcf	(50/8),(50)&7	;volatile
  9758  09E1  1106               	line	797
  9759                           ;main.c: 797: RB3 = 0;
  9760                           	bcf	(51/8),(51)&7	;volatile
  9761  09E2  1186               	line	798
  9762                           ;main.c: 798: RB4 = 1;
  9763                           	bsf	(52/8),(52)&7	;volatile
  9764  09E3  1606               	line	799
  9765                           ;main.c: 799: RB5 = 0;
  9766                           	bcf	(53/8),(53)&7	;volatile
  9767  09E4  1286               	line	800
  9768                           ;main.c: 800: RB6 = 0;
  9769                           	bcf	(54/8),(54)&7	;volatile
  9770  09E5  1306               	line	801
  9771                           ;main.c: 801: RB7 = 0;
  9772                           	bcf	(55/8),(55)&7	;volatile
  9773  09E6  1386               	line	802
  9774                           	
  9775                           l459:	
  9776  09E7                     	return
  9777  09E7  0008               	opt stack 0
  9778                           GLOBAL	__end_of_exibeNumeroA
  9779                           	__end_of_exibeNumeroA:
  9780  09E8                     	signat	_exibeNumeroA,89
  9781                           	global	_exibeNumero9
  9782                           
  9783 ;; *************** function _exibeNumero9 *****************
  9784 ;; Defined at:
  9785 ;;		line 784 in file "src/main.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;		None
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;		None
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      void 
  9792 ;; Registers used:
  9793 ;;		None
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9799 ;;      Params:         0       0       0       0       0
  9800 ;;      Locals:         0       0       0       0       0
  9801 ;;      Temps:          0       0       0       0       0
  9802 ;;      Totals:         0       0       0       0       0
  9803 ;;Total ram usage:        0 bytes
  9804 ;; Hardware stack levels used:    1
  9805 ;; Hardware stack levels required when called:    2
  9806 ;; This function calls:
  9807 ;;		Nothing
  9808 ;; This function is called by:
  9809 ;;		_exibeQuantidadeDeSensores
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
  9813                           	line	784
  9814                           global __ptext36
  9815                           __ptext36:	;psect for function _exibeNumero9
  9816  09D4                     psect	text36
  9817                           	file	"src/main.c"
  9818                           	line	784
  9819                           	global	__size_of_exibeNumero9
  9820                           	__size_of_exibeNumero9	equ	__end_of_exibeNumero9-_exibeNumero9
  9821  000A                     	
  9822                           _exibeNumero9:	
  9823  09D4                     ;incstack = 0
  9824                           	opt	stack 3
  9825                           ; Regs used in _exibeNumero9: []
  9826                           	line	785
  9827                           	
  9828                           l3577:	
  9829  09D4                     ;main.c: 785: RB1 = 0;
  9830                           	bcf	status, 5	;RP0=0, select bank0
  9831  09D4  1283               	bcf	status, 6	;RP1=0, select bank0
  9832  09D5  1303               	bcf	(49/8),(49)&7	;volatile
  9833  09D6  1086               	line	786
  9834                           ;main.c: 786: RB2 = 0;
  9835                           	bcf	(50/8),(50)&7	;volatile
  9836  09D7  1106               	line	787
  9837                           ;main.c: 787: RB3 = 0;
  9838                           	bcf	(51/8),(51)&7	;volatile
  9839  09D8  1186               	line	788
  9840                           ;main.c: 788: RB4 = 0;
  9841                           	bcf	(52/8),(52)&7	;volatile
  9842  09D9  1206               	line	789
  9843                           ;main.c: 789: RB5 = 1;
  9844                           	bsf	(53/8),(53)&7	;volatile
  9845  09DA  1686               	line	790
  9846                           ;main.c: 790: RB6 = 0;
  9847                           	bcf	(54/8),(54)&7	;volatile
  9848  09DB  1306               	line	791
  9849                           ;main.c: 791: RB7 = 0;
  9850                           	bcf	(55/8),(55)&7	;volatile
  9851  09DC  1386               	line	792
  9852                           	
  9853                           l456:	
  9854  09DD                     	return
  9855  09DD  0008               	opt stack 0
  9856                           GLOBAL	__end_of_exibeNumero9
  9857                           	__end_of_exibeNumero9:
  9858  09DE                     	signat	_exibeNumero9,89
  9859                           	global	_exibeNumero8
  9860                           
  9861 ;; *************** function _exibeNumero8 *****************
  9862 ;; Defined at:
  9863 ;;		line 774 in file "src/main.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;		None
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;		None
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      void 
  9870 ;; Registers used:
  9871 ;;		None
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9877 ;;      Params:         0       0       0       0       0
  9878 ;;      Locals:         0       0       0       0       0
  9879 ;;      Temps:          0       0       0       0       0
  9880 ;;      Totals:         0       0       0       0       0
  9881 ;;Total ram usage:        0 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:    2
  9884 ;; This function calls:
  9885 ;;		Nothing
  9886 ;; This function is called by:
  9887 ;;		_exibeQuantidadeDeSensores
  9888 ;;		_inicializaDisplay
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
  9892                           	line	774
  9893                           global __ptext37
  9894                           __ptext37:	;psect for function _exibeNumero8
  9895  09CA                     psect	text37
  9896                           	file	"src/main.c"
  9897                           	line	774
  9898                           	global	__size_of_exibeNumero8
  9899                           	__size_of_exibeNumero8	equ	__end_of_exibeNumero8-_exibeNumero8
  9900  000A                     	
  9901                           _exibeNumero8:	
  9902  09CA                     ;incstack = 0
  9903                           	opt	stack 4
  9904                           ; Regs used in _exibeNumero8: []
  9905                           	line	775
  9906                           	
  9907                           l3575:	
  9908  09CA                     ;main.c: 775: RB1 = 0;
  9909                           	bcf	status, 5	;RP0=0, select bank0
  9910  09CA  1283               	bcf	status, 6	;RP1=0, select bank0
  9911  09CB  1303               	bcf	(49/8),(49)&7	;volatile
  9912  09CC  1086               	line	776
  9913                           ;main.c: 776: RB2 = 0;
  9914                           	bcf	(50/8),(50)&7	;volatile
  9915  09CD  1106               	line	777
  9916                           ;main.c: 777: RB3 = 0;
  9917                           	bcf	(51/8),(51)&7	;volatile
  9918  09CE  1186               	line	778
  9919                           ;main.c: 778: RB4 = 0;
  9920                           	bcf	(52/8),(52)&7	;volatile
  9921  09CF  1206               	line	779
  9922                           ;main.c: 779: RB5 = 0;
  9923                           	bcf	(53/8),(53)&7	;volatile
  9924  09D0  1286               	line	780
  9925                           ;main.c: 780: RB6 = 0;
  9926                           	bcf	(54/8),(54)&7	;volatile
  9927  09D1  1306               	line	781
  9928                           ;main.c: 781: RB7 = 0;
  9929                           	bcf	(55/8),(55)&7	;volatile
  9930  09D2  1386               	line	782
  9931                           	
  9932                           l453:	
  9933  09D3                     	return
  9934  09D3  0008               	opt stack 0
  9935                           GLOBAL	__end_of_exibeNumero8
  9936                           	__end_of_exibeNumero8:
  9937  09D4                     	signat	_exibeNumero8,89
  9938                           	global	_exibeNumero7
  9939                           
  9940 ;; *************** function _exibeNumero7 *****************
  9941 ;; Defined at:
  9942 ;;		line 764 in file "src/main.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;		None
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;		None
  9947 ;; Return value:  Size  Location     Type
  9948 ;;                  1    wreg      void 
  9949 ;; Registers used:
  9950 ;;		None
  9951 ;; Tracked objects:
  9952 ;;		On entry : 0/0
  9953 ;;		On exit  : 0/0
  9954 ;;		Unchanged: 0/0
  9955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9956 ;;      Params:         0       0       0       0       0
  9957 ;;      Locals:         0       0       0       0       0
  9958 ;;      Temps:          0       0       0       0       0
  9959 ;;      Totals:         0       0       0       0       0
  9960 ;;Total ram usage:        0 bytes
  9961 ;; Hardware stack levels used:    1
  9962 ;; Hardware stack levels required when called:    2
  9963 ;; This function calls:
  9964 ;;		Nothing
  9965 ;; This function is called by:
  9966 ;;		_exibeQuantidadeDeSensores
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
  9970                           	line	764
  9971                           global __ptext38
  9972                           __ptext38:	;psect for function _exibeNumero7
  9973  09C0                     psect	text38
  9974                           	file	"src/main.c"
  9975                           	line	764
  9976                           	global	__size_of_exibeNumero7
  9977                           	__size_of_exibeNumero7	equ	__end_of_exibeNumero7-_exibeNumero7
  9978  000A                     	
  9979                           _exibeNumero7:	
  9980  09C0                     ;incstack = 0
  9981                           	opt	stack 3
  9982                           ; Regs used in _exibeNumero7: []
  9983                           	line	765
  9984                           	
  9985                           l3573:	
  9986  09C0                     ;main.c: 765: RB1 = 0;
  9987                           	bcf	status, 5	;RP0=0, select bank0
  9988  09C0  1283               	bcf	status, 6	;RP1=0, select bank0
  9989  09C1  1303               	bcf	(49/8),(49)&7	;volatile
  9990  09C2  1086               	line	766
  9991                           ;main.c: 766: RB2 = 0;
  9992                           	bcf	(50/8),(50)&7	;volatile
  9993  09C3  1106               	line	767
  9994                           ;main.c: 767: RB3 = 0;
  9995                           	bcf	(51/8),(51)&7	;volatile
  9996  09C4  1186               	line	768
  9997                           ;main.c: 768: RB4 = 1;
  9998                           	bsf	(52/8),(52)&7	;volatile
  9999  09C5  1606               	line	769
 10000                           ;main.c: 769: RB5 = 1;
 10001                           	bsf	(53/8),(53)&7	;volatile
 10002  09C6  1686               	line	770
 10003                           ;main.c: 770: RB6 = 1;
 10004                           	bsf	(54/8),(54)&7	;volatile
 10005  09C7  1706               	line	771
 10006                           ;main.c: 771: RB7 = 1;
 10007                           	bsf	(55/8),(55)&7	;volatile
 10008  09C8  1786               	line	772
 10009                           	
 10010                           l450:	
 10011  09C9                     	return
 10012  09C9  0008               	opt stack 0
 10013                           GLOBAL	__end_of_exibeNumero7
 10014                           	__end_of_exibeNumero7:
 10015  09CA                     	signat	_exibeNumero7,89
 10016                           	global	_exibeNumero6
 10017                           
 10018 ;; *************** function _exibeNumero6 *****************
 10019 ;; Defined at:
 10020 ;;		line 754 in file "src/main.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;		None
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;		None
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  1    wreg      void 
 10027 ;; Registers used:
 10028 ;;		None
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10034 ;;      Params:         0       0       0       0       0
 10035 ;;      Locals:         0       0       0       0       0
 10036 ;;      Temps:          0       0       0       0       0
 10037 ;;      Totals:         0       0       0       0       0
 10038 ;;Total ram usage:        0 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; Hardware stack levels required when called:    2
 10041 ;; This function calls:
 10042 ;;		Nothing
 10043 ;; This function is called by:
 10044 ;;		_exibeQuantidadeDeSensores
 10045 ;; This function uses a non-reentrant model
 10046 ;;
 10047                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 10048                           	line	754
 10049                           global __ptext39
 10050                           __ptext39:	;psect for function _exibeNumero6
 10051  09B6                     psect	text39
 10052                           	file	"src/main.c"
 10053                           	line	754
 10054                           	global	__size_of_exibeNumero6
 10055                           	__size_of_exibeNumero6	equ	__end_of_exibeNumero6-_exibeNumero6
 10056  000A                     	
 10057                           _exibeNumero6:	
 10058  09B6                     ;incstack = 0
 10059                           	opt	stack 3
 10060                           ; Regs used in _exibeNumero6: []
 10061                           	line	755
 10062                           	
 10063                           l3571:	
 10064  09B6                     ;main.c: 755: RB1 = 0;
 10065                           	bcf	status, 5	;RP0=0, select bank0
 10066  09B6  1283               	bcf	status, 6	;RP1=0, select bank0
 10067  09B7  1303               	bcf	(49/8),(49)&7	;volatile
 10068  09B8  1086               	line	756
 10069                           ;main.c: 756: RB2 = 1;
 10070                           	bsf	(50/8),(50)&7	;volatile
 10071  09B9  1506               	line	757
 10072                           ;main.c: 757: RB3 = 0;
 10073                           	bcf	(51/8),(51)&7	;volatile
 10074  09BA  1186               	line	758
 10075                           ;main.c: 758: RB4 = 0;
 10076                           	bcf	(52/8),(52)&7	;volatile
 10077  09BB  1206               	line	759
 10078                           ;main.c: 759: RB5 = 0;
 10079                           	bcf	(53/8),(53)&7	;volatile
 10080  09BC  1286               	line	760
 10081                           ;main.c: 760: RB6 = 0;
 10082                           	bcf	(54/8),(54)&7	;volatile
 10083  09BD  1306               	line	761
 10084                           ;main.c: 761: RB7 = 0;
 10085                           	bcf	(55/8),(55)&7	;volatile
 10086  09BE  1386               	line	762
 10087                           	
 10088                           l447:	
 10089  09BF                     	return
 10090  09BF  0008               	opt stack 0
 10091                           GLOBAL	__end_of_exibeNumero6
 10092                           	__end_of_exibeNumero6:
 10093  09C0                     	signat	_exibeNumero6,89
 10094                           	global	_exibeNumero5
 10095                           
 10096 ;; *************** function _exibeNumero5 *****************
 10097 ;; Defined at:
 10098 ;;		line 744 in file "src/main.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;		None
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;		None
 10103 ;; Return value:  Size  Location     Type
 10104 ;;                  1    wreg      void 
 10105 ;; Registers used:
 10106 ;;		None
 10107 ;; Tracked objects:
 10108 ;;		On entry : 0/0
 10109 ;;		On exit  : 0/0
 10110 ;;		Unchanged: 0/0
 10111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10112 ;;      Params:         0       0       0       0       0
 10113 ;;      Locals:         0       0       0       0       0
 10114 ;;      Temps:          0       0       0       0       0
 10115 ;;      Totals:         0       0       0       0       0
 10116 ;;Total ram usage:        0 bytes
 10117 ;; Hardware stack levels used:    1
 10118 ;; Hardware stack levels required when called:    2
 10119 ;; This function calls:
 10120 ;;		Nothing
 10121 ;; This function is called by:
 10122 ;;		_exibeQuantidadeDeSensores
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 10126                           	line	744
 10127                           global __ptext40
 10128                           __ptext40:	;psect for function _exibeNumero5
 10129  09AC                     psect	text40
 10130                           	file	"src/main.c"
 10131                           	line	744
 10132                           	global	__size_of_exibeNumero5
 10133                           	__size_of_exibeNumero5	equ	__end_of_exibeNumero5-_exibeNumero5
 10134  000A                     	
 10135                           _exibeNumero5:	
 10136  09AC                     ;incstack = 0
 10137                           	opt	stack 3
 10138                           ; Regs used in _exibeNumero5: []
 10139                           	line	745
 10140                           	
 10141                           l3569:	
 10142  09AC                     ;main.c: 745: RB1 = 0;
 10143                           	bcf	status, 5	;RP0=0, select bank0
 10144  09AC  1283               	bcf	status, 6	;RP1=0, select bank0
 10145  09AD  1303               	bcf	(49/8),(49)&7	;volatile
 10146  09AE  1086               	line	746
 10147                           ;main.c: 746: RB2 = 1;
 10148                           	bsf	(50/8),(50)&7	;volatile
 10149  09AF  1506               	line	747
 10150                           ;main.c: 747: RB3 = 0;
 10151                           	bcf	(51/8),(51)&7	;volatile
 10152  09B0  1186               	line	748
 10153                           ;main.c: 748: RB4 = 0;
 10154                           	bcf	(52/8),(52)&7	;volatile
 10155  09B1  1206               	line	749
 10156                           ;main.c: 749: RB5 = 1;
 10157                           	bsf	(53/8),(53)&7	;volatile
 10158  09B2  1686               	line	750
 10159                           ;main.c: 750: RB6 = 0;
 10160                           	bcf	(54/8),(54)&7	;volatile
 10161  09B3  1306               	line	751
 10162                           ;main.c: 751: RB7 = 0;
 10163                           	bcf	(55/8),(55)&7	;volatile
 10164  09B4  1386               	line	752
 10165                           	
 10166                           l444:	
 10167  09B5                     	return
 10168  09B5  0008               	opt stack 0
 10169                           GLOBAL	__end_of_exibeNumero5
 10170                           	__end_of_exibeNumero5:
 10171  09B6                     	signat	_exibeNumero5,89
 10172                           	global	_exibeNumero4
 10173                           
 10174 ;; *************** function _exibeNumero4 *****************
 10175 ;; Defined at:
 10176 ;;		line 734 in file "src/main.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;		None
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;		None
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  1    wreg      void 
 10183 ;; Registers used:
 10184 ;;		None
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10190 ;;      Params:         0       0       0       0       0
 10191 ;;      Locals:         0       0       0       0       0
 10192 ;;      Temps:          0       0       0       0       0
 10193 ;;      Totals:         0       0       0       0       0
 10194 ;;Total ram usage:        0 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:    2
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		_exibeQuantidadeDeSensores
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 10204                           	line	734
 10205                           global __ptext41
 10206                           __ptext41:	;psect for function _exibeNumero4
 10207  09A2                     psect	text41
 10208                           	file	"src/main.c"
 10209                           	line	734
 10210                           	global	__size_of_exibeNumero4
 10211                           	__size_of_exibeNumero4	equ	__end_of_exibeNumero4-_exibeNumero4
 10212  000A                     	
 10213                           _exibeNumero4:	
 10214  09A2                     ;incstack = 0
 10215                           	opt	stack 3
 10216                           ; Regs used in _exibeNumero4: []
 10217                           	line	735
 10218                           	
 10219                           l3567:	
 10220  09A2                     ;main.c: 735: RB1 = 1;
 10221                           	bcf	status, 5	;RP0=0, select bank0
 10222  09A2  1283               	bcf	status, 6	;RP1=0, select bank0
 10223  09A3  1303               	bsf	(49/8),(49)&7	;volatile
 10224  09A4  1486               	line	736
 10225                           ;main.c: 736: RB2 = 0;
 10226                           	bcf	(50/8),(50)&7	;volatile
 10227  09A5  1106               	line	737
 10228                           ;main.c: 737: RB3 = 0;
 10229                           	bcf	(51/8),(51)&7	;volatile
 10230  09A6  1186               	line	738
 10231                           ;main.c: 738: RB4 = 1;
 10232                           	bsf	(52/8),(52)&7	;volatile
 10233  09A7  1606               	line	739
 10234                           ;main.c: 739: RB5 = 1;
 10235                           	bsf	(53/8),(53)&7	;volatile
 10236  09A8  1686               	line	740
 10237                           ;main.c: 740: RB6 = 0;
 10238                           	bcf	(54/8),(54)&7	;volatile
 10239  09A9  1306               	line	741
 10240                           ;main.c: 741: RB7 = 0;
 10241                           	bcf	(55/8),(55)&7	;volatile
 10242  09AA  1386               	line	742
 10243                           	
 10244                           l441:	
 10245  09AB                     	return
 10246  09AB  0008               	opt stack 0
 10247                           GLOBAL	__end_of_exibeNumero4
 10248                           	__end_of_exibeNumero4:
 10249  09AC                     	signat	_exibeNumero4,89
 10250                           	global	_exibeNumero3
 10251                           
 10252 ;; *************** function _exibeNumero3 *****************
 10253 ;; Defined at:
 10254 ;;		line 724 in file "src/main.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;		None
 10257 ;; Auto vars:     Size  Location     Type
 10258 ;;		None
 10259 ;; Return value:  Size  Location     Type
 10260 ;;                  1    wreg      void 
 10261 ;; Registers used:
 10262 ;;		None
 10263 ;; Tracked objects:
 10264 ;;		On entry : 0/0
 10265 ;;		On exit  : 0/0
 10266 ;;		Unchanged: 0/0
 10267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10268 ;;      Params:         0       0       0       0       0
 10269 ;;      Locals:         0       0       0       0       0
 10270 ;;      Temps:          0       0       0       0       0
 10271 ;;      Totals:         0       0       0       0       0
 10272 ;;Total ram usage:        0 bytes
 10273 ;; Hardware stack levels used:    1
 10274 ;; Hardware stack levels required when called:    2
 10275 ;; This function calls:
 10276 ;;		Nothing
 10277 ;; This function is called by:
 10278 ;;		_exibeQuantidadeDeSensores
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 10282                           	line	724
 10283                           global __ptext42
 10284                           __ptext42:	;psect for function _exibeNumero3
 10285  0998                     psect	text42
 10286                           	file	"src/main.c"
 10287                           	line	724
 10288                           	global	__size_of_exibeNumero3
 10289                           	__size_of_exibeNumero3	equ	__end_of_exibeNumero3-_exibeNumero3
 10290  000A                     	
 10291                           _exibeNumero3:	
 10292  0998                     ;incstack = 0
 10293                           	opt	stack 3
 10294                           ; Regs used in _exibeNumero3: []
 10295                           	line	725
 10296                           	
 10297                           l3565:	
 10298  0998                     ;main.c: 725: RB1 = 0;
 10299                           	bcf	status, 5	;RP0=0, select bank0
 10300  0998  1283               	bcf	status, 6	;RP1=0, select bank0
 10301  0999  1303               	bcf	(49/8),(49)&7	;volatile
 10302  099A  1086               	line	726
 10303                           ;main.c: 726: RB2 = 0;
 10304                           	bcf	(50/8),(50)&7	;volatile
 10305  099B  1106               	line	727
 10306                           ;main.c: 727: RB3 = 0;
 10307                           	bcf	(51/8),(51)&7	;volatile
 10308  099C  1186               	line	728
 10309                           ;main.c: 728: RB4 = 0;
 10310                           	bcf	(52/8),(52)&7	;volatile
 10311  099D  1206               	line	729
 10312                           ;main.c: 729: RB5 = 1;
 10313                           	bsf	(53/8),(53)&7	;volatile
 10314  099E  1686               	line	730
 10315                           ;main.c: 730: RB6 = 1;
 10316                           	bsf	(54/8),(54)&7	;volatile
 10317  099F  1706               	line	731
 10318                           ;main.c: 731: RB7 = 0;
 10319                           	bcf	(55/8),(55)&7	;volatile
 10320  09A0  1386               	line	732
 10321                           	
 10322                           l438:	
 10323  09A1                     	return
 10324  09A1  0008               	opt stack 0
 10325                           GLOBAL	__end_of_exibeNumero3
 10326                           	__end_of_exibeNumero3:
 10327  09A2                     	signat	_exibeNumero3,89
 10328                           	global	_exibeNumero2
 10329                           
 10330 ;; *************** function _exibeNumero2 *****************
 10331 ;; Defined at:
 10332 ;;		line 714 in file "src/main.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;		None
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;		None
 10337 ;; Return value:  Size  Location     Type
 10338 ;;                  1    wreg      void 
 10339 ;; Registers used:
 10340 ;;		None
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10346 ;;      Params:         0       0       0       0       0
 10347 ;;      Locals:         0       0       0       0       0
 10348 ;;      Temps:          0       0       0       0       0
 10349 ;;      Totals:         0       0       0       0       0
 10350 ;;Total ram usage:        0 bytes
 10351 ;; Hardware stack levels used:    1
 10352 ;; Hardware stack levels required when called:    2
 10353 ;; This function calls:
 10354 ;;		Nothing
 10355 ;; This function is called by:
 10356 ;;		_exibeQuantidadeDeSensores
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 10360                           	line	714
 10361                           global __ptext43
 10362                           __ptext43:	;psect for function _exibeNumero2
 10363  098E                     psect	text43
 10364                           	file	"src/main.c"
 10365                           	line	714
 10366                           	global	__size_of_exibeNumero2
 10367                           	__size_of_exibeNumero2	equ	__end_of_exibeNumero2-_exibeNumero2
 10368  000A                     	
 10369                           _exibeNumero2:	
 10370  098E                     ;incstack = 0
 10371                           	opt	stack 3
 10372                           ; Regs used in _exibeNumero2: []
 10373                           	line	715
 10374                           	
 10375                           l3563:	
 10376  098E                     ;main.c: 715: RB1 = 0;
 10377                           	bcf	status, 5	;RP0=0, select bank0
 10378  098E  1283               	bcf	status, 6	;RP1=0, select bank0
 10379  098F  1303               	bcf	(49/8),(49)&7	;volatile
 10380  0990  1086               	line	716
 10381                           ;main.c: 716: RB2 = 0;
 10382                           	bcf	(50/8),(50)&7	;volatile
 10383  0991  1106               	line	717
 10384                           ;main.c: 717: RB3 = 1;
 10385                           	bsf	(51/8),(51)&7	;volatile
 10386  0992  1586               	line	718
 10387                           ;main.c: 718: RB4 = 0;
 10388                           	bcf	(52/8),(52)&7	;volatile
 10389  0993  1206               	line	719
 10390                           ;main.c: 719: RB5 = 0;
 10391                           	bcf	(53/8),(53)&7	;volatile
 10392  0994  1286               	line	720
 10393                           ;main.c: 720: RB6 = 1;
 10394                           	bsf	(54/8),(54)&7	;volatile
 10395  0995  1706               	line	721
 10396                           ;main.c: 721: RB7 = 0;
 10397                           	bcf	(55/8),(55)&7	;volatile
 10398  0996  1386               	line	722
 10399                           	
 10400                           l435:	
 10401  0997                     	return
 10402  0997  0008               	opt stack 0
 10403                           GLOBAL	__end_of_exibeNumero2
 10404                           	__end_of_exibeNumero2:
 10405  0998                     	signat	_exibeNumero2,89
 10406                           	global	_exibeNumero1
 10407                           
 10408 ;; *************** function _exibeNumero1 *****************
 10409 ;; Defined at:
 10410 ;;		line 704 in file "src/main.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;		None
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;		None
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  1    wreg      void 
 10417 ;; Registers used:
 10418 ;;		None
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10424 ;;      Params:         0       0       0       0       0
 10425 ;;      Locals:         0       0       0       0       0
 10426 ;;      Temps:          0       0       0       0       0
 10427 ;;      Totals:         0       0       0       0       0
 10428 ;;Total ram usage:        0 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    2
 10431 ;; This function calls:
 10432 ;;		Nothing
 10433 ;; This function is called by:
 10434 ;;		_exibeQuantidadeDeSensores
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 10438                           	line	704
 10439                           global __ptext44
 10440                           __ptext44:	;psect for function _exibeNumero1
 10441  0984                     psect	text44
 10442                           	file	"src/main.c"
 10443                           	line	704
 10444                           	global	__size_of_exibeNumero1
 10445                           	__size_of_exibeNumero1	equ	__end_of_exibeNumero1-_exibeNumero1
 10446  000A                     	
 10447                           _exibeNumero1:	
 10448  0984                     ;incstack = 0
 10449                           	opt	stack 3
 10450                           ; Regs used in _exibeNumero1: []
 10451                           	line	705
 10452                           	
 10453                           l3561:	
 10454  0984                     ;main.c: 705: RB1 = 1;
 10455                           	bcf	status, 5	;RP0=0, select bank0
 10456  0984  1283               	bcf	status, 6	;RP1=0, select bank0
 10457  0985  1303               	bsf	(49/8),(49)&7	;volatile
 10458  0986  1486               	line	706
 10459                           ;main.c: 706: RB2 = 0;
 10460                           	bcf	(50/8),(50)&7	;volatile
 10461  0987  1106               	line	707
 10462                           ;main.c: 707: RB3 = 0;
 10463                           	bcf	(51/8),(51)&7	;volatile
 10464  0988  1186               	line	708
 10465                           ;main.c: 708: RB4 = 1;
 10466                           	bsf	(52/8),(52)&7	;volatile
 10467  0989  1606               	line	709
 10468                           ;main.c: 709: RB5 = 1;
 10469                           	bsf	(53/8),(53)&7	;volatile
 10470  098A  1686               	line	710
 10471                           ;main.c: 710: RB6 = 1;
 10472                           	bsf	(54/8),(54)&7	;volatile
 10473  098B  1706               	line	711
 10474                           ;main.c: 711: RB7 = 1;
 10475                           	bsf	(55/8),(55)&7	;volatile
 10476  098C  1786               	line	712
 10477                           	
 10478                           l432:	
 10479  098D                     	return
 10480  098D  0008               	opt stack 0
 10481                           GLOBAL	__end_of_exibeNumero1
 10482                           	__end_of_exibeNumero1:
 10483  098E                     	signat	_exibeNumero1,89
 10484                           	global	_exibeNumero0
 10485                           
 10486 ;; *************** function _exibeNumero0 *****************
 10487 ;; Defined at:
 10488 ;;		line 694 in file "src/main.c"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;		None
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;		None
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  1    wreg      void 
 10495 ;; Registers used:
 10496 ;;		None
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10502 ;;      Params:         0       0       0       0       0
 10503 ;;      Locals:         0       0       0       0       0
 10504 ;;      Temps:          0       0       0       0       0
 10505 ;;      Totals:         0       0       0       0       0
 10506 ;;Total ram usage:        0 bytes
 10507 ;; Hardware stack levels used:    1
 10508 ;; Hardware stack levels required when called:    2
 10509 ;; This function calls:
 10510 ;;		Nothing
 10511 ;; This function is called by:
 10512 ;;		_exibeQuantidadeDeSensores
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 10516                           	line	694
 10517                           global __ptext45
 10518                           __ptext45:	;psect for function _exibeNumero0
 10519  097A                     psect	text45
 10520                           	file	"src/main.c"
 10521                           	line	694
 10522                           	global	__size_of_exibeNumero0
 10523                           	__size_of_exibeNumero0	equ	__end_of_exibeNumero0-_exibeNumero0
 10524  000A                     	
 10525                           _exibeNumero0:	
 10526  097A                     ;incstack = 0
 10527                           	opt	stack 3
 10528                           ; Regs used in _exibeNumero0: []
 10529                           	line	695
 10530                           	
 10531                           l3559:	
 10532  097A                     ;main.c: 695: RB1 = 0;
 10533                           	bcf	status, 5	;RP0=0, select bank0
 10534  097A  1283               	bcf	status, 6	;RP1=0, select bank0
 10535  097B  1303               	bcf	(49/8),(49)&7	;volatile
 10536  097C  1086               	line	696
 10537                           ;main.c: 696: RB2 = 0;
 10538                           	bcf	(50/8),(50)&7	;volatile
 10539  097D  1106               	line	697
 10540                           ;main.c: 697: RB3 = 0;
 10541                           	bcf	(51/8),(51)&7	;volatile
 10542  097E  1186               	line	698
 10543                           ;main.c: 698: RB4 = 0;
 10544                           	bcf	(52/8),(52)&7	;volatile
 10545  097F  1206               	line	699
 10546                           ;main.c: 699: RB5 = 0;
 10547                           	bcf	(53/8),(53)&7	;volatile
 10548  0980  1286               	line	700
 10549                           ;main.c: 700: RB6 = 0;
 10550                           	bcf	(54/8),(54)&7	;volatile
 10551  0981  1306               	line	701
 10552                           ;main.c: 701: RB7 = 1;
 10553                           	bsf	(55/8),(55)&7	;volatile
 10554  0982  1786               	line	702
 10555                           	
 10556                           l429:	
 10557  0983                     	return
 10558  0983  0008               	opt stack 0
 10559                           GLOBAL	__end_of_exibeNumero0
 10560                           	__end_of_exibeNumero0:
 10561  0984                     	signat	_exibeNumero0,89
 10562                           	global	_delay_ms
 10563                           
 10564 ;; *************** function _delay_ms *****************
 10565 ;; Defined at:
 10566 ;;		line 183 in file "src/hardware.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;  valor           2    0[BANK0 ] unsigned int 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  contador        2    4[BANK0 ] unsigned int 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, status,2, status,0
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10580 ;;      Params:         0       2       0       0       0
 10581 ;;      Locals:         0       2       0       0       0
 10582 ;;      Temps:          0       2       0       0       0
 10583 ;;      Totals:         0       6       0       0       0
 10584 ;;Total ram usage:        6 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    2
 10587 ;; This function calls:
 10588 ;;		Nothing
 10589 ;; This function is called by:
 10590 ;;		_main
 10591 ;;		_testaSaidaPulsadaEm9Volts
 10592 ;;		_testaSaidaPulsadaEm20Volts
 10593 ;;		_giraDisplay
 10594 ;;		_inicializaDisplay
 10595 ;;		_entraEmModoAjuste
 10596 ;;		_modoTeste9
 10597 ;;		_modoTeste20
 10598 ;; This function uses a non-reentrant model
 10599 ;;
 10600                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
 10601                           	file	"src/hardware.c"
 10602                           	line	183
 10603                           global __ptext46
 10604                           __ptext46:	;psect for function _delay_ms
 10605  07D9                     psect	text46
 10606                           	file	"src/hardware.c"
 10607                           	line	183
 10608                           	global	__size_of_delay_ms
 10609                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
 10610  0027                     	
 10611                           _delay_ms:	
 10612  07D9                     ;incstack = 0
 10613                           	opt	stack 4
 10614                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
 10615                           	line	185
 10616                           	
 10617                           l3581:	
 10618  07D9                     ;hardware.c: 184: unsigned int contador;
 10619                           ;hardware.c: 185: for(contador = 0; contador < valor; contador = contador + 1){
 10620                           	bcf	status, 5	;RP0=0, select bank0
 10621  07D9  1283               	bcf	status, 6	;RP1=0, select bank0
 10622  07DA  1303               	clrf	(delay_ms@contador)
 10623  07DB  01A4               	clrf	(delay_ms@contador+1)
 10624  07DC  01A5               	goto	l3587
 10625  07DD  2FF4               	
 10626                           l79:	
 10627  07DE                     	line	187
 10628                           	
 10629                           l3583:	
 10630  07DE                     ;hardware.c: 187: _delay((unsigned long)((1)*(20000000/4000.0)));
 10631                           	opt asmopt_push
 10632                           opt asmopt_off
 10633                           movlw	7
 10634  07DE  3007               	bcf	status, 5	;RP0=0, select bank0
 10635  07DF  1283               	bcf	status, 6	;RP1=0, select bank0
 10636  07E0  1303               movwf	((??_delay_ms+0)+0+1),f
 10637  07E1  00A3               	movlw	124
 10638  07E2  307C               movwf	((??_delay_ms+0)+0),f
 10639  07E3  00A2               	u4107:
 10640  07E4                     decfsz	((??_delay_ms+0)+0),f
 10641  07E4  0BA2               	goto	u4107
 10642  07E5  2FE4               	decfsz	((??_delay_ms+0)+0+1),f
 10643  07E6  0BA3               	goto	u4107
 10644  07E7  2FE4               	nop
 10645  07E8  0000               opt asmopt_pop
 10646                           
 10647                           	line	185
 10648                           	
 10649                           l3585:	
 10650  07E9                     	bcf	status, 5	;RP0=0, select bank0
 10651  07E9  1283               	bcf	status, 6	;RP1=0, select bank0
 10652  07EA  1303               	movf	(delay_ms@contador),w
 10653  07EB  0824               	addlw	low(01h)
 10654  07EC  3E01               	movwf	(delay_ms@contador)
 10655  07ED  00A4               	movf	(delay_ms@contador+1),w
 10656  07EE  0825               	skipnc
 10657  07EF  1803               	addlw	1
 10658  07F0  3E01               	addlw	high(01h)
 10659  07F1  3E00               	movwf	1+(delay_ms@contador)
 10660  07F2  00A5               	goto	l3587
 10661  07F3  2FF4               	
 10662                           l78:	
 10663  07F4                     	
 10664                           l3587:	
 10665  07F4                     	movf	(delay_ms@valor+1),w
 10666  07F4  0821               	subwf	(delay_ms@contador+1),w
 10667  07F5  0225               	skipz
 10668  07F6  1D03               	goto	u3285
 10669  07F7  2FFA               	movf	(delay_ms@valor),w
 10670  07F8  0820               	subwf	(delay_ms@contador),w
 10671  07F9  0224               u3285:
 10672  07FA                     	skipc
 10673  07FA  1C03               	goto	u3281
 10674  07FB  2FFD               	goto	u3280
 10675  07FC  2FFE               u3281:
 10676  07FD                     	goto	l3583
 10677  07FD  2FDE               u3280:
 10678  07FE                     	goto	l81
 10679  07FE  2FFF               	
 10680                           l80:	
 10681  07FF                     	line	189
 10682                           	
 10683                           l81:	
 10684  07FF                     	return
 10685  07FF  0008               	opt stack 0
 10686                           GLOBAL	__end_of_delay_ms
 10687                           	__end_of_delay_ms:
 10688  0800                     	signat	_delay_ms,4217
 10689                           	global	_ligaModuloBoost
 10690                           
 10691 ;; *************** function _ligaModuloBoost *****************
 10692 ;; Defined at:
 10693 ;;		line 261 in file "src/main.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;		None
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;		None
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  1    wreg      void 
 10700 ;; Registers used:
 10701 ;;		None
 10702 ;; Tracked objects:
 10703 ;;		On entry : 0/0
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10707 ;;      Params:         0       0       0       0       0
 10708 ;;      Locals:         0       0       0       0       0
 10709 ;;      Temps:          0       0       0       0       0
 10710 ;;      Totals:         0       0       0       0       0
 10711 ;;Total ram usage:        0 bytes
 10712 ;; Hardware stack levels used:    1
 10713 ;; Hardware stack levels required when called:    2
 10714 ;; This function calls:
 10715 ;;		Nothing
 10716 ;; This function is called by:
 10717 ;;		_main
 10718 ;;		_entraEmModoAjuste
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           psect	text47,local,class=CODE,delta=2,merge=1,group=0
 10722                           	file	"src/main.c"
 10723                           	line	261
 10724                           global __ptext47
 10725                           __ptext47:	;psect for function _ligaModuloBoost
 10726  0003                     psect	text47
 10727                           	file	"src/main.c"
 10728                           	line	261
 10729                           	global	__size_of_ligaModuloBoost
 10730                           	__size_of_ligaModuloBoost	equ	__end_of_ligaModuloBoost-_ligaModuloBoost
 10731  0001                     	
 10732                           _ligaModuloBoost:	
 10733  0003                     ;incstack = 0
 10734                           	opt	stack 5
 10735                           ; Regs used in _ligaModuloBoost: []
 10736                           	line	263
 10737                           	
 10738                           l315:	
 10739  0003                     	return
 10740  0003  0008               	opt stack 0
 10741                           GLOBAL	__end_of_ligaModuloBoost
 10742                           	__end_of_ligaModuloBoost:
 10743  0004                     	signat	_ligaModuloBoost,89
 10744                           	global	_desligaModuloBoost
 10745                           
 10746 ;; *************** function _desligaModuloBoost *****************
 10747 ;; Defined at:
 10748 ;;		line 265 in file "src/main.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;		None
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;		None
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      void 
 10755 ;; Registers used:
 10756 ;;		None
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10762 ;;      Params:         0       0       0       0       0
 10763 ;;      Locals:         0       0       0       0       0
 10764 ;;      Temps:          0       0       0       0       0
 10765 ;;      Totals:         0       0       0       0       0
 10766 ;;Total ram usage:        0 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:    2
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_entraEmModoAjuste
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
 10776                           	line	265
 10777                           global __ptext48
 10778                           __ptext48:	;psect for function _desligaModuloBoost
 10779  0958                     psect	text48
 10780                           	file	"src/main.c"
 10781                           	line	265
 10782                           	global	__size_of_desligaModuloBoost
 10783                           	__size_of_desligaModuloBoost	equ	__end_of_desligaModuloBoost-_desligaModuloBoost
 10784  0001                     	
 10785                           _desligaModuloBoost:	
 10786  0958                     ;incstack = 0
 10787                           	opt	stack 4
 10788                           ; Regs used in _desligaModuloBoost: []
 10789                           	line	267
 10790                           	
 10791                           l318:	
 10792  0958                     	return
 10793  0958  0008               	opt stack 0
 10794                           GLOBAL	__end_of_desligaModuloBoost
 10795                           	__end_of_desligaModuloBoost:
 10796  0959                     	signat	_desligaModuloBoost,89
 10797                           	global	_checaBotaoAjustes
 10798                           
 10799 ;; *************** function _checaBotaoAjustes *****************
 10800 ;; Defined at:
 10801 ;;		line 999 in file "src/main.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;		None
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;  contador        2    0[BANK0 ] unsigned int 
 10806 ;; Return value:  Size  Location     Type
 10807 ;;                  1    wreg      unsigned char 
 10808 ;; Registers used:
 10809 ;;		wreg, status,2, status,0
 10810 ;; Tracked objects:
 10811 ;;		On entry : 0/0
 10812 ;;		On exit  : 0/0
 10813 ;;		Unchanged: 0/0
 10814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10815 ;;      Params:         0       0       0       0       0
 10816 ;;      Locals:         0       2       0       0       0
 10817 ;;      Temps:          0       0       0       0       0
 10818 ;;      Totals:         0       2       0       0       0
 10819 ;;Total ram usage:        2 bytes
 10820 ;; Hardware stack levels used:    1
 10821 ;; Hardware stack levels required when called:    2
 10822 ;; This function calls:
 10823 ;;		Nothing
 10824 ;; This function is called by:
 10825 ;;		_main
 10826 ;;		_entraEmModoAjuste
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           psect	text49,local,class=CODE,delta=2,merge=1,group=0
 10830                           	line	999
 10831                           global __ptext49
 10832                           __ptext49:	;psect for function _checaBotaoAjustes
 10833  0AD6                     psect	text49
 10834                           	file	"src/main.c"
 10835                           	line	999
 10836                           	global	__size_of_checaBotaoAjustes
 10837                           	__size_of_checaBotaoAjustes	equ	__end_of_checaBotaoAjustes-_checaBotaoAjustes
 10838  0021                     	
 10839                           _checaBotaoAjustes:	
 10840  0AD6                     ;incstack = 0
 10841                           	opt	stack 4
 10842                           ; Regs used in _checaBotaoAjustes: [wreg+status,2+status,0]
 10843                           	line	1002
 10844                           	
 10845                           l3721:	
 10846  0AD6                     ;main.c: 1000: unsigned int contador;
 10847                           ;main.c: 1002: contador = 0;
 10848                           	bcf	status, 5	;RP0=0, select bank0
 10849  0AD6  1283               	bcf	status, 6	;RP1=0, select bank0
 10850  0AD7  1303               	clrf	(checaBotaoAjustes@contador)
 10851  0AD8  01A0               	clrf	(checaBotaoAjustes@contador+1)
 10852  0AD9  01A1               	line	1003
 10853                           ;main.c: 1003: while(PORTCbits.RC0 == 0){
 10854                           	goto	l519
 10855  0ADA  2AEF               	
 10856                           l520:	
 10857  0ADB                     	line	1004
 10858                           	
 10859                           l3723:	
 10860  0ADB                     ;main.c: 1004: contador = contador + 1;
 10861                           	movf	(checaBotaoAjustes@contador),w
 10862  0ADB  0820               	addlw	low(01h)
 10863  0ADC  3E01               	movwf	(checaBotaoAjustes@contador)
 10864  0ADD  00A0               	movf	(checaBotaoAjustes@contador+1),w
 10865  0ADE  0821               	skipnc
 10866  0ADF  1803               	addlw	1
 10867  0AE0  3E01               	addlw	high(01h)
 10868  0AE1  3E00               	movwf	1+(checaBotaoAjustes@contador)
 10869  0AE2  00A1               	line	1005
 10870                           	
 10871                           l3725:	
 10872  0AE3                     ;main.c: 1005: if(contador > 5000){
 10873                           	movlw	013h
 10874  0AE3  3013               	subwf	(checaBotaoAjustes@contador+1),w
 10875  0AE4  0221               	movlw	089h
 10876  0AE5  3089               	skipnz
 10877  0AE6  1903               	subwf	(checaBotaoAjustes@contador),w
 10878  0AE7  0220               	skipc
 10879  0AE8  1C03               	goto	u3501
 10880  0AE9  2AEB               	goto	u3500
 10881  0AEA  2AEC               u3501:
 10882  0AEB                     	goto	l519
 10883  0AEB  2AEF               u3500:
 10884  0AEC                     	line	1006
 10885                           	
 10886                           l3727:	
 10887  0AEC                     ;main.c: 1006: return 1;
 10888                           	movlw	low(01h)
 10889  0AEC  3001               	goto	l522
 10890  0AED  2AF6               	
 10891                           l3729:	
 10892  0AEE                     	goto	l522
 10893  0AEE  2AF6               	line	1007
 10894                           	
 10895                           l521:	
 10896  0AEF                     	line	1008
 10897                           	
 10898                           l519:	
 10899  0AEF                     	line	1003
 10900                           	btfss	(7),0	;volatile
 10901  0AEF  1C07               	goto	u3511
 10902  0AF0  2AF2               	goto	u3510
 10903  0AF1  2AF3               u3511:
 10904  0AF2                     	goto	l3723
 10905  0AF2  2ADB               u3510:
 10906  0AF3                     	goto	l3731
 10907  0AF3  2AF4               	
 10908                           l523:	
 10909  0AF4                     	line	1009
 10910                           	
 10911                           l3731:	
 10912  0AF4                     ;main.c: 1007: }
 10913                           ;main.c: 1008: }
 10914                           ;main.c: 1009: return 0;
 10915                           	movlw	low(0)
 10916  0AF4  3000               	goto	l522
 10917  0AF5  2AF6               	
 10918                           l3733:	
 10919  0AF6                     	line	1010
 10920                           	
 10921                           l522:	
 10922  0AF6                     	return
 10923  0AF6  0008               	opt stack 0
 10924                           GLOBAL	__end_of_checaBotaoAjustes
 10925                           	__end_of_checaBotaoAjustes:
 10926  0AF7                     	signat	_checaBotaoAjustes,89
 10927                           	global	_INT0_init
 10928                           
 10929 ;; *************** function _INT0_init *****************
 10930 ;; Defined at:
 10931 ;;		line 131 in file "src/hardware.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;		None
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;		None
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  1    wreg      void 
 10938 ;; Registers used:
 10939 ;;		None
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10945 ;;      Params:         0       0       0       0       0
 10946 ;;      Locals:         0       0       0       0       0
 10947 ;;      Temps:          0       0       0       0       0
 10948 ;;      Totals:         0       0       0       0       0
 10949 ;;Total ram usage:        0 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; Hardware stack levels required when called:    2
 10952 ;; This function calls:
 10953 ;;		Nothing
 10954 ;; This function is called by:
 10955 ;;		_main
 10956 ;; This function uses a non-reentrant model
 10957 ;;
 10958                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
 10959                           	file	"src/hardware.c"
 10960                           	line	131
 10961                           global __ptext50
 10962                           __ptext50:	;psect for function _INT0_init
 10963  096B                     psect	text50
 10964                           	file	"src/hardware.c"
 10965                           	line	131
 10966                           	global	__size_of_INT0_init
 10967                           	__size_of_INT0_init	equ	__end_of_INT0_init-_INT0_init
 10968  0007                     	
 10969                           _INT0_init:	
 10970  096B                     ;incstack = 0
 10971                           	opt	stack 5
 10972                           ; Regs used in _INT0_init: []
 10973                           	line	132
 10974                           	
 10975                           l4045:	
 10976  096B                     ;hardware.c: 132: INTCONbits.INTE = 1;
 10977                           	bsf	(11),4	;volatile
 10978  096B  160B               	line	133
 10979                           ;hardware.c: 133: OPTION_REGbits.INTEDG = 1;
 10980                           	bsf	status, 5	;RP0=1, select bank1
 10981  096C  1683               	bcf	status, 6	;RP1=0, select bank1
 10982  096D  1303               	bsf	(129)^080h,6	;volatile
 10983  096E  1701               	line	134
 10984                           ;hardware.c: 134: INTCONbits.PEIE = 1;
 10985                           	bsf	(11),6	;volatile
 10986  096F  170B               	line	135
 10987                           ;hardware.c: 135: INTCONbits.GIE = 1;
 10988                           	bsf	(11),7	;volatile
 10989  0970  178B               	line	136
 10990                           	
 10991                           l63:	
 10992  0971                     	return
 10993  0971  0008               	opt stack 0
 10994                           GLOBAL	__end_of_INT0_init
 10995                           	__end_of_INT0_init:
 10996  0972                     	signat	_INT0_init,89
 10997                           	global	_trataInterrupcao
 10998                           
 10999 ;; *************** function _trataInterrupcao *****************
 11000 ;; Defined at:
 11001 ;;		line 136 in file "src/main.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;		None
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;		None
 11006 ;; Return value:  Size  Location     Type
 11007 ;;                  1    wreg      void 
 11008 ;; Registers used:
 11009 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11010 ;; Tracked objects:
 11011 ;;		On entry : 0/0
 11012 ;;		On exit  : 0/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11015 ;;      Params:         0       0       0       0       0
 11016 ;;      Locals:         0       0       0       0       0
 11017 ;;      Temps:          4       0       0       0       0
 11018 ;;      Totals:         4       0       0       0       0
 11019 ;;Total ram usage:        4 bytes
 11020 ;; Hardware stack levels used:    1
 11021 ;; Hardware stack levels required when called:    1
 11022 ;; This function calls:
 11023 ;;		_operacoesEmTick
 11024 ;;		_trataEntradaPulsada
 11025 ;; This function is called by:
 11026 ;;		Interrupt level 1
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           psect	text51,local,class=CODE,delta=2,merge=1,group=0
 11030                           	file	"src/main.c"
 11031                           	line	136
 11032                           global __ptext51
 11033                           __ptext51:	;psect for function _trataInterrupcao
 11034  0B1A                     psect	text51
 11035                           	file	"src/main.c"
 11036                           	line	136
 11037                           	global	__size_of_trataInterrupcao
 11038                           	__size_of_trataInterrupcao	equ	__end_of_trataInterrupcao-_trataInterrupcao
 11039  0025                     	
 11040                           _trataInterrupcao:	
 11041  0B1A                     ;incstack = 0
 11042                           	opt	stack 1
 11043                           ; Regs used in _trataInterrupcao: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11044                           psect	intentry,class=CODE,delta=2
 11045                           global __pintentry
 11046                           __pintentry:
 11047  0004                     global interrupt_function
 11048                           interrupt_function:
 11049  0004                     	global saved_w
 11050                           	saved_w	set	btemp+0
 11051  007E                     	movwf	saved_w
 11052  0004  00FE               	swapf	status,w
 11053  0005  0E03               	movwf	(??_trataInterrupcao+0)
 11054  0006  00F8               	movf	fsr0,w
 11055  0007  0804               	movwf	(??_trataInterrupcao+1)
 11056  0008  00F9               	movf	pclath,w
 11057  0009  080A               	movwf	(??_trataInterrupcao+2)
 11058  000A  00FA               	bcf	status, 5	;RP0=0, select bank0
 11059  000B  1283               	bcf	status, 6	;RP1=0, select bank0
 11060  000C  1303               	movf	btemp+1,w
 11061  000D  087F               	movwf	(??_trataInterrupcao+3)
 11062  000E  00FB               	ljmp	_trataInterrupcao
 11063  000F  120A  158A  2B1A   psect	text51
 11064                           	line	137
 11065                           	
 11066                           i1l3227:	
 11067  0B1A                     ;main.c: 137: if(PIR1bits.TMR1IF == 1){
 11068                           	btfss	(12),0	;volatile
 11069  0B1A  1C0C               	goto	u276_21
 11070  0B1B  2B1D               	goto	u276_20
 11071  0B1C  2B1E               u276_21:
 11072  0B1D                     	goto	i1l3233
 11073  0B1D  2B25               u276_20:
 11074  0B1E                     	line	138
 11075                           	
 11076                           i1l3229:	
 11077  0B1E                     ;main.c: 138: PIR1bits.TMR1IF = 0;
 11078                           	bcf	(12),0	;volatile
 11079  0B1E  100C               	line	141
 11080                           	
 11081                           i1l3231:	
 11082  0B1F                     ;main.c: 141: operacoesEmTick();
 11083                           	fcall	_operacoesEmTick
 11084  0B1F  120A  158A  2391  120A  158A  	goto	i1l3233
 11085  0B24  2B25               	line	142
 11086                           	
 11087                           i1l284:	
 11088  0B25                     	line	145
 11089                           	
 11090                           i1l3233:	
 11091  0B25                     ;main.c: 142: }
 11092                           ;main.c: 145: if(INTCONbits.INTF == 1){
 11093                           	btfss	(11),1	;volatile
 11094  0B25  1C8B               	goto	u277_21
 11095  0B26  2B28               	goto	u277_20
 11096  0B27  2B29               u277_21:
 11097  0B28                     	goto	i1l286
 11098  0B28  2B32               u277_20:
 11099  0B29                     	line	146
 11100                           	
 11101                           i1l3235:	
 11102  0B29                     ;main.c: 146: INTCONbits.INTF = 0;
 11103                           	bcf	(11),1	;volatile
 11104  0B29  108B               	line	147
 11105                           ;main.c: 147: INTCONbits.GIE = 0;
 11106                           	bcf	(11),7	;volatile
 11107  0B2A  138B               	line	148
 11108                           	
 11109                           i1l3237:	
 11110  0B2B                     ;main.c: 148: trataEntradaPulsada();
 11111                           	fcall	_trataEntradaPulsada
 11112  0B2B  120A  158A  2532  120A  158A  	line	149
 11113                           	
 11114                           i1l3239:	
 11115  0B30                     ;main.c: 149: INTCONbits.GIE = 1;
 11116                           	bsf	(11),7	;volatile
 11117  0B30  178B               	goto	i1l286
 11118  0B31  2B32               	line	150
 11119                           	
 11120                           i1l285:	
 11121  0B32                     	line	151
 11122                           	
 11123                           i1l286:	
 11124  0B32                     	movf	(??_trataInterrupcao+3),w
 11125  0B32  087B               	bcf	status, 5	;RP0=0, select bank0
 11126  0B33  1283               	bcf	status, 6	;RP1=0, select bank0
 11127  0B34  1303               	movwf	btemp+1
 11128  0B35  00FF               	movf	(??_trataInterrupcao+2),w
 11129  0B36  087A               	movwf	pclath
 11130  0B37  008A               	movf	(??_trataInterrupcao+1),w
 11131  0B38  0879               	movwf	fsr0
 11132  0B39  0084               	swapf	(??_trataInterrupcao+0)^0FFFFFF80h,w
 11133  0B3A  0E78               	movwf	status
 11134  0B3B  0083               	swapf	saved_w,f
 11135  0B3C  0EFE               	swapf	saved_w,w
 11136  0B3D  0E7E               	retfie
 11137  0B3E  0009               	opt stack 0
 11138                           GLOBAL	__end_of_trataInterrupcao
 11139                           	__end_of_trataInterrupcao:
 11140  0B3F                     	signat	_trataInterrupcao,89
 11141                           	global	_trataEntradaPulsada
 11142                           
 11143 ;; *************** function _trataEntradaPulsada *****************
 11144 ;; Defined at:
 11145 ;;		line 938 in file "src/main.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;		None
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;  mensagem       50    0        unsigned char [50]
 11150 ;;  amplitude       2    0[COMMON] unsigned int 
 11151 ;; Return value:  Size  Location     Type
 11152 ;;                  1    wreg      void 
 11153 ;; Registers used:
 11154 ;;		wreg, status,2, status,0
 11155 ;; Tracked objects:
 11156 ;;		On entry : 0/0
 11157 ;;		On exit  : 0/0
 11158 ;;		Unchanged: 0/0
 11159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11160 ;;      Params:         0       0       0       0       0
 11161 ;;      Locals:         2       0       0       0       0
 11162 ;;      Temps:          0       0       0       0       0
 11163 ;;      Totals:         2       0       0       0       0
 11164 ;;Total ram usage:        2 bytes
 11165 ;; Hardware stack levels used:    1
 11166 ;; This function calls:
 11167 ;;		Nothing
 11168 ;; This function is called by:
 11169 ;;		_trataInterrupcao
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           psect	text52,local,class=CODE,delta=2,merge=1,group=0
 11173                           	line	938
 11174                           global __ptext52
 11175                           __ptext52:	;psect for function _trataEntradaPulsada
 11176  0D32                     psect	text52
 11177                           	file	"src/main.c"
 11178                           	line	938
 11179                           	global	__size_of_trataEntradaPulsada
 11180                           	__size_of_trataEntradaPulsada	equ	__end_of_trataEntradaPulsada-_trataEntradaPulsada
 11181  005D                     	
 11182                           _trataEntradaPulsada:	
 11183  0D32                     ;incstack = 0
 11184                           	opt	stack 1
 11185                           ; Regs used in _trataEntradaPulsada: [wreg+status,2+status,0]
 11186                           	line	942
 11187                           	
 11188                           i1l3035:	
 11189  0D32                     ;main.c: 939: unsigned int amplitude;
 11190                           ;main.c: 940: char mensagem[50];
 11191                           ;main.c: 942: pulsosSemResposta = 0;
 11192                           	bsf	status, 5	;RP0=1, select bank1
 11193  0D32  1683               	bcf	status, 6	;RP1=0, select bank1
 11194  0D33  1303               	clrf	(_pulsosSemResposta)^080h
 11195  0D34  01DC               	clrf	(_pulsosSemResposta+1)^080h
 11196  0D35  01DD               	line	944
 11197                           	
 11198                           i1l3037:	
 11199  0D36                     ;main.c: 944: if(estadoDoSinal == 1){
 11200                           		decf	((_estadoDoSinal)^080h),w
 11201  0D36  035F               	btfss	status,2
 11202  0D37  1D03               	goto	u249_21
 11203  0D38  2D3A               	goto	u249_20
 11204  0D39  2D3B               u249_21:
 11205  0D3A                     	goto	i1l3061
 11206  0D3A  2D7C               u249_20:
 11207  0D3B                     	line	945
 11208                           	
 11209                           i1l3039:	
 11210  0D3B                     ;main.c: 945: if(tempoDeReacaoDoSensor < 1 || tempoDeReacaoDoSensor > 300){
 11211                           	movf	((_tempoDeReacaoDoSensor)),w
 11212  0D3B  0870               iorwf	((_tempoDeReacaoDoSensor+1)),w
 11213  0D3C  0471               	btfsc	status,2
 11214  0D3D  1903               	goto	u250_21
 11215  0D3E  2D40               	goto	u250_20
 11216  0D3F  2D41               u250_21:
 11217  0D40                     	goto	i1l498
 11218  0D40  2D4A               u250_20:
 11219  0D41                     	
 11220                           i1l3041:	
 11221  0D41                     	movlw	01h
 11222  0D41  3001               	subwf	(_tempoDeReacaoDoSensor+1),w
 11223  0D42  0271               	movlw	02Dh
 11224  0D43  302D               	skipnz
 11225  0D44  1903               	subwf	(_tempoDeReacaoDoSensor),w
 11226  0D45  0270               	skipc
 11227  0D46  1C03               	goto	u251_21
 11228  0D47  2D49               	goto	u251_20
 11229  0D48  2D4A               u251_21:
 11230  0D49                     	goto	i1l3043
 11231  0D49  2D4D               u251_20:
 11232  0D4A                     	
 11233                           i1l498:	
 11234  0D4A                     	line	946
 11235                           ;main.c: 946: flagTempoDeReacaoDoSensor = 1;
 11236                           	clrf	(_flagTempoDeReacaoDoSensor)
 11237  0D4A  01F4               	incf	(_flagTempoDeReacaoDoSensor),f
 11238  0D4B  0AF4               	goto	i1l3043
 11239  0D4C  2D4D               	line	947
 11240                           	
 11241                           i1l496:	
 11242  0D4D                     	line	948
 11243                           	
 11244                           i1l3043:	
 11245  0D4D                     ;main.c: 947: }
 11246                           ;main.c: 948: amplitude = 400;
 11247                           	movlw	090h
 11248  0D4D  3090               	movwf	(trataEntradaPulsada@amplitude)
 11249  0D4E  00F6               	movlw	01h
 11250  0D4F  3001               	movwf	((trataEntradaPulsada@amplitude))+1
 11251  0D50  00F7               	line	952
 11252                           	
 11253                           i1l3045:	
 11254  0D51                     ;main.c: 952: if(tensaoDeSaida == 9){
 11255                           		movlw	9
 11256  0D51  3009               	xorwf	((_tensaoDeSaida)^080h),w
 11257  0D52  0663               	btfss	status,2
 11258  0D53  1D03               	goto	u252_21
 11259  0D54  2D56               	goto	u252_20
 11260  0D55  2D57               u252_21:
 11261  0D56                     	goto	i1l3053
 11262  0D56  2D66               u252_20:
 11263  0D57                     	line	953
 11264                           	
 11265                           i1l3047:	
 11266  0D57                     ;main.c: 953: if(amplitude < 150){
 11267                           	movlw	0
 11268  0D57  3000               	subwf	(trataEntradaPulsada@amplitude+1),w
 11269  0D58  0277               	movlw	096h
 11270  0D59  3096               	skipnz
 11271  0D5A  1903               	subwf	(trataEntradaPulsada@amplitude),w
 11272  0D5B  0276               	skipnc
 11273  0D5C  1803               	goto	u253_21
 11274  0D5D  2D5F               	goto	u253_20
 11275  0D5E  2D60               u253_21:
 11276  0D5F                     	goto	i1l3051
 11277  0D5F  2D63               u253_20:
 11278  0D60                     	line	954
 11279                           	
 11280                           i1l3049:	
 11281  0D60                     ;main.c: 954: flagErrroDeAmplitude = 1;
 11282                           	clrf	(_flagErrroDeAmplitude)^080h
 11283  0D60  01E2               	incf	(_flagErrroDeAmplitude)^080h,f
 11284  0D61  0AE2               	line	955
 11285                           ;main.c: 955: }else{
 11286                           	goto	i1l3053
 11287  0D62  2D66               	
 11288                           i1l500:	
 11289  0D63                     	line	956
 11290                           	
 11291                           i1l3051:	
 11292  0D63                     ;main.c: 956: flagErrroDeAmplitude = 0;
 11293                           	clrf	(_flagErrroDeAmplitude)^080h
 11294  0D63  01E2               	goto	i1l3053
 11295  0D64  2D66               	line	957
 11296                           	
 11297                           i1l501:	
 11298  0D65                     	goto	i1l3053
 11299  0D65  2D66               	line	958
 11300                           	
 11301                           i1l499:	
 11302  0D66                     	line	960
 11303                           	
 11304                           i1l3053:	
 11305  0D66                     ;main.c: 957: }
 11306                           ;main.c: 958: }
 11307                           ;main.c: 960: if(tensaoDeSaida == 20){
 11308                           		movlw	20
 11309  0D66  3014               	xorwf	((_tensaoDeSaida)^080h),w
 11310  0D67  0663               	btfss	status,2
 11311  0D68  1D03               	goto	u254_21
 11312  0D69  2D6B               	goto	u254_20
 11313  0D6A  2D6C               u254_21:
 11314  0D6B                     	goto	i1l3061
 11315  0D6B  2D7C               u254_20:
 11316  0D6C                     	line	961
 11317                           	
 11318                           i1l3055:	
 11319  0D6C                     ;main.c: 961: if(amplitude < 350){
 11320                           	movlw	01h
 11321  0D6C  3001               	subwf	(trataEntradaPulsada@amplitude+1),w
 11322  0D6D  0277               	movlw	05Eh
 11323  0D6E  305E               	skipnz
 11324  0D6F  1903               	subwf	(trataEntradaPulsada@amplitude),w
 11325  0D70  0276               	skipnc
 11326  0D71  1803               	goto	u255_21
 11327  0D72  2D74               	goto	u255_20
 11328  0D73  2D75               u255_21:
 11329  0D74                     	goto	i1l3059
 11330  0D74  2D78               u255_20:
 11331  0D75                     	line	962
 11332                           	
 11333                           i1l3057:	
 11334  0D75                     ;main.c: 962: flagErrroDeAmplitude = 1;
 11335                           	clrf	(_flagErrroDeAmplitude)^080h
 11336  0D75  01E2               	incf	(_flagErrroDeAmplitude)^080h,f
 11337  0D76  0AE2               	line	963
 11338                           ;main.c: 963: }else{
 11339                           	goto	i1l3061
 11340  0D77  2D7C               	
 11341                           i1l503:	
 11342  0D78                     	line	964
 11343                           	
 11344                           i1l3059:	
 11345  0D78                     ;main.c: 964: flagErrroDeAmplitude = 0;
 11346                           	clrf	(_flagErrroDeAmplitude)^080h
 11347  0D78  01E2               	goto	i1l3061
 11348  0D79  2D7C               	line	965
 11349                           	
 11350                           i1l504:	
 11351  0D7A                     	goto	i1l3061
 11352  0D7A  2D7C               	line	966
 11353                           	
 11354                           i1l502:	
 11355  0D7B                     	goto	i1l3061
 11356  0D7B  2D7C               	line	968
 11357                           	
 11358                           i1l495:	
 11359  0D7C                     	line	970
 11360                           	
 11361                           i1l3061:	
 11362  0D7C                     ;main.c: 965: }
 11363                           ;main.c: 966: }
 11364                           ;main.c: 968: }
 11365                           ;main.c: 970: if(estadoDoSinal == 0){
 11366                           	movf	((_estadoDoSinal)^080h),w
 11367  0D7C  085F               	btfss	status,2
 11368  0D7D  1D03               	goto	u256_21
 11369  0D7E  2D80               	goto	u256_20
 11370  0D7F  2D81               u256_21:
 11371  0D80                     	goto	i1l507
 11372  0D80  2D8E               u256_20:
 11373  0D81                     	line	971
 11374                           	
 11375                           i1l3063:	
 11376  0D81                     ;main.c: 971: if(tempoDeReacaoDoSensor > 600){
 11377                           	movlw	02h
 11378  0D81  3002               	subwf	(_tempoDeReacaoDoSensor+1),w
 11379  0D82  0271               	movlw	059h
 11380  0D83  3059               	skipnz
 11381  0D84  1903               	subwf	(_tempoDeReacaoDoSensor),w
 11382  0D85  0270               	skipc
 11383  0D86  1C03               	goto	u257_21
 11384  0D87  2D89               	goto	u257_20
 11385  0D88  2D8A               u257_21:
 11386  0D89                     	goto	i1l507
 11387  0D89  2D8E               u257_20:
 11388  0D8A                     	line	972
 11389                           	
 11390                           i1l3065:	
 11391  0D8A                     ;main.c: 972: flagTempoDeReacaoDoSensor = 1;
 11392                           	clrf	(_flagTempoDeReacaoDoSensor)
 11393  0D8A  01F4               	incf	(_flagTempoDeReacaoDoSensor),f
 11394  0D8B  0AF4               	goto	i1l507
 11395  0D8C  2D8E               	line	973
 11396                           	
 11397                           i1l506:	
 11398  0D8D                     	goto	i1l507
 11399  0D8D  2D8E               	line	974
 11400                           	
 11401                           i1l505:	
 11402  0D8E                     	line	975
 11403                           	
 11404                           i1l507:	
 11405  0D8E                     	return
 11406  0D8E  0008               	opt stack 0
 11407                           GLOBAL	__end_of_trataEntradaPulsada
 11408                           	__end_of_trataEntradaPulsada:
 11409  0D8F                     	signat	_trataEntradaPulsada,89
 11410                           	global	_operacoesEmTick
 11411                           
 11412 ;; *************** function _operacoesEmTick *****************
 11413 ;; Defined at:
 11414 ;;		line 980 in file "src/main.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;		None
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;		None
 11419 ;; Return value:  Size  Location     Type
 11420 ;;                  1    wreg      void 
 11421 ;; Registers used:
 11422 ;;		wreg, status,2, status,0, btemp+1
 11423 ;; Tracked objects:
 11424 ;;		On entry : 0/0
 11425 ;;		On exit  : 0/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11428 ;;      Params:         0       0       0       0       0
 11429 ;;      Locals:         0       0       0       0       0
 11430 ;;      Temps:          0       0       0       0       0
 11431 ;;      Totals:         0       0       0       0       0
 11432 ;;Total ram usage:        0 bytes
 11433 ;; Hardware stack levels used:    1
 11434 ;; This function calls:
 11435 ;;		Nothing
 11436 ;; This function is called by:
 11437 ;;		_trataInterrupcao
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           psect	text53,local,class=CODE,delta=2,merge=1,group=0
 11441                           	line	980
 11442                           global __ptext53
 11443                           __ptext53:	;psect for function _operacoesEmTick
 11444  0B91                     psect	text53
 11445                           	file	"src/main.c"
 11446                           	line	980
 11447                           	global	__size_of_operacoesEmTick
 11448                           	__size_of_operacoesEmTick	equ	__end_of_operacoesEmTick-_operacoesEmTick
 11449  003D                     	
 11450                           _operacoesEmTick:	
 11451  0B91                     ;incstack = 0
 11452                           	opt	stack 1
 11453                           ; Regs used in _operacoesEmTick: [wreg+status,2+status,0+btemp+1]
 11454                           	line	985
 11455                           	
 11456                           i1l3021:	
 11457  0B91                     ;main.c: 981: static int contadorDe100ms = 0;
 11458                           ;main.c: 982: static int contadorDe1s = 0;
 11459                           ;main.c: 985: contadorDe100ms = contadorDe100ms + 1;
 11460                           	bsf	status, 5	;RP0=1, select bank1
 11461  0B91  1683               	bcf	status, 6	;RP1=0, select bank1
 11462  0B92  1303               	movf	(operacoesEmTick@contadorDe100ms)^080h,w
 11463  0B93  0856               	addlw	low(01h)
 11464  0B94  3E01               	movwf	(operacoesEmTick@contadorDe100ms)^080h
 11465  0B95  00D6               	movf	(operacoesEmTick@contadorDe100ms+1)^080h,w
 11466  0B96  0857               	skipnc
 11467  0B97  1803               	addlw	1
 11468  0B98  3E01               	addlw	high(01h)
 11469  0B99  3E00               	movwf	1+(operacoesEmTick@contadorDe100ms)^080h
 11470  0B9A  00D7               	line	986
 11471                           	
 11472                           i1l3023:	
 11473  0B9B                     ;main.c: 986: if(contadorDe100ms > 40){
 11474                           	movf	(operacoesEmTick@contadorDe100ms+1)^080h,w
 11475  0B9B  0857               	xorlw	80h
 11476  0B9C  3A80               	movwf	btemp+1
 11477  0B9D  00FF               	movlw	(0)^80h
 11478  0B9E  3080               	subwf	btemp+1,w
 11479  0B9F  027F               	skipz
 11480  0BA0  1D03               	goto	u247_25
 11481  0BA1  2BA4               	movlw	029h
 11482  0BA2  3029               	subwf	(operacoesEmTick@contadorDe100ms)^080h,w
 11483  0BA3  0256               u247_25:
 11484  0BA4                     
 11485                           	skipc
 11486  0BA4  1C03               	goto	u247_21
 11487  0BA5  2BA7               	goto	u247_20
 11488  0BA6  2BA8               u247_21:
 11489  0BA7                     	goto	i1l3029
 11490  0BA7  2BB1               u247_20:
 11491  0BA8                     	line	987
 11492                           	
 11493                           i1l3025:	
 11494  0BA8                     ;main.c: 987: contadorDe100ms = 0;
 11495                           	bsf	status, 5	;RP0=1, select bank1
 11496  0BA8  1683               	bcf	status, 6	;RP1=0, select bank1
 11497  0BA9  1303               	clrf	(operacoesEmTick@contadorDe100ms)^080h
 11498  0BAA  01D6               	clrf	(operacoesEmTick@contadorDe100ms+1)^080h
 11499  0BAB  01D7               	line	988
 11500                           	
 11501                           i1l3027:	
 11502  0BAC                     ;main.c: 988: RC2 = !RC2;
 11503                           	movlw	1<<((58)&7)
 11504  0BAC  3004               	bcf	status, 5	;RP0=0, select bank0
 11505  0BAD  1283               	bcf	status, 6	;RP1=0, select bank0
 11506  0BAE  1303               	xorwf	((58)/8),f
 11507  0BAF  0687               	goto	i1l3029
 11508  0BB0  2BB1               	line	989
 11509                           	
 11510                           i1l514:	
 11511  0BB1                     	line	992
 11512                           	
 11513                           i1l3029:	
 11514  0BB1                     ;main.c: 989: }
 11515                           ;main.c: 992: contadorDe1s = contadorDe1s + 1;
 11516                           	bsf	status, 5	;RP0=1, select bank1
 11517  0BB1  1683               	bcf	status, 6	;RP1=0, select bank1
 11518  0BB2  1303               	movf	(operacoesEmTick@contadorDe1s)^080h,w
 11519  0BB3  0854               	addlw	low(01h)
 11520  0BB4  3E01               	movwf	(operacoesEmTick@contadorDe1s)^080h
 11521  0BB5  00D4               	movf	(operacoesEmTick@contadorDe1s+1)^080h,w
 11522  0BB6  0855               	skipnc
 11523  0BB7  1803               	addlw	1
 11524  0BB8  3E01               	addlw	high(01h)
 11525  0BB9  3E00               	movwf	1+(operacoesEmTick@contadorDe1s)^080h
 11526  0BBA  00D5               	line	993
 11527                           	
 11528                           i1l3031:	
 11529  0BBB                     ;main.c: 993: if(contadorDe1s > 500){
 11530                           	movf	(operacoesEmTick@contadorDe1s+1)^080h,w
 11531  0BBB  0855               	xorlw	80h
 11532  0BBC  3A80               	movwf	btemp+1
 11533  0BBD  00FF               	movlw	(01h)^80h
 11534  0BBE  3081               	subwf	btemp+1,w
 11535  0BBF  027F               	skipz
 11536  0BC0  1D03               	goto	u248_25
 11537  0BC1  2BC4               	movlw	0F5h
 11538  0BC2  30F5               	subwf	(operacoesEmTick@contadorDe1s)^080h,w
 11539  0BC3  0254               u248_25:
 11540  0BC4                     
 11541                           	skipc
 11542  0BC4  1C03               	goto	u248_21
 11543  0BC5  2BC7               	goto	u248_20
 11544  0BC6  2BC8               u248_21:
 11545  0BC7                     	goto	i1l516
 11546  0BC7  2BCD               u248_20:
 11547  0BC8                     	line	994
 11548                           	
 11549                           i1l3033:	
 11550  0BC8                     ;main.c: 994: contadorDe1s = 0;
 11551                           	bsf	status, 5	;RP0=1, select bank1
 11552  0BC8  1683               	bcf	status, 6	;RP1=0, select bank1
 11553  0BC9  1303               	clrf	(operacoesEmTick@contadorDe1s)^080h
 11554  0BCA  01D4               	clrf	(operacoesEmTick@contadorDe1s+1)^080h
 11555  0BCB  01D5               	goto	i1l516
 11556  0BCC  2BCD               	line	995
 11557                           	
 11558                           i1l515:	
 11559  0BCD                     	line	996
 11560                           	
 11561                           i1l516:	
 11562  0BCD                     	return
 11563  0BCD  0008               	opt stack 0
 11564                           GLOBAL	__end_of_operacoesEmTick
 11565                           	__end_of_operacoesEmTick:
 11566  0BCE                     	signat	_operacoesEmTick,89
 11567                           global	___latbits
 11568                           ___latbits	equ	2
 11569  0002                     	global	btemp
 11570                           	btemp set 07Eh
 11571  007E                     
 11572                           	DABS	1,126,2	;btemp
 11573                           	global	wtemp0
 11574                           	wtemp0 set btemp+0
 11575  007E                     	end


Data Sizes:
    Strings     124
    Constant    10
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     32      32
    BANK1            80     52      73
    BANK3            96     50      50
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> ObtemAmplitureDoSinal@mensagem(BANK0[50]), obtemTesteDoGoundBolt@mensagem(BANK1[50]), obtemNivelDeBateria@mensagem(BANK1[50]), obtemQuantidadeDeSensores@mensagem(BANK1[50]), 
		 -> main@mensagem(BANK3[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> ObtemAmplitureDoSinal@mensagem(BANK0[50]), obtemTesteDoGoundBolt@mensagem(BANK1[50]), obtemNivelDeBateria@mensagem(BANK1[50]), obtemQuantidadeDeSensores@mensagem(BANK1[50]), 
		 -> main@mensagem(BANK3[50]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_5(CODE[32]), STR_4(CODE[30]), STR_3(CODE[30]), STR_2(CODE[32]), 
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> ObtemAmplitureDoSinal@mensagem(BANK0[50]), obtemTesteDoGoundBolt@mensagem(BANK1[50]), obtemNivelDeBateria@mensagem(BANK1[50]), obtemQuantidadeDeSensores@mensagem(BANK1[50]), 
		 -> main@mensagem(BANK3[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    enviaStringPelaUart@str	PTR unsigned char  size(2) Largest target is 50
		 -> ObtemAmplitureDoSinal@mensagem(BANK0[50]), obtemTesteDoGoundBolt@mensagem(BANK1[50]), obtemNivelDeBateria@mensagem(BANK1[50]), obtemQuantidadeDeSensores@mensagem(BANK1[50]), 
		 -> main@mensagem(BANK3[50]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _trataInterrupcao in COMMON

    _trataInterrupcao->_trataEntradaPulsada

Critical Paths under _main in BANK0

    _main->_obtemNivelDeBateria
    _main->_obtemTesteDoGoundBolt
    _obtemTesteDoGoundBolt->_sprintf
    _obtemNivelDeBateria->_sprintf
    _inicializaDisplay->_delay_ms
    _giraDisplay->_delay_ms
    _executaTesteDosSensores->_obtemQuantidadeDeSensores
    _testaSaidaPulsadaEm9Volts->_delay_ms
    _testaSaidaPulsadaEm20Volts->_delay_ms
    _modoTeste9->_obtemQuantidadeDeSensores
    _modoTeste20->_obtemQuantidadeDeSensores
    _obtemQuantidadeDeSensores->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _obtemConvercaoAD->_delay_us
    _enviaStringPelaUart->_strlen

Critical Paths under _trataInterrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_obtemNivelDeBateria
    _main->_obtemTesteDoGoundBolt
    _executaTesteDosSensores->_obtemQuantidadeDeSensores
    _modoTeste9->_obtemQuantidadeDeSensores
    _modoTeste20->_obtemQuantidadeDeSensores

Critical Paths under _trataInterrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _trataInterrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _trataInterrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   48664
                                             31 BANK0      1     1      0
                                              0 BANK3     50    50      0
                          _INT0_init
                  _checaBotaoAjustes
                           _delay_ms
                  _entraEmModoAjuste
                _enviaStringPelaUart
            _executaTesteDosSensores
                  _exibeNumeroNenhum
                       _exibeNumeroP
                        _giraDisplay
                        _iniHardware
                          _iniTimer1
                            _iniUart
                  _inicializaDisplay
                _ligaLEDVerdeBateria
             _ligaLEDVermelhoBateria
                    _ligaModuloBoost
                          _liga_PWM2
                _obtemNivelDeBateria
              _obtemTesteDoGoundBolt
                  _setaSaidaEm9Volts
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _obtemTesteDoGoundBolt                               53    53      0    5041
                                             30 BANK0      1     1      0
                                              0 BANK1     52    52      0
                _enviaStringPelaUart
                   _obtemConvercaoAD
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _obtemNivelDeBateria                                 53    53      0    4917
                                             30 BANK0      1     1      0
                                              0 BANK1     52    52      0
                _enviaStringPelaUart
                _ligaLEDVerdeBateria
             _ligaLEDVermelhoBateria
                   _obtemConvercaoAD
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ligaLEDVermelhoBateria                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ligaLEDVerdeBateria                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _liga_PWM2                                            4     4      0      68
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _inicializaDisplay                                    0     0      0    2169
                           _delay_ms
                   _desligaPainelLed
                       _exibeNumero8
                  _exibeNumeroNenhum
                      _ligaPainelLed
 ---------------------------------------------------------------------------------
 (2) _ligaPainelLed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _exibeNumeroNenhum                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _desligaPainelLed                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _iniUart                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _iniTimer1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _iniHardware                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _giraDisplay                                          0     0      0    2169
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _exibeNumeroP                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _executaTesteDosSensores                              0     0      0    9878
                _atualizaPainelDeLed
          _exibeQuantidadeDeSensores
          _obtemQuantidadeDeSensores
         _testaSaidaPulsadaEm20Volts
          _testaSaidaPulsadaEm9Volts
 ---------------------------------------------------------------------------------
 (2) _testaSaidaPulsadaEm9Volts                            1     1      0    2169
                                              6 BANK0      1     1      0
                           _delay_ms
                  _setaSaidaEm9Volts
 ---------------------------------------------------------------------------------
 (2) _testaSaidaPulsadaEm20Volts                           1     1      0    2169
                                              6 BANK0      1     1      0
                           _delay_ms
                 _setaSaidaEm20Volts
 ---------------------------------------------------------------------------------
 (2) _atualizaPainelDeLed                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _entraEmModoAjuste                                    0     0      0   17655
                  _checaBotaoAjustes
                           _delay_ms
                 _desligaModuloBoost
                    _ligaModuloBoost
                        _modoTeste20
                         _modoTeste9
                 _setaSaidaEm20Volts
                  _setaSaidaEm9Volts
 ---------------------------------------------------------------------------------
 (2) _modoTeste9                                           0     0      0    7709
                           _delay_ms
          _exibeQuantidadeDeSensores
          _obtemQuantidadeDeSensores
                  _setaSaidaEm9Volts
 ---------------------------------------------------------------------------------
 (1) _setaSaidaEm9Volts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _modoTeste20                                          0     0      0    7709
                           _delay_ms
          _exibeQuantidadeDeSensores
          _obtemQuantidadeDeSensores
                 _setaSaidaEm20Volts
 ---------------------------------------------------------------------------------
 (3) _setaSaidaEm20Volts                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _obtemQuantidadeDeSensores                           55    55      0    5509
                                             30 BANK0      1     1      0
                                              0 BANK1     52    52      0
                _enviaStringPelaUart
                   _obtemConvercaoAD
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     315
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    19      5    3278
                                             14 BANK0     16    11      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _obtemConvercaoAD                                    11     9      2     291
                                              4 BANK0     11     9      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_us                                             4     2      2     189
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _enviaStringPelaUart                                  9     5      4     796
                                              6 BANK0      9     5      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _exibeQuantidadeDeSensores                           51    51      0      31
                                              0 BANK0      1     1      0
                       _exibeNumero0
                       _exibeNumero1
                       _exibeNumero2
                       _exibeNumero3
                       _exibeNumero4
                       _exibeNumero5
                       _exibeNumero6
                       _exibeNumero7
                       _exibeNumero8
                       _exibeNumero9
                       _exibeNumeroA
 ---------------------------------------------------------------------------------
 (3) _exibeNumeroA                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _exibeNumero9                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _exibeNumero8                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _exibeNumero7                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _exibeNumero6                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _exibeNumero5                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _exibeNumero4                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _exibeNumero3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _exibeNumero2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _exibeNumero1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _exibeNumero0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             6     4      2    2169
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ligaModuloBoost                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _desligaModuloBoost                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _checaBotaoAjustes                                    2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _INT0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _trataInterrupcao                                     4     4      0      45
                                              2 COMMON     4     4      0
                    _operacoesEmTick
                _trataEntradaPulsada
 ---------------------------------------------------------------------------------
 (7) _trataEntradaPulsada                                 52    52      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _operacoesEmTick                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT0_init
   _checaBotaoAjustes
   _delay_ms
   _entraEmModoAjuste
     _checaBotaoAjustes
     _delay_ms
     _desligaModuloBoost
     _ligaModuloBoost
     _modoTeste20
       _delay_ms
       _exibeQuantidadeDeSensores
         _exibeNumero0
         _exibeNumero1
         _exibeNumero2
         _exibeNumero3
         _exibeNumero4
         _exibeNumero5
         _exibeNumero6
         _exibeNumero7
         _exibeNumero8
         _exibeNumero9
         _exibeNumeroA
       _obtemQuantidadeDeSensores
         _enviaStringPelaUart
           _strlen (ARG)
         _obtemConvercaoAD
           _delay_us
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
         _strlen
       _setaSaidaEm20Volts
     _modoTeste9
       _delay_ms
       _exibeQuantidadeDeSensores
         _exibeNumero0
         _exibeNumero1
         _exibeNumero2
         _exibeNumero3
         _exibeNumero4
         _exibeNumero5
         _exibeNumero6
         _exibeNumero7
         _exibeNumero8
         _exibeNumero9
         _exibeNumeroA
       _obtemQuantidadeDeSensores
         _enviaStringPelaUart
           _strlen (ARG)
         _obtemConvercaoAD
           _delay_us
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
         _strlen
       _setaSaidaEm9Volts
     _setaSaidaEm20Volts
     _setaSaidaEm9Volts
   _enviaStringPelaUart
     _strlen (ARG)
   _executaTesteDosSensores
     _atualizaPainelDeLed
     _exibeQuantidadeDeSensores
       _exibeNumero0
       _exibeNumero1
       _exibeNumero2
       _exibeNumero3
       _exibeNumero4
       _exibeNumero5
       _exibeNumero6
       _exibeNumero7
       _exibeNumero8
       _exibeNumero9
       _exibeNumeroA
     _obtemQuantidadeDeSensores
       _enviaStringPelaUart
         _strlen (ARG)
       _obtemConvercaoAD
         _delay_us
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strlen
     _testaSaidaPulsadaEm20Volts
       _delay_ms
       _setaSaidaEm20Volts
     _testaSaidaPulsadaEm9Volts
       _delay_ms
       _setaSaidaEm9Volts
   _exibeNumeroNenhum
   _exibeNumeroP
   _giraDisplay
     _delay_ms
   _iniHardware
   _iniTimer1
   _iniUart
   _inicializaDisplay
     _delay_ms
     _desligaPainelLed
     _exibeNumero8
     _exibeNumeroNenhum
     _ligaPainelLed
   _ligaLEDVerdeBateria
   _ligaLEDVermelhoBateria
   _ligaModuloBoost
   _liga_PWM2
   _obtemNivelDeBateria
     _enviaStringPelaUart
       _strlen (ARG)
     _ligaLEDVerdeBateria
     _ligaLEDVermelhoBateria
     _obtemConvercaoAD
       _delay_us
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _strlen
   _obtemTesteDoGoundBolt
     _enviaStringPelaUart
       _strlen (ARG)
     _obtemConvercaoAD
       _delay_us
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _strlen
   _setaSaidaEm9Volts
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _strlen

 _trataInterrupcao (ROOT)
   _operacoesEmTick
   _trataEntradaPulsada

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     34      49       7       91.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60     32      32       9       52.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A7      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Sep 19 19:08:58 2021

                                liga_PWM2@dutyCycle 0023                                        ?_iniHardware 0076  
                                                 pc 0002                                         __CFG_CP$OFF 0000  
                                                l51 0B19                                                  l60 0A5C  
                                                l63 0971                                                  l80 07FF  
                                                l72 0C71                                                  l81 07FF  
                                                l73 0C71                                                  l57 0A1D  
                                                l74 0C76                                                  l66 0A77  
                                                l75 0C98                                                  l84 0A8B  
                                                l85 0A7D                                                  l78 07F4  
                                                l86 0A96                                                  l79 07DE  
                                                l87 0A96                                                  _RD 0C60  
                                                _WR 0C61                               _obtemTesteDoGoundBolt 0DFD  
                                                fsr 0004                                 ___wmul@multiplicand 0022  
                         __size_of_desligaPainelLed 000A                                    ?_operacoesEmTick 0076  
                               ??_entraEmModoAjuste 003F                                    _trataInterrupcao 0B1A  
                                               l300 047F                                                 l301 0480  
                                               l310 0A2A                                                 l302 04B9  
                                               l311 0A2F                                                 l303 04BA  
                                               l312 0A2F                                                 l400 095C  
                                               l304 04BA                                                 l321 096A  
                                               l410 0D93                                                 l315 0003  
                                               l411 0DFC                                                 l307 0AB5  
                                               l403 0E5E                                                 l420 0DC9  
                                               l412 0D99                                                 l324 0965  
                                               l340 0654                                                 l404 0E97  
                                               l421 0DCF                                                 l413 0D9F  
                                               l405 0E78                                                 l318 0958  
                                               l422 0DD5                                                 l414 0DA5  
                                               l350 06B8                                                 l342 064A  
                                               l334 05CB                                                 l406 0E92  
                                               l415 0DAB                                                 l423 0DFC  
                                               l351 06D0                                                 l343 0658  
                                               l335 0632                                                 l520 0ADB  
                                               l432 098D                                                 l416 0DB1  
                                               l360 02A2                                                 l352 06E3  
                                               l344 0658                                                 l336 05E4  
                                               l521 0AEF                                                 l441 09AB  
                                               l409 0DD7                                                 l417 0DB7  
                                               l361 03B6                                                 l353 0715  
                                               l337 05F7                                                 l522 0AF6  
                                               l450 09C9                                                 l418 0DBD  
                                               l370 0395                                                 l362 02B7  
                                               l530 0CCB                                                 l338 060F  
                                               l523 0AF4                                                 l435 0997  
                                               l419 0DC3                                                 l371 03B1  
                                               l363 02D1                                                 l531 0CDB  
                                               l355 070B                                                 l347 068C  
                                               l339 0622                                                 l291 03F4  
                                               l444 09B5                                                 l364 02ED  
                                               l540 079C                                                 l532 0CE4  
                                               l356 0719                                                 l348 06F3  
                                               l380 051B                                                 l292 03F5  
                                               l429 0983                                                 l453 09D3  
                                               l365 0309                                                 l541 07D2  
                                               l357 0719                                                 l349 06A5  
                                               l381 0522                                                 l293 03F5  
                                               l438 09A1                                                 l630 0C0A  
                                               l366 0325                                                 l550 0F85  
                                               l526 0CAD                                                 l390 056B  
                                               l382 0537                                                 l294 03FC  
                                               l519 0AEF                                                 l447 09BF  
                                               l367 0341                                                 l551 0F98  
                                               l543 07C8                                                 l535 0745  
                                               l527 0CA7                                                 l391 057F  
                                               l383 0549                                                 l295 0410  
                                               l456 09DD                                                 l624 0BFB  
                                               l368 035D                                                 l552 0FB0  
                                               l544 07D8                                                 l536 07BB  
                                               l528 0CB8                                                 l480 0A06  
                                               l392 0591                                                 l376 054F  
                                               l384 0549                                                 l296 0422  
                                               l625 0BD3                                                 l641 0229  
                                               l369 0379                                                 l553 0FC3  
                                               l545 07D8                                                 l537 075E  
                                               l529 0CD1                                                 l385 0597  
                                               l393 0592                                                 l377 054E  
                                               l297 0423                                                 l626 0BD4  
                                               l650 00AF                                                 l642 002F  
                                               l554 0FF9                                                 l538 0771  
                                               l386 0596                                                 l394 0597  
                                               l378 051A                                                 l298 0444  
                                               l459 09E7                                                 l627 0BD4  
                                               l651 0071                                                 l643 0043  
                                               l539 0789                                                 l483 0F40  
                                               l387 0563                                                 l379 051B  
                                               l299 044A                                                 l628 0BDA  
                                               l660 00B4                                                 l652 00AE  
                                               l644 0047                                                 l556 0FEF  
                                               l548 0F6C                                                 l492 09F1  
                                               l388 0564                                                 l629 0C0A  
                                               l661 00F2                                                 l653 00B7  
                                               l645 004F                                                 l557 0FFF  
                                               l549 0FE2                                                 l477 0A11  
                                               l397 0960                                                 l389 0564  
                                               l670 01A4                                                 l662 00F1  
                                               l654 00B0                                                 l646 0048  
                                               l558 0FFF                                                 l486 0AD5  
                                               l655 023F                                                 l671 0181  
                                               l663 00FF                                                 l647 005B  
                                               l680 021E                                                 l672 01A3  
                                               l664 0109                                                 l656 00B1  
                                               l648 005A                                                 l921 0A43  
                                               l681 01E0                                                 l673 0188  
                                               l665 0131                                                 l657 00B2  
                                               l649 005C                                                 l489 09FB  
                                               l770 0B90                                                 l922 0A45  
                                               l682 0228                                                 l674 01A2  
                                               l666 0126                                                 l658 00D1  
                                               l683 023E                                                 l675 01DB  
                                               l667 0143                                                 l659 00B3  
                                               l684 0248                                                 l676 01C6  
                                               l668 0164                                                 l677 01AB  
                                               l669 0169                                                 l678 01C5  
                                               l767 0B6C                                                 l679 01DA  
                                               l768 0B76                                                 l769 0B8B  
                                               l981 0D2C                                                 l982 0CFE  
                                               l983 0CF2                                                 l991 0C48  
                                               l984 0D03                                                 l992 0C22  
                                               l985 0D04                                                 l993 0C16  
                                               l986 0D1D                                                 l994 0C27  
                                               l987 0D2B                                                 l995 0C28  
                                               _GIE 005F                                                 l988 0D31  
                                               l996 0C39                                                 l997 0C47  
                                               l998 0C4D                                                 _RB1 0031  
                                               _RB2 0032                                                 _RB3 0033  
                                               _RD0 0040                                                 _RB4 0034  
                                               _RC2 003A                                                 _RD1 0041  
                                               _RC3 003B                                                 _RB5 0035  
                                               _RD2 0042                                                 _RC4 003C  
                                               _RB6 0036                                                 _RD3 0043  
                                               _RC5 003D                                                 _RB7 0037  
                                               _RD4 0044                                                 _RD5 0045  
                                               _RD6 0046                                                 _RD7 0047  
                                               _PR2 0092                                        __CFG_CPD$OFF 0000  
                                               fsr0 0004                                                 indf 0000  
                         __end_of_setaSaidaEm9Volts 096B                                        __CFG_FOSC$HS 0000  
                             ??_ligaLEDVerdeBateria 0020                                        __CFG_LVP$OFF 0000  
                                 _inicializaDisplay 0AB6                                                l1123 0B4B  
                                              l1124 0B46                                                l1125 0B56  
                                              l1126 0B66                                                l4001 0FCE  
                                              l4003 0FD2                                                l4011 0AF7  
                                              l4005 0FD8                                                l4101 0EE0  
                                              l4021 0A1B                                                l4013 0A12  
                                              l4007 0FE2                                                l4111 0F1C  
                                              l4103 0EEC                                                l4023 0A1C  
                                              l4015 0A15                                                l4031 0A4F  
                                              l3401 0C40                                                l4009 0FEA  
                                              l4121 0AA0                                                l4113 0F28  
                                              l4105 0EF8                                                l4017 0A17  
                                              l4041 0A5A                                                l4033 0A52  
                                              l4025 0A46                                                l4201 057E  
                                              l3331 0A8B                                                l3411 0C54  
                                              l3403 0C48                                                l4123 0AA5  
                                              l4115 0F34                                                l4107 0F04  
                                              l4019 0A18                                                l4043 0A5B  
                                              l4035 0A53                                                l4027 0A4A  
                                              l4051 0A74                                                l4211 058F  
                                              l4203 0583                                                l4131 0E0F  
                                              l4045 096B                                                l3421 0C76  
                                              l3413 0C57                                                l3405 0C4D  
                                              l3341 0A43                                                l3333 0A33  
                                              l3501 0173                                                l4125 0AAA  
                                              l4117 0A97                                                l4109 0F10  
                                              l4037 0A56                                                l4029 0A4C  
                                              l4061 0AD0                                                l4053 0A76  
                                              l4213 0592                                                l4205 0587  
                                              l4141 0E5E                                                l4133 0E2A  
                                              l4221 03C6                                                l3327 0A78  
                                              l3423 0C91                                                l3415 0C63  
                                              l3407 0C51                                                l3351 0B7D  
                                              l3343 0A45                                                l3335 0A34  
                                              l3511 0195                                                l3503 017C  
                                              l3431 002F                                                l4071 0CAD  
                                              l4127 0AB0                                                l4119 0A9B  
                                              l4063 09FC                                                l4039 0A57  
                                              l4055 0AB6                                                l4047 0A60  
                                              l4207 0588                                                l4151 0E8C  
                                              l4143 0E69                                                l4135 0E44  
                                              l4231 03EE                                                l4223 03CC  
                                              l4215 03B7                                                l3329 0A80  
                                              l3425 0C92                                                l3417 0C64  
                                              l3409 0C52                                                l3361 0CE9  
                                              l3353 0B84                                                l3345 0B67  
                                              l3337 0A3A                                                l3521 01C6  
                                              l3505 0181                                                l3513 01A4  
                                              l3441 004E                                                l3433 0035  
                                              l3601 029F                                                l4081 0CCB  
                                              l4073 0CB8                                                l4065 0C99  
                                              l4057 0AC0                                                l4049 0A72  
                                              l4209 0589                                                l4161 050B  
                                              l4153 04BD                                                l4145 0E72  
                                              l4137 0E4F                                                l4129 0DFD  
                                              l4241 040F                                                l4233 03FC  
                                              l4225 03D1                                                l4217 03BC  
                                              l3427 0C98                                                l3419 0C6D  
                                              l3371 0D04                                                l3363 0CEF  
                                              l3355 0B8B                                                l3347 0B6C  
                                              l3339 0A40                                                l3531 0210  
                                              l3523 01CC                                                l3515 01AB  
                                              l3507 0188                                                l3451 0086  
                                              l3443 004F                                                l3435 003E  
                                              l3611 02B7                                                l3603 02A1  
                                              l4083 0CD1                                                l4075 0CBD  
                                              l4067 0CA3                                                l4091 0EA4  
                                              l4059 0ACB                                                l4171 052F  
                                              l4163 0514                                                l4155 04CF  
                                              l4147 0E78                                                l4139 0E58  
                                              l4251 0420                                                l4243 0414  
                                              l4235 0400                                                l4227 03D9  
                                              l4219 03C1                                                l3701 0DBD  
                                              l3373 0D15                                                l3365 0CF2  
                                              l3381 0D2C                                                l3357 0B90  
                                              l3349 0B70                                                l3541 0248  
                                              l3533 0219                                                l3525 01D5  
                                              l3517 01B4                                                l3509 0191  
                                              l3461 00D7                                                l3453 0099  
                                              l3445 005C                                                l3437 0043  
                                              l3429 0028                                                l3621 02DC  
                                              l3613 02C0                                                l3605 02A2  
                                              l4085 0CDF                                                l4077 0CC0  
                                              l4069 0CA7                                                l4093 0EB0  
                                              l4181 0540                                                l4173 0532  
                                              l4165 0522                                                l4157 04EA  
                                              l4149 0E83                                                l4261 0439  
                                              l4253 0423                                                l4245 0418  
                                              l4237 0408                                                l4229 03DE  
                                              l3703 0DC3                                                l3711 0DD7  
                                              l3551 0BCE                                                l3383 0D31  
                                              l3375 0D1B                                                l3367 0CF9  
                                              l3359 0CE5                                                l3391 0C1D  
                                              l3535 021E                                                l3519 01B8  
                                              l3527 01DB                                                l3463 00DF  
                                              l3471 00F2                                                l3455 009D  
                                              l3447 006C                                                l3439 0049  
                                              l3543 0B3F                                                l3631 0301  
                                              l3623 02E5                                                l3615 02C9  
                                              l3607 02AB                                                l4079 0CC1  
                                              l4095 0EBC                                                l4087 0E98  
                                              l4191 055D                                                l4183 0541  
                                              l4175 0536                                                l4167 0525  
                                              l4159 0504                                                l4271 0459  
                                              l4263 043E                                                l4255 0426  
                                              l4247 0419                                                l4239 040B  
                                              l3721 0AD6                                                l3561 0984  
                                              l3705 0DC9                                                l3553 0BDB  
                                              l3377 0D1D                                                l3369 0CFE  
                                              l3393 0C22                                                l3385 0C0B  
                                              l3529 01E0                                                l3481 0109  
                                              l3473 00FA                                                l3465 00E3  
                                              l3457 00B6                                                l3449 0071  
                                              l3537 0229                                                l3545 0B4B  
                                              l3641 0324                                                l3633 0308  
                                              l3625 02EC                                                l3617 02D0  
                                              l3609 02B4                                                l3713 0961  
                                              l3801 0659                                                l4097 0EC8  
                                              l4089 0E9B                                                l4193 056B  
                                              l4185 0547                                                l4177 053B  
                                              l4169 0527                                                l4273 0464  
                                              l4281 0480                                                l4265 0444  
                                              l4257 042E                                                l4249 041A  
                                              l3731 0AF4                                                l3723 0ADB  
                                              l3563 098E                                                l3571 09B6  
                                              l3707 0DCF                                                l3555 0BF2  
                                              l3379 0D24                                                l3395 0C28  
                                              l3387 0C13                                                l3491 013D  
                                              l3483 0125                                                l3467 00E7  
                                              l3475 00FF                                                l3539 023F  
                                              l3459 00B7                                                l3547 0B56  
                                              l3651 0341                                                l3643 0325  
                                              l3635 0309                                                l3627 02ED  
                                              l3619 02D1                                                l3811 0679  
                                              l3803 065C                                                l4099 0ED4  
                                              l3715 0A07                                                l4195 056F  
                                              l4179 053F                                                l4187 054F  
                                              l4283 0485                                                l4275 0469  
                                              l4267 044A                                                l4259 042F  
                                              l3733 0AF6                                                l3725 0AE3  
                                              l3581 07D9                                                l3565 0998  
                                              l3573 09C0                                                l3709 0DD6  
                                              l3557 0BFB                                                l3397 0C32  
                                              l3389 0C16                                                l3493 0156  
                                              l3485 0126                                                l3477 0101  
                                              l3469 00EB                                                l3549 0B66  
                                              l3661 0368                                                l3653 034C  
                                              l3645 0330                                                l3637 0314  
                                              l3629 02F8                                                l3901 074B  
                                              l3821 0681                                                l3813 067A  
                                              l3805 0661                                                l3741 05B3  
                                              l3717 0959                                                l4197 0577  
                                              l4189 0554                                                l4285 048A  
                                              l4277 046E                                                l4269 0454  
                                              l3727 0AEC                                                l3583 07DE  
                                              l3559 097A                                                l3567 09A2  
                                              l3575 09CA                                                l3399 0C39  
                                              l3495 0164                                                l3479 0108  
                                              l3487 0131                                                l3671 038D  
                                              l3663 0371                                                l3655 0355  
                                              l3647 0339                                                l3639 031D  
                                              l3591 0249                                                l3911 075D  
                                              l3903 074C                                                l3831 0695  
                                              l3823 068B                                                l3815 067C  
                                              l3807 0674                                                l3751 05BC  
                                              l3743 05B7                                                l3735 0598  
                                              l3719 095D                                                l4199 057A  
                                              l4287 048F                                                l4279 0473  
                                              l3729 0AEE                                                l3585 07E9  
                                              l3569 09AC                                                l3577 09D4  
                                              l3497 0169                                                l3489 0137  
                                              l3681 03B0                                                l3673 0394  
                                              l3665 0378                                                l3657 035C  
                                              l3649 0340                                                l3593 024D  
                                              l3921 0779                                                l3913 0761  
                                              l3905 074E                                                l3841 06B8  
                                              l3833 0698                                                l3825 068C  
                                              l3817 067D                                                l3809 0678  
                                              l3761 05D1                                                l3753 05BE  
                                              l3745 05B8                                                l3737 059B  
                                              l4289 049E                                                l3587 07F4  
                                              l3579 09DE                                                l3691 0D9F  
                                              l3499 016D                                                l3683 03B1  
                                              l3675 0395                                                l3667 0379  
                                              l3659 035D                                                l3595 025F  
                                              l3931 07A1                                                l3923 077C  
                                              l3915 0771                                                l3907 0751  
                                              l3851 06CF                                                l3843 06BE  
                                              l3835 069A                                                l3827 0692  
                                              l3819 067F                                                l3771 05E3  
                                              l3763 05D2                                                l3755 05C0  
                                              l3747 05B9                                                l3739 05A0  
                                              l3693 0DA5                                                l3685 0D92  
                                              l3677 03A0                                                l3669 0384  
                                              l3597 027A                                                l3589 0966  
                                              l3941 07C3                                                l3933 07A7  
                                              l3925 0788                                                l3917 0777  
                                              l3909 0753                                                l3861 06F9  
                                              l3853 06D3                                                l3845 06BF  
                                              l3837 06A4                                                l3829 0693  
                                              l3781 05FF                                                l3773 05E7  
                                              l3765 05D4                                                l3757 05CA  
                                              l3749 05BB                                                l3695 0DAB  
                                              l3687 0D93                                                l3679 03A9  
                                              l3599 0294                                                l3951 0F58  
                                              l3943 0F41                                                l3935 07AB  
                                              l3927 078C                                                l3919 0778  
                                              l3863 0701                                                l3855 06E3  
                                              l3847 06C0                                                l3839 06A8  
                                              l3783 0602                                                l3775 05F7  
                                              l3767 05D7                                                l3791 0632  
                                              l3759 05CB                                                l3871 09F2  
                                              l3697 0DB1                                                l3689 0D99  
                                              l3961 0F5F                                                l3953 0F59  
                                              l3945 0F44                                                l3937 07B1  
                                              l3929 079C                                                l3881 072D  
                                              l3865 0706                                                l3849 06C3  
                                              l3857 06F3                                                l3793 0635  
                                              l3785 060E                                                l3777 05FD  
                                              l3769 05D9                                                l3873 09E8  
                                              l3699 0DB7                                                l3971 0F73  
                                              l3963 0F61                                                l3955 0F5A  
                                              l3947 0F49                                                l3939 07BB  
                                              l3891 0736                                                l3883 0731  
                                              l3875 071A                                                l3867 0A1E  
                                              l3859 06F6                                                l3795 0638  
                                              l3787 0612                                                l3779 05FE  
                                              l3981 0F88                                                l3973 0F75  
                                              l3965 0F6B                                                l3957 0F5C  
                                              l3949 0F54                                                l3893 0738  
                                              l3885 0732                                                l3877 071D  
                                              l3869 0A25                                                l3797 0640  
                                              l3789 0622                                                l3991 0FA3  
                                              l3983 0F98                                                l3975 0F78  
                                              l3967 0F6C                                                l3959 0F5D  
                                              l3895 073A                                                l3887 0733  
                                              l3879 0722                                                l3799 0645  
                                              l3993 0FAF                                                l3985 0F9E  
                                              l3977 0F7A                                                l3969 0F72  
                                              l3897 0744                                                l3889 0735  
                                              l3995 0FB3                                                l3987 0F9F  
                                              l3979 0F84                                                l3899 0745  
                                              l3997 0FC3                                                l3989 0FA0  
                                              l3999 0FC8                                                STR_1 082D  
                                              STR_2 0810                                                STR_3 0850  
                                              STR_4 086E                                                STR_5 0830  
                                              u3000 0C32                                                u3001 0C31  
                                              u3020 0C46                                                u3100 0124  
                                              u3021 0C45                                                u3005 0C2E  
                                              u3101 0123                                                u3030 0C75  
                                              u3110 0130                                                u3031 0C74  
                                              u3015 0C3A                                                u3111 012F  
                                              u3200 01C4                                                u3120 0137  
                                              u3040 0035                                                u4000 0554  
                                              u3201 01C3                                                u3121 0136  
                                              u3105 0120                                                u3041 0034  
                                              u4001 0553                                                u3210 01CC  
                                              u3130 013D                                                u3050 006C  
                                              u4010 055D                                                u3211 01CB  
                                              u3131 013C                                                u3051 006B  
                                              u4011 055C                                                u3220 0227  
                                              u3140 0156                                                u3060 00AD  
                                              u3300 02AB                                                u4020 056A  
                                              u3221 0226                                                u3141 0155  
                                              u3061 00AC                                                u3301 02AA  
                                              u4021 0569                                                u3230 023D  
                                              u3150 016D                                                u3070 00D7  
                                              u3310 02B4                                                u4030 057E  
                                              u3231 023C                                                u3151 016C  
                                              u3071 00D6                                                u3311 02B3  
                                              u4031 057D                                                u3160 0173  
                                              u3080 00E7                                                u3240 0B55  
                                              u3400 0330                                                u3320 02C0  
                                              u4040 058F                                                u3161 0172  
                                              u3145 0152                                                u3081 00E6  
                                              u3241 0B54                                                u3401 032F  
                                              u3321 02BF                                                u4041 058E  
                                              u3250 0BDA                                                u3170 0187  
                                              u3090 0107                                                u3410 0339  
                                              u3330 02C9                                                u4050 03FB  
                                              u4107 07E4                                                u3251 0BD9  
                                              u3171 0186                                                u3091 0106  
                                              u3411 0338                                                u3331 02C8  
                                              u4051 03FA                                                u3500 0AEC  
                                              u3260 0BE7                                                u3180 01A1  
                                              u3420 034C                                                u3340 02DC  
                                              u4060 040F                                                u3501 0AEB  
                                              u3181 01A0                                                u3421 034B  
                                              u3341 02DB                                                u4061 040E  
                                              u3510 0AF3                                                u3270 0C09  
                                              u3190 01AA                                                u3430 0355  
                                              u3350 02E5                                                u4070 0420  
                                              u3511 0AF2                                                u3271 0C08  
                                              u3191 01A9                                                u3431 0354  
                                              u3351 02E4                                                u4071 041F  
                                              u3280 07FE                                                u3440 0368  
                                              u3360 02F8                                                u3600 064A  
                                              u3520 05C9                                                u4080 043E  
                                              u3281 07FD                                                u3441 0367  
                                              u3361 02F7                                                u3601 0649  
                                              u3521 05C8                                                u4081 043D  
                                              u3450 0371                                                u3370 0301  
                                              u3290 029F                                                u3610 068A  
                                              u3530 05E2                                                u4090 0454  
                                              u3275 0C05                                                u3451 0370  
                                              u3371 0300                                                u3291 029E  
                                              u3611 0689                                                u3531 05E1  
                                              u4091 0453                                                u2900 0CEF  
                                              u3460 0384                                                u3380 0314  
                                              u3700 0A25                                                u3620 06A3  
                                              u3540 05F6                                                u3285 07FA  
                                              u2901 0CEE                                                u3461 0383  
                                              u3381 0313                                                u3701 0A24  
                                              u3621 06A2                                                u3541 05F5  
                                              u2830 0A95                                                u3470 038D  
                                              u3390 031D                                                u3710 0743  
                                              u3630 06B7                                                u3550 060D  
                                              u2831 0A94                                                u3471 038C  
                                              u3391 031C                                                u3711 0742  
                                              u3631 06B6                                                u3551 060C  
                                              u2920 0D02                                                u2840 0A3A  
                                              u3480 03A0                                                u3800 0F83  
                                              u3720 075C                                                u3640 06CE  
                                              u3560 0621                                                u2921 0D01  
                                              u2841 0A39                                                u3481 039F  
                                              u3801 0F82                                                u3721 075B  
                                              u3641 06CD                                                u3561 0620  
                                              u2850 0A40                                                u3490 03A9  
                                              u3810 0F97                                                u3730 0770  
                                              u3650 06E2                                                u3570 0631  
                                              u2835 0A91                                                u2915 0CF3  
                                              u2851 0A3F                                                u3491 03A8  
                                              u3811 0F96                                                u3731 076F  
                                              u3651 06E1                                                u3571 0630  
                                              u2940 0D15                                                u2860 0B70  
                                              u3820 0FAE                                                u3740 0787  
                                              u3660 06F2                                                u3580 0640  
                                              u3900 0E58                                                u2941 0D14  
                                              u2861 0B6F                                                u3821 0FAD  
                                              u3741 0786                                                u3661 06F1  
                                              u3581 063F                                                u3901 0E57  
                                              u3830 0FC2                                                u3750 079B  
                                              u3670 0701                                                u3590 0645  
                                              u3910 0E69                                                u2935 0D05  
                                              u3831 0FC1                                                u3751 079A  
                                              u3671 0700                                                u3591 0644  
                                              u3911 0E68                                                u2960 0D2A  
                                              u3840 0FE1                                                u3760 07BA  
                                              u3680 0706                                                u3920 0E72  
                                              u2961 0D29                                                u2945 0D11  
                                              u3841 0FE0                                                u3761 07B9  
                                              u3681 0705                                                u3921 0E71  
                                              u2970 0C13                                                u2890 0B8A  
                                              u3850 0FEA                                                u3770 07C3  
                                              u3690 070B                                                u3930 0E83  
                                              u2955 0D1E                                                u2971 0C12  
                                              u2891 0B89                                                u2875 0B77  
                                              u3851 0FE9                                                u3771 07C2  
                                              u3691 070A                                                u3931 0E82  
                                              _RCIE 0465                                                u3860 0FEF  
                                              u3780 07C8                                                u3940 0E8C  
                                              _RCIF 0065                                                u2885 0B7E  
                                              u3861 0FEE                                                u3781 07C7  
                                              u3941 0E8B                                                u2990 0C26  
                                              u3790 0F6A                                                u3870 0CB7  
                                              u3950 050B                                                u2991 0C25  
                                              u3791 0F69                                                u3871 0CB6  
                                              u3951 050A                                                u3880 0CDB  
                                              u3960 0514                                                u2985 0C17  
                                              u3881 0CDA                                                u3961 0513  
                                              u3970 0521                                                u3890 0E4F  
                                              u3971 0520                                                u3891 0E4E  
                                              u3980 0536                                                u3981 0535  
                                              u3990 0547                                                u3991 0546  
                                              _TRMT 04C1                                                _TXIE 0464  
                                              _WREN 0C62                                                _TXIF 0064  
                                ?_inicializaDisplay 0076                           __end_of_entraEmModoAjuste 0CE5  
                                              _main 03B7                                     _contadorDeErros 00DE  
                                              btemp 007E                                       __CFG_BOREN$ON 0000  
                          _quantidadeDeSensoresEm9V 00E1                                                start 0012  
                         _exibeQuantidadeDeSensores 0D8F                                       _ligaPainelLed 09F2  
                                __size_of_INT0_init 0007                                 ??_inicializaDisplay 0026  
                          __end_of_obtemConvercaoAD 0C99                                   ??_ligaModuloBoost 0020  
                   __size_of_ligaLEDVermelhoBateria 0004                  __end_of_testaSaidaPulsadaEm20Volts 071A  
                        _testaSaidaPulsadaEm20Volts 0659                           _obtemQuantidadeDeSensores 0249  
                                             ?_main 0076                                               _EEADR 010D  
                                     __CFG_WDTE$OFF 0000                                               _CARRY 0018  
                          ?_executaTesteDosSensores 0076                                     __end_of___lwdiv 0D32  
                                             i1l500 0D63                                               i1l501 0D65  
                                             i1l502 0D7B                                               i1l503 0D78  
                                             i1l504 0D7A                                               i1l505 0D8E  
                                   __end_of___lwmod 0C4E                                               i1l514 0BB1  
                                             i1l506 0D8D                                               i1l515 0BCD  
                                             i1l507 0D8E                                               i1l516 0BCD  
                                             i1l284 0B25                                               i1l285 0B32  
                                             i1l286 0B32                                               i1l495 0D7C  
                                             i1l496 0D4D                                               i1l498 0D4A  
                                             i1l499 0D66                                               _RCREG 001A  
                                             _SPBRG 0099                                               _TXREG 0019  
                                      main@mensagem 0190                           __end_of_inicializaDisplay 0AD6  
                                _flagNivelDeBateria 00E4                                     __end_of_iniUart 0A5D  
                                   __end_of_dpowers 0810                                     __end_of_isdigit 0A46  
                                             pclath 000A                                               status 0003  
                                             wtemp0 007E                                     __end_of_sprintf 0249  
                                      ?_modoTeste20 0076                                      ?_ligaPainelLed 0076  
                                     ?_exibeNumero0 0076                                       ?_exibeNumero1 0076  
                                     ?_exibeNumero2 0076                                       ?_exibeNumero3 0076  
                                     ?_exibeNumero4 0076                                       ?_exibeNumero5 0076  
                                     ?_exibeNumero6 0076                                       ?_exibeNumero7 0076  
                                     ?_exibeNumero8 0076                                       ?_exibeNumero9 0076  
                                     ?_exibeNumeroA 0076                                       ?_exibeNumeroP 0076  
                                   __initialization 0015                                        __end_of_main 04BD  
                            ?_obtemTesteDoGoundBolt 0076                                 _falhaPulsoDeEntrada 00E5  
                                    _periodoDoPulso 00DA                                              ??_main 003F  
                                 _flagErroDeLeitura 00E7                            enviaStringPelaUart@vetor 002D  
                        __size_of_setaSaidaEm9Volts 0005                         ??_testaSaidaPulsadaEm9Volts 0026  
                                 __end_of_INT0_init 0972                         operacoesEmTick@contadorDe1s 00D4  
                                            _ADRESH 001E                                              _ADRESL 009E  
                                            _EEDATA 010C                                              _CCPR2L 001B  
                                            _EECON1 018C                                              _EECON2 018D  
                            _ligaLEDVermelhoBateria 095D                                              i1l3021 0B91  
                                            i1l3031 0BBB                                              i1l3023 0B9B  
                                            i1l3033 0BC8                                              i1l3025 0BA8  
                                            i1l3041 0D41                                              i1l3027 0BAC  
                                            i1l3051 0D63                                              i1l3043 0D4D  
                                            i1l3035 0D32                                              i1l3029 0BB1  
                                            i1l3053 0D66                                              i1l3045 0D51  
                                            i1l3061 0D7C                                              i1l3037 0D36  
                                            i1l3063 0D81                                              i1l3055 0D6C  
                                            i1l3047 0D57                                              i1l3039 0D3B  
                                            i1l3231 0B1F                                              i1l3065 0D8A  
                                            i1l3057 0D75                                              i1l3049 0D60  
                                            i1l3233 0B25                                              i1l3059 0D78  
                                            i1l3235 0B29                                              i1l3227 0B1A  
                                            i1l3237 0B2B                                              i1l3229 0B1E  
                                            i1l3239 0B30                                              u250_20 0D41  
                                            u250_21 0D40                        __size_of_atualizaPainelDeLed 0012  
                                            u251_20 0D4A                                              u251_21 0D49  
                                            u252_20 0D57                                              u252_21 0D56  
                                            u253_20 0D60                                              u253_21 0D5F  
                                            u254_20 0D6C                                              u254_21 0D6B  
                                            u247_20 0BA8                                              u255_20 0D75  
                                            u247_21 0BA7                                              u255_21 0D74  
                                            u247_25 0BA4                                              u248_20 0BC8  
                                            u256_20 0D81                                              u248_21 0BC7  
                                            u256_21 0D80                                              u248_25 0BC4  
                                            u257_20 0D8A                                              u249_20 0D3B  
                                            u257_21 0D89                                              u249_21 0D3A  
                                            u276_20 0B1E                                              u276_21 0B1D  
                                            u277_20 0B29                                              u277_21 0B28  
                        __size_of_entraEmModoAjuste 004C                                              _TMR2ON 0092  
                                  __end_of_delay_ms 0800                                    __end_of_delay_us 0A97  
                                    __CFG_PWRTE$OFF 0000                                      ??_exibeNumero0 0020  
                                    ??_exibeNumero1 0020                                      ??_exibeNumero2 0020  
                                    ??_exibeNumero3 0020                                      ??_exibeNumero4 0020  
                                    ??_exibeNumero5 0020                                      ??_exibeNumero6 0020  
                                    ??_exibeNumero7 0020                                      ??_exibeNumero8 0020  
                                    ??_exibeNumero9 0020                                      ??_exibeNumeroA 0020  
                                    ??_exibeNumeroP 0020                                __size_of_giraDisplay 00A9  
                                            ___wmul 0B67                                           ??___lwdiv 0024  
                                         ??___lwmod 002C                                    _desligaPainelLed 09E8  
                              __size_of_iniHardware 0023                                       _estadoDoSinal 00DF  
                                            _strlen 0B3F                                           ??_iniUart 0020  
                                         ??_isdigit 0020                                              saved_w 007E  
                        __size_of_inicializaDisplay 0020                                   _exibeNumeroNenhum 0A07  
                                         ??_sprintf 0033                                  ?_exibeNumeroNenhum 0076  
                          __end_of_trataInterrupcao 0B3F                             __end_of__initialization 0024  
obtemQuantidadeDeSensores@resultadoObtidoDoSensores 00D2                                     ??_ligaPainelLed 0020  
                       __end_of_enviaStringPelaUart 0C0B                                 ??_exibeNumeroNenhum 0020  
                         _testaSaidaPulsadaEm9Volts 0598                                      __pcstackCOMMON 0076  
                __size_of_exibeQuantidadeDeSensores 006E                         __size_of_setaSaidaEm20Volts 0005  
                                    _OPTION_REGbits 0081                           __end_of_exibeNumeroNenhum 0A12  
                __size_of_obtemQuantidadeDeSensores 016E                        __size_of_trataEntradaPulsada 005D  
                                      sprintf@width 003B                                  __size_of_liga_PWM2 001B  
                       __size_of_desligaModuloBoost 0001                                  __size_of_iniTimer1 000C  
                                        __pbssBANK1 00D4                                     _ligaModuloBoost 0003  
                              __size_of_modoTeste20 00BF                                          __pmaintext 03B7  
                                 ?_obtemConvercaoAD 0024                                             ?___wmul 0020  
                                        __pintentry 0004                                             _CCP2CON 001D  
                                ??_obtemConvercaoAD 0026                         ?_testaSaidaPulsadaEm20Volts 0076  
                      __size_of_obtemNivelDeBateria 00DB                                             ?_strlen 0020  
                 __end_of_exibeQuantidadeDeSensores 0DFD                         __end_of_ligaLEDVerdeBateria 095D  
                              __end_of_exibeNumero0 0984                                __end_of_exibeNumero1 098E  
                              __end_of_exibeNumero2 0998                                __end_of_exibeNumero3 09A2  
                              __end_of_exibeNumero4 09AC                                __end_of_exibeNumero5 09B6  
                              __end_of_exibeNumero6 09C0                                __end_of_exibeNumero7 09CA  
                              __end_of_exibeNumero8 09D4                                __end_of_exibeNumero9 09DE  
                              __end_of_exibeNumeroA 09E8                                __end_of_exibeNumeroP 0A07  
                                         ?_delay_ms 0020                                           ?_delay_us 0020  
                          __size_of_operacoesEmTick 003D                                    delay_ms@contador 0024  
                      trataEntradaPulsada@amplitude 0076                   __end_of_obtemQuantidadeDeSensores 03B7  
                                        __stringtab 0800                    __size_of_executaTesteDosSensores 001F  
                           ??_obtemTesteDoGoundBolt 003E                 exibeQuantidadeDeSensores@quantidade 0020  
                                   __size_of___wmul 002A                                             ___lwdiv 0CE5  
                                           ___lwmod 0C0B                                   __end_of_liga_PWM2 0A78  
                                 __end_of_iniTimer1 0A1E                          enviaStringPelaUart@tamanho 0028  
                               _atualizaPainelDeLed 0A1E                   obtemNivelDeBateria@nivelDaBateria 00D2  
                                           __ptext1 0DFD                                             __ptext2 04BD  
                                           __ptext3 095D                                             __ptext4 0959  
                                           __ptext5 0A5D                                             __ptext6 0AB6  
                                           __ptext7 09F2                                             __ptext8 0A07  
                                           __ptext9 09E8                                             _iniUart 0A46  
                                   __size_of_strlen 0028                                           _T1CONbits 0010  
                                           _dpowers 0806                                _flagErrroDeAmplitude 00E2  
                                         _T2CONbits 0012                                             _isdigit 0A30  
                        __size_of_exibeNumeroNenhum 000B                                          _modoTeste9 071A  
                           ?_ligaLEDVermelhoBateria 0076                                          ??_delay_ms 0022  
                                        ??_delay_us 0022                             __end_of_ligaModuloBoost 0004  
                                           _sprintf 0028                                             clrloop0 0973  
                              end_of_initialization 0024                                           _INT0_init 096B  
                              ?_atualizaPainelDeLed 0076                            __end_of_desligaPainelLed 09F2  
                         _flagTempoDeReacaoDoSensor 0074                           checaBotaoAjustes@contador 0020  
                                         _RCSTAbits 0018                                          _respostaOk 00E6  
                                           strlen@s 0020                  __size_of_testaSaidaPulsadaEm9Volts 00C1  
                                         _PORTCbits 0007                               obtemConvercaoAD@canal 002C  
                    __end_of_ligaLEDVermelhoBateria 0961                               obtemConvercaoAD@valor 002D  
                                 liga_PWM2@freq_pwm 0022                                           _TRISAbits 0085  
                                         _TRISBbits 0086                                           _TRISCbits 0087  
                                         _TRISDbits 0088                                           _TRISEbits 0089  
                                  delay_us@contador 0022                               ??_atualizaPainelDeLed 0020  
                                        ?_INT0_init 0076                                          _statusScan 00E8  
                                 ??_operacoesEmTick 0076                                       ??_giraDisplay 0026  
                                 ?_trataInterrupcao 0076                                         _CCP2CONbits 001D  
                                         _TXSTAbits 0098                                  ??_trataInterrupcao 0078  
                             _tempoDeReacaoDoSensor 0070                                       ??_iniHardware 0020  
                               _trataEntradaPulsada 0D32                                      __end_of___wmul 0B91  
         obtemTesteDoGoundBolt@resultadoDoTesteDoGB 00D2                                       delay_ms@valor 0020  
                             __size_of_exibeNumero0 000A                               __size_of_exibeNumero1 000A  
                             __size_of_exibeNumero2 000A                               __size_of_exibeNumero3 000A  
                             __size_of_exibeNumero4 000A                               __size_of_exibeNumero5 000A  
                             __size_of_exibeNumero6 000A                               __size_of_exibeNumero7 000A  
                             __size_of_exibeNumero8 000A                               __size_of_exibeNumero9 000A  
                             __size_of_exibeNumeroA 000A                               __size_of_exibeNumeroP 000B  
                 __end_of_testaSaidaPulsadaEm9Volts 0659                                      __end_of_strlen 0B67  
                                       ?_modoTeste9 0076                                 start_initialization 0015  
                                     delay_us@valor 0020                                ?_trataEntradaPulsada 0076  
                                  ?_ligaModuloBoost 0076                             _executaTesteDosSensores 0A97  
                               _obtemNivelDeBateria 04BD                               __end_of_ligaPainelLed 09FC  
                                      _exibeNumero0 097A                                        _exibeNumero1 0984  
                                      _exibeNumero2 098E                                        _exibeNumero3 0998  
                                      _exibeNumero4 09A2                                        _exibeNumero5 09AC  
                                      _exibeNumero6 09B6                                        _exibeNumero7 09C0  
                                      _exibeNumero8 09CA                                        _exibeNumero9 09D4  
                                      _exibeNumeroA 09DE                                        _exibeNumeroP 09FC  
                               __end_of_giraDisplay 0F41                                            ??___wmul 0024  
                      __size_of_enviaStringPelaUart 003D                          __end_of_setaSaidaEm20Volts 0966  
                              ?_obtemNivelDeBateria 0076                                            ??_strlen 0022  
                               __end_of_iniHardware 0B1A                                         __pbssCOMMON 0070  
                                         ___latbits 0002                                       __pcstackBANK0 0020  
                                     __pcstackBANK1 00A0                                       __pcstackBANK3 0190  
                        __end_of_desligaModuloBoost 0959                           __size_of_obtemConvercaoAD 004B  
                             ??_trataEntradaPulsada 0076                   obtemQuantidadeDeSensores@mensagem 00A0  
                                      _isdigit$1225 0020                                   __size_of_delay_ms 0027  
                                 __size_of_delay_us 001F                                         ??_INT0_init 0020  
                                       sprintf@flag 003A                                         sprintf@prec 0036  
                                     ??_modoTeste20 003F                                    ___lwdiv@dividend 0022  
                               __size_of_modoTeste9 00BF                      __size_of_obtemTesteDoGoundBolt 009B  
                     __end_of_obtemTesteDoGoundBolt 0E98                                            ?___lwdiv 0020  
                                          ?___lwmod 0028                               ??_obtemNivelDeBateria 003E  
                                 _checaBotaoAjustes 0AD6                                           __pstrings 0800  
                                          ?_iniUart 0076                                           _liga_PWM2 0A5D  
                                ?_checaBotaoAjustes 0076                                           _iniTimer1 0A12  
                                          ?_isdigit 0076                          ?_exibeQuantidadeDeSensores 0076  
                         ??_executaTesteDosSensores 003F                           _quantidadeDeSensoresEm20V 00E0  
                                  ___lwdiv@quotient 0026                                            ?_sprintf 002E  
                               ??_checaBotaoAjustes 0020                        __size_of_ligaLEDVerdeBateria 0004  
                        ?_obtemQuantidadeDeSensores 0076                                   ?_desligaPainelLed 0076  
                                 interrupt_function 0004                                      ___wmul@product 0024  
                                       _giraDisplay 0E98                                           clear_ram0 0972  
                                          _PIE1bits 008C                                  ??_desligaPainelLed 0020  
                                          _PIR1bits 000C                                      _numeroDePulsos 0072  
                                       _iniHardware 0AF7                                 __end_of_modoTeste20 1000  
                         __end_of_checaBotaoAjustes 0AF7                                    liga_PWM2@freqPWM 0021  
                                        _ADCON0bits 001F                                         __stringbase 0805  
                                        _ADCON1bits 009F                                   ___wmul@multiplier 0020  
                                        ?_liga_PWM2 0076                                          ?_iniTimer1 0076  
                                   _operacoesEmTick 0B91                              enviaStringPelaUart@str 0026  
                                     _tensaoDeSaida 00E3                     __end_of_executaTesteDosSensores 0AB6  
                                  __size_of___lwdiv 004D                                    __size_of___lwmod 0043  
                         __size_of_trataInterrupcao 0025                                  __end_of__stringtab 0806  
              obtemNivelDeBateria@tempoDeAmostragem 00D8                                          sprintf@val 0038  
                                  __size_of_iniUart 0017                                        ??_modoTeste9 003F  
                       __end_of_atualizaPainelDeLed 0A30                                    __size_of_isdigit 0016  
                                          _delay_ms 07D9                                            _delay_us 0A78  
                                   ___lwdiv@divisor 0020                                    _obtemConvercaoAD 0C4E  
                                   ___lwdiv@counter 0025                                            __ptext10 0A46  
                                          __ptext11 0A12                                            __ptext20 071A  
                                          __ptext12 0AF7                                            __ptext21 0966  
                                          __ptext13 0E98                                            __ptext30 0CE5  
                                          __ptext22 0F41                                            __ptext14 09FC  
                                          __ptext31 0C4E                                            __ptext23 0961  
                                          __ptext15 0A97                                            __ptext40 09AC  
                                          __ptext32 0A78                                            __ptext24 0249  
                                          __ptext16 0598                                            __ptext41 09A2  
                                          __ptext33 0BCE                                            __ptext25 0B3F  
                                          __ptext17 0659                                            __ptext50 096B  
                                          __ptext42 0998                                            __ptext34 0D8F  
                                          __ptext26 0028                                            __ptext18 0A1E  
                                          __ptext51 0B1A                                            __ptext43 098E  
                                          __ptext35 09DE                                            __ptext27 0A30  
                                          __ptext19 0C99                                            __ptext52 0D32  
                                          __ptext44 0984                                            __ptext36 09D4  
                                          __ptext28 0B67                                            __ptext53 0B91  
                                          __ptext45 097A                                            __ptext37 09CA  
                                          __ptext29 0C0B                                            __ptext46 07D9  
                                          __ptext38 09C0                                            __ptext47 0003  
                                          __ptext39 09B6                                            __ptext48 0958  
                                          __ptext49 0AD6                                 _enviaStringPelaUart 0BCE  
                                  __size_of_sprintf 0221                                       __size_of_main 0106  
                                       _modoTeste20 0F41                      operacoesEmTick@contadorDe100ms 00D6  
                     obtemTesteDoGoundBolt@mensagem 00A0                                  __end_of_modoTeste9 07D9  
                        __size_of_checaBotaoAjustes 0021                                ?_enviaStringPelaUart 0026  
                           __end_of_operacoesEmTick 0BCE                        ??_testaSaidaPulsadaEm20Volts 0026  
                                       ??_liga_PWM2 0020                                         ??_iniTimer1 0020  
                                        _INTCONbits 000B                          ?_testaSaidaPulsadaEm9Volts 0076  
                                          isdigit@c 0021                                   _pulsosSemResposta 00DC  
                                _setaSaidaEm20Volts 0961                                            intlevel1 0000  
                                         sprintf@ap 0037                                           sprintf@sp 002E  
                                  ___lwmod@dividend 002A                                 ?_setaSaidaEm20Volts 0076  
                                _desligaModuloBoost 0958                            __size_of_ligaModuloBoost 0001  
                                         stringcode 0800                 __size_of_testaSaidaPulsadaEm20Volts 00C1  
                                  _numeroDeSensores 0075                         obtemNivelDeBateria@mensagem 00A0  
                             ??_enviaStringPelaUart 002A                            ??_ligaLEDVermelhoBateria 0020  
                               _ligaLEDVerdeBateria 0959                                 ?_desligaModuloBoost 0076  
                       __end_of_trataEntradaPulsada 0D8F                                            sprintf@c 003D  
                                          sprintf@f 0030                                ??_setaSaidaEm20Volts 0020  
                                   ___lwmod@divisor 0028                                            strlen@cp 0024  
                                   ___lwmod@counter 002D                         ??_exibeQuantidadeDeSensores 0020  
                            __size_of_ligaPainelLed 000A                                            stringdir 0800  
                                          stringtab 0800                                   _setaSaidaEm9Volts 0966  
                              ?_ligaLEDVerdeBateria 0076                                ??_desligaModuloBoost 0020  
                                ?_setaSaidaEm9Volts 0076                         ??_obtemQuantidadeDeSensores 003E  
                                      ?_giraDisplay 0076                                   _entraEmModoAjuste 0C99  
                               ??_setaSaidaEm9Volts 0020                         __end_of_obtemNivelDeBateria 0598  
                                ?_entraEmModoAjuste 0076  
